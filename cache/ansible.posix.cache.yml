---
modules:
  - name: acl
    fqcn: ansible.posix.acl
    collection: ansible.posix
    breaking: true
    breaking_params: true
    params_source: [ { name: "default", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "entity", type: "raw" }, { name: "entry", type: "raw" }, { name: "etype", type: "raw", choices: ["group", "mask", "other", "user"] }, { name: "follow", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "path", aliases: ["name"], required: true, type: "path" }, { name: "permissions", type: "raw" }, { name: "recalculate_mask", type: "raw", default: "default", choices: ["default", "mask", "no_mask"] }, { name: "recursive", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", type: "raw", default: "query", choices: ["absent", "present", "query"] }, { name: "use_nfsv4_acls", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_source: [ { name: "acl", type: "list(raw)" } ]
    params_target: [ { name: "default", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "entity", type: "string" }, { name: "entry", type: "string" }, { name: "etype", type: "string", choices: ["group", "mask", "other", "user"] }, { name: "follow", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "path", aliases: ["name"], required: true, type: "path" }, { name: "permissions", type: "string" }, { name: "recalculate_mask", type: "string", default: "default", choices: ["default", "mask", "no_mask"] }, { name: "recursive", aliases: ["recurse"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", type: "string", default: "query", choices: ["absent", "present", "query"] }, { name: "use_nfsv4_acls", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_target: [ { name: "acl", type: "list(string)" } ]

  - name: at
    fqcn: ansible.posix.at
    collection: ansible.posix
    params_source: [ { name: "command", type: "string" }, { name: "count", required: true, type: "integer" }, { name: "script_file", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "unique", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "units", required: true, type: "string", choices: ["days", "hours", "minutes", "weeks"] } ]
    params_target: [ { name: "command", type: "string" }, { name: "count", type: "integer" }, { name: "script_file", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "unique", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "units", type: "string", choices: ["days", "hours", "minutes", "weeks"] } ]

  - name: authorized_key
    fqcn: ansible.posix.authorized_key
    collection: ansible.posix
    breaking: true
    breaking_params: true
    params_source: [ { name: "comment", type: "string" }, { name: "exclusive", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "key", required: true, type: "string" }, { name: "key_options", type: "raw" }, { name: "manage_dir", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "path", type: "path" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "user", required: true, type: "string" }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_source: [ { name: "exclusive", type: "boolean" }, { name: "key", type: "string" }, { name: "key_option", type: "string" }, { name: "keyfile", type: "string" }, { name: "manage_dir", type: "boolean" }, { name: "path", type: "string" }, { name: "state", type: "string" }, { name: "unique", type: "boolean" }, { name: "user", type: "string" }, { name: "validate_certs", type: "boolean" } ]
    params_target: [ { name: "comment", type: "string" }, { name: "exclusive", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "key", required: true, type: "string" }, { name: "key_options", type: "string" }, { name: "manage_dir", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "path", type: "path" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "user", required: true, type: "string" }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_target: [ { name: "exclusive", type: "boolean" }, { name: "key", type: "string" }, { name: "key_option", type: "string" }, { name: "keyfile", type: "string" }, { name: "manage_dir", type: "boolean" }, { name: "path", type: "string" }, { name: "state", type: "string" }, { name: "unique", type: "boolean" }, { name: "user", type: "string" }, { name: "validate_certs", type: "boolean" } ]

  - name: firewalld
    fqcn: ansible.posix.firewalld
    collection: ansible.posix
    breaking: true
    breaking_params: true
    params_source: [ { name: "icmp_block", type: "string" }, { name: "icmp_block_inversion", type: "string" }, { name: "immediate", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "interface", type: "string" }, { name: "masquerade", type: "string" }, { name: "offline", type: "boolean", choices: ["no", "yes"] }, { name: "permanent", type: "boolean", choices: ["no", "yes"] }, { name: "port", type: "string" }, { name: "rich_rule", type: "string" }, { name: "service", type: "string" }, { name: "source", type: "string" }, { name: "state", required: true, type: "string", choices: ["absent", "disabled", "enabled", "present"] }, { name: "timeout", type: "integer", default: 0 }, { name: "zone", type: "string" } ]
    params_target: [ { name: "icmp_block", type: "string" }, { name: "icmp_block_inversion", type: "string" }, { name: "immediate", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "interface", type: "string" }, { name: "masquerade", type: "string" }, { name: "offline", type: "boolean", choices: ["no", "yes"] }, { name: "permanent", type: "boolean", choices: ["no", "yes"] }, { name: "port", type: "string" }, { name: "port_forward", type: "list(dictionary)", params: [ { name: "port", required: true, type: "string" }, { name: "proto", required: true, type: "string", choices: ["tcp", "udp"] }, { name: "toaddr", type: "string" }, { name: "toport", required: true, type: "string" } ] }, { name: "rich_rule", type: "string" }, { name: "service", type: "string" }, { name: "source", type: "string" }, { name: "state", required: true, type: "string", choices: ["absent", "disabled", "enabled", "present"] }, { name: "target", type: "string", choices: ["%%REJECT%%", "ACCEPT", "DROP", "default"] }, { name: "timeout", type: "integer", default: 0 }, { name: "zone", type: "string" } ]

  - name: mount
    fqcn: ansible.posix.mount
    collection: ansible.posix
    breaking: true
    breaking_params: true
    params_source: [ { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "boot", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "dump", type: "string", default: 0 }, { name: "fstab", type: "string" }, { name: "fstype", type: "string" }, { name: "opts", type: "string" }, { name: "passno", type: "string", default: 0 }, { name: "path", aliases: ["name"], required: true, type: "path" }, { name: "src", type: "path" }, { name: "state", required: true, type: "string", choices: ["absent", "mounted", "present", "remounted", "unmounted"] } ]
    params_target: [ { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "boot", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "dump", type: "string", default: 0 }, { name: "fstab", type: "string" }, { name: "fstype", type: "string" }, { name: "opts", type: "string" }, { name: "passno", type: "string", default: 0 }, { name: "path", aliases: ["name"], required: true, type: "path" }, { name: "src", type: "path" }, { name: "state", required: true, type: "string", choices: ["absent", "mounted", "present", "remounted", "unmounted"] } ]

  - name: patch
    fqcn: ansible.posix.patch
    collection: ansible.posix
    breaking: true
    breaking_params: true
    params_source: [ { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "basedir", type: "path" }, { name: "binary", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "dest", aliases: ["originalfile"], type: "path" }, { name: "remote_src", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "src", aliases: ["patchfile"], required: true, type: "path" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "strip", type: "integer", default: 0 } ]
    params_target: [ { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "basedir", type: "path" }, { name: "binary", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "dest", aliases: ["originalfile"], type: "path" }, { name: "ignore_whitespace", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "remote_src", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "src", aliases: ["patchfile"], required: true, type: "path" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "strip", type: "integer", default: 0 } ]

  - name: seboolean
    fqcn: ansible.posix.seboolean
    collection: ansible.posix
    breaking: true
    breaking_params: true
    params_source: [ { name: "ignore_selinux_state", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", required: true, type: "raw" }, { name: "persistent", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", required: true, type: "boolean", choices: ["no", "yes"] } ]
    params_target: [ { name: "ignore_selinux_state", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", required: true, type: "string" }, { name: "persistent", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", required: true, type: "boolean", choices: ["no", "yes"] } ]

  - name: selinux
    fqcn: ansible.posix.selinux
    collection: ansible.posix
    breaking: true
    breaking_params: true
    params_source: [ { name: "configfile", aliases: ["conf", "file"], type: "raw", default: "/etc/selinux/config" }, { name: "policy", type: "raw" }, { name: "state", required: true, type: "raw", choices: ["disabled", "enforcing", "permissive"] } ]
    return_source: [ { name: "configfile", type: "string" }, { name: "msg", type: "string" }, { name: "policy", type: "string" }, { name: "reboot_required", type: "boolean" }, { name: "state", type: "string" } ]
    params_target: [ { name: "configfile", aliases: ["conf", "file"], type: "string", default: "/etc/selinux/config" }, { name: "policy", type: "string" }, { name: "state", required: true, type: "string", choices: ["disabled", "enforcing", "permissive"] } ]
    return_target: [ { name: "configfile", type: "string" }, { name: "msg", type: "string" }, { name: "policy", type: "string" }, { name: "reboot_required", type: "boolean" }, { name: "state", type: "string" } ]

  - name: synchronize
    fqcn: ansible.posix.synchronize
    collection: ansible.posix
    breaking: true
    breaking_params: true
    params_source: [ { name: "archive", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "checksum", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "compress", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "copy_links", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "delete", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "dest", required: true, type: "string" }, { name: "dest_port", type: "integer" }, { name: "dirs", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "existing_only", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "boolean", choices: ["no", "yes"] }, { name: "link_dest", type: "list(raw)" }, { name: "links", type: "boolean", choices: ["no", "yes"] }, { name: "mode", type: "string", default: "push", choices: ["pull", "push"] }, { name: "owner", type: "boolean", choices: ["no", "yes"] }, { name: "partial", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "perms", type: "boolean", choices: ["no", "yes"] }, { name: "private_key", type: "path" }, { name: "recursive", type: "boolean", choices: ["no", "yes"] }, { name: "rsync_opts", type: "list(raw)" }, { name: "rsync_path", type: "string" }, { name: "rsync_timeout", type: "integer", default: 0 }, { name: "set_remote_user", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "src", required: true, type: "string" }, { name: "times", type: "boolean", choices: ["no", "yes"] }, { name: "use_ssh_args", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "verify_host", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    params_target: [ { name: "archive", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "checksum", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "compress", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "copy_links", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "delay_updates", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "delete", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "dest", required: true, type: "string" }, { name: "dest_port", type: "integer" }, { name: "dirs", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "existing_only", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "boolean", choices: ["no", "yes"] }, { name: "link_dest", type: "list(string)" }, { name: "links", type: "boolean", choices: ["no", "yes"] }, { name: "mode", type: "string", default: "push", choices: ["pull", "push"] }, { name: "owner", type: "boolean", choices: ["no", "yes"] }, { name: "partial", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "perms", type: "boolean", choices: ["no", "yes"] }, { name: "private_key", type: "path" }, { name: "recursive", type: "boolean", choices: ["no", "yes"] }, { name: "rsync_opts", type: "list(string)" }, { name: "rsync_path", type: "string" }, { name: "rsync_timeout", type: "integer", default: 0 }, { name: "set_remote_user", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "src", required: true, type: "string" }, { name: "ssh_connection_multiplexing", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "times", type: "boolean", choices: ["no", "yes"] }, { name: "use_ssh_args", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "verify_host", type: "boolean", default: "no", choices: ["no", "yes"] } ]

  - name: sysctl
    fqcn: ansible.posix.sysctl
    collection: ansible.posix
    breaking: true
    breaking_params: true
    params_source: [ { name: "ignoreerrors", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", aliases: ["key"], required: true, type: "raw" }, { name: "reload", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "state", type: "raw", default: "present", choices: ["absent", "present"] }, { name: "sysctl_file", type: "raw", default: "/etc/sysctl.conf" }, { name: "sysctl_set", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "value", aliases: ["val"], type: "raw" } ]
    params_target: [ { name: "ignoreerrors", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", aliases: ["key"], required: true, type: "string" }, { name: "reload", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "sysctl_file", type: "path", default: "/etc/sysctl.conf" }, { name: "sysctl_set", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "value", aliases: ["val"], type: "string" } ]

