---
modules:
  - name: add_host
    fqcn: ansible.builtin.add_host
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "groups", aliases: ["group", "groupname"], type: "list(raw)" }, { name: "name", aliases: ["host", "hostname"], required: true, type: "string" } ]
    params_target: [ { name: "groups", aliases: ["group", "groupname"], type: "list(string)" }, { name: "name", aliases: ["host", "hostname"], required: true, type: "string" } ]

  - name: apt
    fqcn: ansible.builtin.apt
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "allow_unauthenticated", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "autoclean", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "autoremove", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "cache_valid_time", type: "raw", default: 0 }, { name: "deb", type: "raw" }, { name: "default_release", type: "raw" }, { name: "dpkg_options", type: "raw", default: "force-confdef,force-confold" }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force_apt_get", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "install_recommends", aliases: ["install-recommends"], type: "boolean", choices: ["no", "yes"] }, { name: "name", aliases: ["package", "pkg"], type: "raw" }, { name: "only_upgrade", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "policy_rc_d", type: "integer" }, { name: "purge", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", type: "raw", default: "present", choices: ["absent", "build-dep", "fixed", "latest", "present"] }, { name: "update_cache", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "upgrade", type: "raw", default: "no", choices: ["dist", "full", "no", "safe", "yes"] } ]
    return_source: [ { name: "cache_update_time", type: "integer" }, { name: "cache_updated", type: "boolean" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" } ]
    params_target: [ { name: "allow_downgrade", aliases: ["allow-downgrade", "allow_downgrades", "allow-downgrades"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "allow_unauthenticated", aliases: ["allow-unauthenticated"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "autoclean", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "autoremove", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "cache_valid_time", type: "integer", default: 0 }, { name: "deb", type: "path" }, { name: "default_release", aliases: ["default-release"], type: "string" }, { name: "dpkg_options", type: "string", default: "force-confdef,force-confold" }, { name: "fail_on_autoremove", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force_apt_get", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "install_recommends", aliases: ["install-recommends"], type: "boolean", choices: ["no", "yes"] }, { name: "lock_timeout", type: "integer", default: 60 }, { name: "name", aliases: ["package", "pkg"], type: "list(string)" }, { name: "only_upgrade", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "policy_rc_d", type: "integer" }, { name: "purge", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", type: "string", default: "present", choices: ["absent", "build-dep", "fixed", "latest", "present"] }, { name: "update_cache", aliases: ["update-cache"], type: "boolean", choices: ["no", "yes"] }, { name: "update_cache_retries", type: "integer", default: 5 }, { name: "update_cache_retry_max_delay", type: "integer", default: 12 }, { name: "upgrade", type: "string", default: "no", choices: ["dist", "full", "no", "safe", "yes"] } ]
    return_target: [ { name: "cache_update_time", type: "integer" }, { name: "cache_updated", type: "boolean" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" } ]

  - name: apt_key
    fqcn: ansible.builtin.apt_key
    collection: ansible.builtin
    params_source: [ { name: "data", type: "raw" }, { name: "file", type: "raw" }, { name: "id", type: "raw" }, { name: "keyring", type: "raw" }, { name: "keyserver", type: "raw" }, { name: "state", type: "raw", default: "present", choices: ["absent", "present"] }, { name: "url", type: "raw" }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    params_target: [ { name: "data", type: "string" }, { name: "file", type: "path" }, { name: "id", type: "string" }, { name: "keyring", type: "path" }, { name: "keyserver", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "url", type: "string" }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_target: [ { name: "after", type: "list(string)" }, { name: "before", type: "list(string)" }, { name: "fp", type: "string" }, { name: "id", type: "string" }, { name: "key_id", type: "string" }, { name: "short_id", type: "string" } ]

  - name: apt_repository
    fqcn: ansible.builtin.apt_repository
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "codename", type: "raw" }, { name: "filename", type: "raw" }, { name: "mode", type: "raw", default: 0644 }, { name: "repo", required: true, type: "raw" }, { name: "state", type: "raw", default: "present", choices: ["absent", "present"] }, { name: "update_cache", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    params_target: [ { name: "codename", type: "string" }, { name: "filename", type: "string" }, { name: "install_python_apt", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "mode", type: "raw" }, { name: "repo", required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "update_cache", aliases: ["update-cache"], type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "update_cache_retries", type: "integer", default: 5 }, { name: "update_cache_retry_max_delay", type: "integer", default: 12 }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]

  - name: assemble
    fqcn: ansible.builtin.assemble
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "decrypt", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "delimiter", type: "string" }, { name: "dest", required: true, type: "path" }, { name: "group", type: "string" }, { name: "ignore_hidden", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "mode", type: "string" }, { name: "owner", type: "string" }, { name: "regexp", type: "string" }, { name: "remote_src", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "selevel", type: "string", default: "s0" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "src", required: true, type: "path" }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate", type: "string" } ]
    params_target: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "decrypt", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "delimiter", type: "string" }, { name: "dest", required: true, type: "path" }, { name: "group", type: "string" }, { name: "ignore_hidden", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "mode", type: "raw" }, { name: "owner", type: "string" }, { name: "regexp", type: "string" }, { name: "remote_src", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "selevel", type: "string" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "src", required: true, type: "path" }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate", type: "string" } ]

  - name: assert
    fqcn: ansible.builtin.assert
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "fail_msg", aliases: ["msg"], type: "string" }, { name: "quiet", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "success_msg", type: "string" }, { name: "that", required: true, type: "list(raw)" } ]
    params_target: [ { name: "fail_msg", aliases: ["msg"], type: "string" }, { name: "quiet", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "success_msg", type: "string" }, { name: "that", required: true, type: "list(string)" } ]

  - name: async_status
    fqcn: ansible.builtin.async_status
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "jid", required: true, type: "string" }, { name: "mode", type: "string", default: "status", choices: ["cleanup", "status"] } ]
    return_source: [ { name: "ansible_job_id", type: "string" }, { name: "finished", type: "integer" }, { name: "started", type: "integer" } ]
    params_target: [ { name: "jid", required: true, type: "string" }, { name: "mode", type: "string", default: "status", choices: ["cleanup", "status"] } ]
    return_target: [ { name: "ansible_job_id", type: "string" }, { name: "erased", type: "string" }, { name: "finished", type: "integer" }, { name: "started", type: "integer" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" } ]

  - name: blockinfile
    fqcn: ansible.builtin.blockinfile
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "block", aliases: ["content"], type: "string", default: "" }, { name: "create", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "insertafter", type: "string", default: "EOF", choices: ["*regex*", "EOF"] }, { name: "insertbefore", type: "string", choices: ["*regex*", "BOF"] }, { name: "marker", type: "string", default: "# {mark} ANSIBLE MANAGED BLOCK" }, { name: "marker_begin", type: "string", default: "BEGIN" }, { name: "marker_end", type: "string", default: "END" }, { name: "mode", type: "string" }, { name: "owner", type: "string" }, { name: "path", aliases: ["dest", "destfile", "name"], required: true, type: "path" }, { name: "selevel", type: "string", default: "s0" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate", type: "string" } ]
    params_target: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "block", aliases: ["content"], type: "string", default: "" }, { name: "create", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "insertafter", type: "string", default: "EOF", choices: ["*regex*", "EOF"] }, { name: "insertbefore", type: "string", choices: ["*regex*", "BOF"] }, { name: "marker", type: "string", default: "# {mark} ANSIBLE MANAGED BLOCK" }, { name: "marker_begin", type: "string", default: "BEGIN" }, { name: "marker_end", type: "string", default: "END" }, { name: "mode", type: "raw" }, { name: "owner", type: "string" }, { name: "path", aliases: ["dest", "destfile", "name"], required: true, type: "path" }, { name: "selevel", type: "string" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate", type: "string" } ]

  - name: command
    fqcn: ansible.builtin.command
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "argv", type: "list(raw)" }, { name: "chdir", type: "path" }, { name: "cmd", type: "string" }, { name: "creates", type: "path" }, { name: "free_form", type: "raw" }, { name: "removes", type: "path" }, { name: "stdin", type: "raw" }, { name: "stdin_add_newline", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "strip_empty_ends", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "warn", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_source: [ { name: "cmd", type: "list(raw)" }, { name: "delta", type: "string" }, { name: "end", type: "string" }, { name: "start", type: "string" } ]
    params_target: [ { name: "argv", type: "list(string)" }, { name: "chdir", type: "path" }, { name: "cmd", type: "string" }, { name: "creates", type: "path" }, { name: "free_form", type: "string" }, { name: "removes", type: "path" }, { name: "stdin", type: "string" }, { name: "stdin_add_newline", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "strip_empty_ends", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "warn", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_target: [ { name: "cmd", type: "list(string)" }, { name: "delta", type: "string" }, { name: "end", type: "string" }, { name: "msg", type: "boolean" }, { name: "rc", type: "integer" }, { name: "start", type: "string" }, { name: "stderr", type: "string" }, { name: "stderr_lines", type: "list(string)" }, { name: "stdout", type: "string" }, { name: "stdout_lines", type: "list(string)" } ]

  - name: copy
    fqcn: ansible.builtin.copy
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "checksum", type: "string" }, { name: "content", type: "string" }, { name: "decrypt", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "dest", required: true, type: "path" }, { name: "directory_mode", type: "raw" }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force", aliases: ["thirsty"], type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "local_follow", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "mode", type: "path" }, { name: "owner", type: "string" }, { name: "remote_src", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "selevel", type: "string", default: "s0" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "src", type: "path" }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate", type: "string" } ]
    return_source: [ { name: "backup_file", type: "string" }, { name: "checksum", type: "string" }, { name: "dest", type: "string" }, { name: "gid", type: "integer" }, { name: "group", type: "string" }, { name: "md5sum", type: "string" }, { name: "mode", type: "string" }, { name: "owner", type: "string" }, { name: "size", type: "integer" }, { name: "src", type: "string" }, { name: "state", type: "string" }, { name: "uid", type: "integer" } ]
    params_target: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "checksum", type: "string" }, { name: "content", type: "string" }, { name: "decrypt", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "dest", required: true, type: "path" }, { name: "directory_mode", type: "raw" }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force", aliases: ["thirsty"], type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "local_follow", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "mode", type: "raw" }, { name: "owner", type: "string" }, { name: "remote_src", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "selevel", type: "string" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "src", type: "path" }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate", type: "string" } ]
    return_target: [ { name: "backup_file", type: "string" }, { name: "checksum", type: "string" }, { name: "dest", type: "string" }, { name: "gid", type: "integer" }, { name: "group", type: "string" }, { name: "md5sum", type: "string" }, { name: "mode", type: "string" }, { name: "owner", type: "string" }, { name: "size", type: "integer" }, { name: "src", type: "string" }, { name: "state", type: "string" }, { name: "uid", type: "integer" } ]

  - name: cron
    fqcn: ansible.builtin.cron
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "cron_file", type: "string" }, { name: "day", aliases: ["dom"], type: "string", default: "*" }, { name: "disabled", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "env", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "hour", type: "string", default: "*" }, { name: "insertafter", type: "string" }, { name: "insertbefore", type: "string" }, { name: "job", aliases: ["value"], type: "string" }, { name: "minute", type: "string", default: "*" }, { name: "month", type: "string", default: "*" }, { name: "name", type: "string" }, { name: "reboot", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "special_time", type: "string", choices: ["annually", "daily", "hourly", "monthly", "reboot", "weekly", "yearly"] }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "user", type: "string" }, { name: "weekday", aliases: ["dow"], type: "string", default: "*" } ]
    params_target: [ { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "cron_file", type: "path" }, { name: "day", aliases: ["dom"], type: "string", default: "*" }, { name: "disabled", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "env", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "hour", type: "string", default: "*" }, { name: "insertafter", type: "string" }, { name: "insertbefore", type: "string" }, { name: "job", aliases: ["value"], type: "string" }, { name: "minute", type: "string", default: "*" }, { name: "month", type: "string", default: "*" }, { name: "name", required: true, type: "string" }, { name: "special_time", type: "string", choices: ["annually", "daily", "hourly", "monthly", "reboot", "weekly", "yearly"] }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "user", type: "string" }, { name: "weekday", aliases: ["dow"], type: "string", default: "*" } ]

  - name: debconf
    fqcn: ansible.builtin.debconf
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "name", aliases: ["pkg"], required: true, type: "string" }, { name: "question", aliases: ["selection", "setting"], type: "string" }, { name: "unseen", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "value", aliases: ["answer"], type: "string" }, { name: "vtype", type: "string", choices: ["boolean", "error", "multiselect", "note", "password", "seen", "select", "string", "text", "title"] } ]
    params_target: [ { name: "name", aliases: ["pkg"], required: true, type: "string" }, { name: "question", aliases: ["selection", "setting"], type: "string" }, { name: "unseen", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "value", aliases: ["answer"], type: "string" }, { name: "vtype", type: "string", choices: ["boolean", "error", "multiselect", "note", "password", "seen", "select", "string", "text", "title"] } ]

  - name: debug
    fqcn: ansible.builtin.debug
    collection: ansible.builtin
    params_source: [ { name: "msg", type: "string", default: "Hello world!" }, { name: "var", type: "string" }, { name: "verbosity", type: "integer", default: 0 } ]
    params_target: [ { name: "msg", type: "string", default: "Hello world!" }, { name: "var", type: "string" }, { name: "verbosity", type: "integer", default: 0 } ]

  - name: dnf
    fqcn: ansible.builtin.dnf
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "allow_downgrade", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "autoremove", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "bugfix", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "conf_file", type: "raw" }, { name: "disable_excludes", type: "raw" }, { name: "disable_gpg_check", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "disable_plugin", type: "raw" }, { name: "disablerepo", type: "raw" }, { name: "download_dir", type: "string" }, { name: "download_only", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "enable_plugin", type: "raw" }, { name: "enablerepo", type: "raw" }, { name: "exclude", type: "raw" }, { name: "install_repoquery", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "install_weak_deps", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "installroot", type: "raw", default: "/" }, { name: "list", type: "raw" }, { name: "lock_timeout", type: "integer", default: 30 }, { name: "name", aliases: ["pkg"], required: true, type: "list(raw)" }, { name: "releasever", type: "raw" }, { name: "security", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "skip_broken", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", type: "raw", choices: ["absent", "installed", "latest", "present", "removed"] }, { name: "update_cache", aliases: ["expire-cache"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "update_only", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    params_target: [ { name: "allow_downgrade", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "allowerasing", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "autoremove", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "bugfix", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "cacheonly", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "conf_file", type: "string" }, { name: "disable_excludes", type: "string" }, { name: "disable_gpg_check", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "disable_plugin", type: "list(string)" }, { name: "disablerepo", type: "list(string)" }, { name: "download_dir", type: "string" }, { name: "download_only", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "enable_plugin", type: "list(string)" }, { name: "enablerepo", type: "list(string)" }, { name: "exclude", type: "list(string)" }, { name: "install_repoquery", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "install_weak_deps", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "installroot", type: "string", default: "/" }, { name: "list", type: "string" }, { name: "lock_timeout", type: "integer", default: 30 }, { name: "name", aliases: ["pkg"], required: true, type: "list(string)" }, { name: "nobest", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "releasever", type: "string" }, { name: "security", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "skip_broken", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", type: "string", choices: ["absent", "installed", "latest", "present", "removed"] }, { name: "update_cache", aliases: ["expire-cache"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "update_only", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]

  - name: dpkg_selections
    fqcn: ansible.builtin.dpkg_selections
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "name", required: true, type: "raw" }, { name: "selection", required: true, type: "raw", choices: ["deinstall", "hold", "install", "purge"] } ]
    params_target: [ { name: "name", required: true, type: "string" }, { name: "selection", required: true, type: "string", choices: ["deinstall", "hold", "install", "purge"] } ]

  - name: expect
    fqcn: ansible.builtin.expect
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "chdir", type: "path" }, { name: "command", required: true, type: "raw" }, { name: "creates", type: "path" }, { name: "echo", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "removes", type: "path" }, { name: "responses", required: true, type: "dictionary" }, { name: "timeout", type: "integer", default: 30 } ]
    params_target: [ { name: "chdir", type: "path" }, { name: "command", required: true, type: "string" }, { name: "creates", type: "path" }, { name: "echo", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "removes", type: "path" }, { name: "responses", required: true, type: "dictionary" }, { name: "timeout", type: "integer", default: 30 } ]

  - name: fail
    fqcn: ansible.builtin.fail
    collection: ansible.builtin
    params_source: [ { name: "msg", type: "string", default: "Failed as requested from task" } ]
    params_target: [ { name: "msg", type: "string", default: "Failed as requested from task" } ]

  - name: fetch
    fqcn: ansible.builtin.fetch
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "dest", required: true, type: "raw" }, { name: "fail_on_missing", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "flat", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "src", required: true, type: "raw" }, { name: "validate_checksum", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    params_target: [ { name: "dest", required: true, type: "string" }, { name: "fail_on_missing", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "flat", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "src", required: true, type: "string" }, { name: "validate_checksum", type: "boolean", default: "yes", choices: ["no", "yes"] } ]

  - name: file
    fqcn: ansible.builtin.file
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "access_time", type: "string" }, { name: "access_time_format", type: "string", default: "%Y%m%d%H%M.%S" }, { name: "attributes", aliases: ["attr"], type: "string" }, { name: "follow", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "mode", type: "string" }, { name: "modification_time", type: "string" }, { name: "modification_time_format", type: "string", default: "%Y%m%d%H%M.%S" }, { name: "owner", type: "string" }, { name: "path", aliases: ["dest", "name"], required: true, type: "path" }, { name: "recurse", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "selevel", type: "string", default: "s0" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "src", type: "path" }, { name: "state", type: "string", default: "file", choices: ["absent", "directory", "file", "hard", "link", "touch"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    params_target: [ { name: "access_time", type: "string" }, { name: "access_time_format", type: "string", default: "%Y%m%d%H%M.%S" }, { name: "attributes", aliases: ["attr"], type: "string" }, { name: "follow", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "mode", type: "raw" }, { name: "modification_time", type: "string" }, { name: "modification_time_format", type: "string", default: "%Y%m%d%H%M.%S" }, { name: "owner", type: "string" }, { name: "path", aliases: ["dest", "name"], required: true, type: "path" }, { name: "recurse", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "selevel", type: "string" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "src", type: "path" }, { name: "state", type: "string", default: "file", choices: ["absent", "directory", "file", "hard", "link", "touch"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_target: [ { name: "dest", type: "string" }, { name: "path", type: "string" } ]

  - name: find
    fqcn: ansible.builtin.find
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "age", type: "string" }, { name: "age_stamp", type: "string", default: "mtime", choices: ["atime", "ctime", "mtime"] }, { name: "contains", type: "string" }, { name: "depth", type: "integer" }, { name: "excludes", aliases: ["exclude"], type: "list(raw)" }, { name: "file_type", type: "string", default: "file", choices: ["any", "directory", "file", "link"] }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "get_checksum", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "hidden", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "paths", aliases: ["name", "path"], required: true, type: "list(raw)" }, { name: "patterns", aliases: ["pattern"], type: "list(raw)", default: "" }, { name: "recurse", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "size", type: "raw" }, { name: "use_regex", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_source: [ { name: "examined", type: "integer" }, { name: "files", type: "list(raw)" }, { name: "matched", type: "integer" } ]
    params_target: [ { name: "age", type: "string" }, { name: "age_stamp", type: "string", default: "mtime", choices: ["atime", "ctime", "mtime"] }, { name: "contains", type: "string" }, { name: "depth", type: "integer" }, { name: "excludes", aliases: ["exclude"], type: "list(string)" }, { name: "file_type", type: "string", default: "file", choices: ["any", "directory", "file", "link"] }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "get_checksum", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "hidden", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "paths", aliases: ["name", "path"], required: true, type: "list(string)" }, { name: "patterns", aliases: ["pattern"], type: "list(string)", default: "" }, { name: "read_whole_file", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "recurse", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "size", type: "string" }, { name: "use_regex", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_target: [ { name: "examined", type: "integer" }, { name: "files", type: "list(string)" }, { name: "matched", type: "integer" }, { name: "skipped_paths", type: "dictionary" } ]

  - name: gather_facts
    fqcn: ansible.builtin.gather_facts
    collection: ansible.builtin
    params_source: [ { name: "parallel", type: "boolean", choices: ["no", "yes"] } ]
    params_target: [ { name: "parallel", type: "boolean", choices: ["no", "yes"] } ]

  - name: get_url
    fqcn: ansible.builtin.get_url
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "checksum", type: "string", default: "" }, { name: "client_cert", type: "path" }, { name: "client_key", type: "path" }, { name: "dest", required: true, type: "path" }, { name: "force", aliases: ["thirsty"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force_basic_auth", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "headers", type: "raw" }, { name: "http_agent", type: "string", default: "ansible-httpget" }, { name: "mode", type: "string" }, { name: "owner", type: "string" }, { name: "selevel", type: "string", default: "s0" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "sha256sum", type: "raw", default: "" }, { name: "timeout", type: "integer", default: 10 }, { name: "tmp_dest", type: "path" }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "url", required: true, type: "string" }, { name: "url_password", aliases: ["password"], type: "string" }, { name: "url_username", aliases: ["username"], type: "string" }, { name: "use_proxy", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_source: [ { name: "backup_file", type: "string" }, { name: "checksum_dest", type: "string" }, { name: "checksum_src", type: "string" }, { name: "dest", type: "string" }, { name: "elapsed", type: "integer" }, { name: "gid", type: "integer" }, { name: "group", type: "string" }, { name: "md5sum", type: "string" }, { name: "mode", type: "string" }, { name: "msg", type: "string" }, { name: "owner", type: "string" }, { name: "secontext", type: "string" }, { name: "size", type: "integer" }, { name: "src", type: "string" }, { name: "state", type: "string" }, { name: "status_code", type: "integer" }, { name: "uid", type: "integer" }, { name: "url", type: "string" } ]
    params_target: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "checksum", type: "string", default: "" }, { name: "client_cert", type: "path" }, { name: "client_key", type: "path" }, { name: "dest", required: true, type: "path" }, { name: "force", aliases: ["thirsty"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force_basic_auth", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "headers", type: "dictionary" }, { name: "http_agent", type: "string", default: "ansible-httpget" }, { name: "mode", type: "raw" }, { name: "owner", type: "string" }, { name: "selevel", type: "string" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "sha256sum", type: "string", default: "" }, { name: "timeout", type: "integer", default: 10 }, { name: "tmp_dest", type: "path" }, { name: "unredirected_headers", type: "list(string)", default: "" }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "url", required: true, type: "string" }, { name: "url_password", aliases: ["password"], type: "string" }, { name: "url_username", aliases: ["username"], type: "string" }, { name: "use_gssapi", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_proxy", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_target: [ { name: "backup_file", type: "string" }, { name: "checksum_dest", type: "string" }, { name: "checksum_src", type: "string" }, { name: "dest", type: "string" }, { name: "elapsed", type: "integer" }, { name: "gid", type: "integer" }, { name: "group", type: "string" }, { name: "md5sum", type: "string" }, { name: "mode", type: "string" }, { name: "msg", type: "string" }, { name: "owner", type: "string" }, { name: "secontext", type: "string" }, { name: "size", type: "integer" }, { name: "src", type: "string" }, { name: "state", type: "string" }, { name: "status_code", type: "integer" }, { name: "uid", type: "integer" }, { name: "url", type: "string" } ]

  - name: getent
    fqcn: ansible.builtin.getent
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "database", required: true, type: "raw" }, { name: "fail_key", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "key", type: "raw", default: "" }, { name: "service", type: "raw" }, { name: "split", type: "raw" } ]
    params_target: [ { name: "database", required: true, type: "string" }, { name: "fail_key", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "key", type: "string", default: "" }, { name: "service", type: "string" }, { name: "split", type: "string" } ]
    facts_target: [ { name: "getent_<database>", type: "list(string)" } ]

  - name: git
    fqcn: ansible.builtin.git
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "accept_hostkey", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "archive", type: "raw" }, { name: "bare", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "clone", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "depth", type: "raw" }, { name: "dest", required: true, type: "raw" }, { name: "executable", type: "raw" }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "gpg_whitelist", type: "list(raw)", default: "" }, { name: "key_file", type: "raw" }, { name: "recursive", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "reference", type: "raw" }, { name: "refspec", type: "raw" }, { name: "remote", type: "raw", default: "origin" }, { name: "repo", aliases: ["name"], required: true, type: "raw" }, { name: "separate_git_dir", type: "raw" }, { name: "ssh_opts", type: "raw" }, { name: "track_submodules", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "umask", type: "raw" }, { name: "update", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "verify_commit", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "version", type: "raw", default: "HEAD" } ]
    return_source: [ { name: "after", type: "string" }, { name: "before", type: "string" }, { name: "git_dir_before", type: "string" }, { name: "git_dir_now", type: "string" }, { name: "remote_url_changed", type: "boolean" }, { name: "warnings", type: "string" } ]
    params_target: [ { name: "accept_hostkey", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "accept_newhostkey", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "archive", type: "path" }, { name: "archive_prefix", type: "string" }, { name: "bare", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "clone", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "depth", type: "integer" }, { name: "dest", required: true, type: "path" }, { name: "executable", type: "path" }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "gpg_whitelist", type: "list(string)", default: "" }, { name: "key_file", type: "path" }, { name: "recursive", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "reference", type: "string" }, { name: "refspec", type: "string" }, { name: "remote", type: "string", default: "origin" }, { name: "repo", aliases: ["name"], required: true, type: "string" }, { name: "separate_git_dir", type: "path" }, { name: "single_branch", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "ssh_opts", type: "string" }, { name: "track_submodules", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "umask", type: "raw" }, { name: "update", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "verify_commit", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "version", type: "string", default: "HEAD" } ]
    return_target: [ { name: "after", type: "string" }, { name: "before", type: "string" }, { name: "git_dir_before", type: "string" }, { name: "git_dir_now", type: "string" }, { name: "remote_url_changed", type: "boolean" }, { name: "warnings", type: "string" } ]

  - name: group
    fqcn: ansible.builtin.group
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "gid", type: "integer" }, { name: "local", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", required: true, type: "string" }, { name: "non_unique", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "system", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    params_target: [ { name: "gid", type: "integer" }, { name: "local", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", required: true, type: "string" }, { name: "non_unique", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "system", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_target: [ { name: "gid", type: "integer" }, { name: "name", type: "string" }, { name: "state", type: "string" }, { name: "system", type: "boolean" } ]

  - name: group_by
    fqcn: ansible.builtin.group_by
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "key", required: true, type: "string" }, { name: "parents", type: "list(raw)", default: "all" } ]
    params_target: [ { name: "key", required: true, type: "string" }, { name: "parents", type: "list(string)", default: "all" } ]

  - name: hostname
    fqcn: ansible.builtin.hostname
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "name", required: true, type: "raw" }, { name: "use", type: "raw", choices: ["alpine", "debian", "freebsd", "generic", "openbsd", "openrc", "redhat", "sles", "solaris", "systemd"] } ]
    params_target: [ { name: "name", required: true, type: "string" }, { name: "use", type: "string", choices: ["alpine", "darwin", "debian", "freebsd", "generic", "macos", "macosx", "openbsd", "openrc", "redhat", "sles", "solaris", "systemd"] } ]

  - name: import_playbook
    fqcn: ansible.builtin.import_playbook
    collection: ansible.builtin
    params_source: [ { name: "free-form", type: "raw" } ]
    params_target: [ { name: "free-form", type: "string" } ]

  - name: import_role
    fqcn: ansible.builtin.import_role
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "allow_duplicates", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "defaults_from", type: "string", default: "main" }, { name: "handlers_from", type: "string", default: "main" }, { name: "name", required: true, type: "string" }, { name: "tasks_from", type: "string", default: "main" }, { name: "vars_from", type: "string", default: "main" } ]
    params_target: [ { name: "allow_duplicates", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "defaults_from", type: "string", default: "main" }, { name: "handlers_from", type: "string", default: "main" }, { name: "name", required: true, type: "string" }, { name: "rolespec_validate", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "tasks_from", type: "string", default: "main" }, { name: "vars_from", type: "string", default: "main" } ]

  - name: import_tasks
    fqcn: ansible.builtin.import_tasks
    collection: ansible.builtin
    params_source: [ { name: "free-form", type: "raw" } ]
    params_target: [ { name: "free-form", type: "string" } ]

  - name: include
    fqcn: ansible.builtin.include
    collection: ansible.builtin
    params_source: [ { name: "free-form", type: "raw" } ]
    params_target: [ { name: "free-form", type: "string" } ]

  - name: include_role
    fqcn: ansible.builtin.include_role
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "allow_duplicates", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "apply", type: "raw" }, { name: "defaults_from", type: "string", default: "main" }, { name: "handlers_from", type: "string", default: "main" }, { name: "name", required: true, type: "string" }, { name: "public", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "tasks_from", type: "string", default: "main" }, { name: "vars_from", type: "string", default: "main" } ]
    params_target: [ { name: "allow_duplicates", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "apply", type: "string" }, { name: "defaults_from", type: "string", default: "main" }, { name: "handlers_from", type: "string", default: "main" }, { name: "name", required: true, type: "string" }, { name: "public", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "rolespec_validate", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "tasks_from", type: "string", default: "main" }, { name: "vars_from", type: "string", default: "main" } ]

  - name: include_tasks
    fqcn: ansible.builtin.include_tasks
    collection: ansible.builtin
    params_source: [ { name: "apply", type: "string" }, { name: "file", type: "string" }, { name: "free-form", type: "raw" } ]
    params_target: [ { name: "apply", type: "string" }, { name: "file", type: "string" }, { name: "free-form", type: "string" } ]

  - name: include_vars
    fqcn: ansible.builtin.include_vars
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "depth", type: "integer", default: 0 }, { name: "dir", type: "path" }, { name: "extensions", type: "list(raw)", default: "json\", \"yaml\", \"yml" }, { name: "file", type: "path" }, { name: "files_matching", type: "string" }, { name: "free-form", type: "raw" }, { name: "ignore_files", type: "list(raw)" }, { name: "ignore_unknown_extensions", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", type: "string" } ]
    return_source: [ { name: "ansible_included_var_files", type: "list(raw)" } ]
    params_target: [ { name: "depth", type: "integer", default: 0 }, { name: "dir", type: "path" }, { name: "extensions", type: "list(string)", default: "json”, “yaml”, “yml" }, { name: "file", type: "path" }, { name: "files_matching", type: "string" }, { name: "free-form", type: "string" }, { name: "hash_behaviour", type: "string", choices: ["merge", "replace"] }, { name: "ignore_files", type: "list(string)" }, { name: "ignore_unknown_extensions", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", type: "string" } ]
    return_target: [ { name: "ansible_included_var_files", type: "list(string)" } ]

  - name: iptables
    fqcn: ansible.builtin.iptables
    collection: ansible.builtin
    params_source: [ { name: "action", type: "string", default: "append", choices: ["append", "insert"] }, { name: "chain", type: "string" }, { name: "comment", type: "string" }, { name: "ctstate", type: "list(raw)", default: "" }, { name: "destination", type: "string" }, { name: "destination_port", type: "string" }, { name: "dst_range", type: "string" }, { name: "flush", type: "boolean", choices: ["no", "yes"] }, { name: "fragment", type: "string" }, { name: "gateway", type: "string" }, { name: "gid_owner", type: "string" }, { name: "goto", type: "string" }, { name: "icmp_type", type: "string" }, { name: "in_interface", type: "string" }, { name: "ip_version", type: "string", default: "ipv4", choices: ["ipv4", "ipv6"] }, { name: "jump", type: "string" }, { name: "limit", type: "string" }, { name: "limit_burst", type: "string" }, { name: "log_level", type: "string", choices: [0, 1, 2, 3, 4, 5, 6, 7, "alert", "crit", "debug", "emerg", "error", "info", "notice", "warning"] }, { name: "log_prefix", type: "string" }, { name: "match", type: "list(raw)", default: "" }, { name: "out_interface", type: "string" }, { name: "policy", type: "string", choices: ["ACCEPT", "DROP", "QUEUE", "RETURN"] }, { name: "protocol", type: "string" }, { name: "reject_with", type: "string" }, { name: "rule_num", type: "string" }, { name: "set_counters", type: "string" }, { name: "set_dscp_mark", type: "string" }, { name: "set_dscp_mark_class", type: "string" }, { name: "source", type: "string" }, { name: "source_port", type: "string" }, { name: "src_range", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "syn", type: "string", default: "ignore", choices: ["ignore", "match", "negate"] }, { name: "table", type: "string", default: "filter", choices: ["filter", "mangle", "nat", "raw", "security"] }, { name: "tcp_flags", type: "dictionary", default: "{}", params: [ { name: "flags", type: "list(raw)" }, { name: "flags_set", type: "list(raw)" } ] }, { name: "to_destination", type: "string" }, { name: "to_ports", type: "string" }, { name: "to_source", type: "string" }, { name: "uid_owner", type: "string" } ]
    params_target: [ { name: "action", type: "string", default: "append", choices: ["append", "insert"] }, { name: "chain", type: "string" }, { name: "comment", type: "string" }, { name: "ctstate", type: "list(string)", default: "" }, { name: "destination", type: "string" }, { name: "destination_port", type: "string" }, { name: "destination_ports", type: "list(string)" }, { name: "dst_range", type: "string" }, { name: "flush", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "fragment", type: "string" }, { name: "gateway", type: "string" }, { name: "gid_owner", type: "string" }, { name: "goto", type: "string" }, { name: "icmp_type", type: "string" }, { name: "in_interface", type: "string" }, { name: "ip_version", type: "string", default: "ipv4", choices: ["ipv4", "ipv6"] }, { name: "jump", type: "string" }, { name: "limit", type: "string" }, { name: "limit_burst", type: "string" }, { name: "log_level", type: "string", choices: [0, 1, 2, 3, 4, 5, 6, 7, "alert", "crit", "debug", "emerg", "error", "info", "notice", "warning"] }, { name: "log_prefix", type: "string" }, { name: "match", type: "list(string)", default: "" }, { name: "match_set", type: "string" }, { name: "match_set_flags", type: "string", choices: ["dst", "dst,src", "src", "src,dst"] }, { name: "out_interface", type: "string" }, { name: "policy", type: "string", choices: ["ACCEPT", "DROP", "QUEUE", "RETURN"] }, { name: "protocol", type: "string" }, { name: "reject_with", type: "string" }, { name: "rule_num", type: "string" }, { name: "set_counters", type: "string" }, { name: "set_dscp_mark", type: "string" }, { name: "set_dscp_mark_class", type: "string" }, { name: "source", type: "string" }, { name: "source_port", type: "string" }, { name: "src_range", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "syn", type: "string", default: "ignore", choices: ["ignore", "match", "negate"] }, { name: "table", type: "string", default: "filter", choices: ["filter", "mangle", "nat", "raw", "security"] }, { name: "tcp_flags", type: "dictionary", default: "{}", params: [ { name: "flags", type: "list(string)" }, { name: "flags_set", type: "list(string)" } ] }, { name: "to_destination", type: "string" }, { name: "to_ports", type: "string" }, { name: "to_source", type: "string" }, { name: "uid_owner", type: "string" }, { name: "wait", type: "string" } ]

  - name: known_hosts
    fqcn: ansible.builtin.known_hosts
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "hash_host", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "key", type: "raw" }, { name: "name", aliases: ["host"], required: true, type: "raw" }, { name: "path", type: "raw", default: "(homedir)+/.ssh/known_hosts" }, { name: "state", type: "raw", default: "present", choices: ["absent", "present"] } ]
    params_target: [ { name: "hash_host", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "key", type: "string" }, { name: "name", aliases: ["host"], required: true, type: "string" }, { name: "path", type: "path", default: "~/.ssh/known_hosts" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]

  - name: lineinfile
    fqcn: ansible.builtin.lineinfile
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backrefs", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "create", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "firstmatch", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "insertafter", type: "string", default: "EOF", choices: ["*regex*", "EOF"] }, { name: "insertbefore", type: "string", choices: ["*regex*", "BOF"] }, { name: "line", aliases: ["value"], type: "string" }, { name: "mode", type: "string" }, { name: "others", type: "string" }, { name: "owner", type: "string" }, { name: "path", aliases: ["dest", "destfile", "name"], required: true, type: "path" }, { name: "regexp", aliases: ["regex"], type: "string" }, { name: "selevel", type: "string", default: "s0" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate", type: "string" } ]
    params_target: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backrefs", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "create", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "firstmatch", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "insertafter", type: "string", default: "EOF", choices: ["*regex*", "EOF"] }, { name: "insertbefore", type: "string", choices: ["*regex*", "BOF"] }, { name: "line", aliases: ["value"], type: "string" }, { name: "mode", type: "raw" }, { name: "others", type: "string" }, { name: "owner", type: "string" }, { name: "path", aliases: ["dest", "destfile", "name"], required: true, type: "path" }, { name: "regexp", aliases: ["regex"], type: "string" }, { name: "search_string", type: "string" }, { name: "selevel", type: "string" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate", type: "string" } ]

  - name: meta
    fqcn: ansible.builtin.meta
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "free_form", required: true, type: "raw", choices: ["clear_facts", "clear_host_errors", "end_host", "end_play", "flush_handlers", "noop", "refresh_inventory", "reset_connection"] } ]
    params_target: [ { name: "free_form", required: true, type: "string", choices: ["clear_facts", "clear_host_errors", "end_batch", "end_host", "end_play", "flush_handlers", "noop", "refresh_inventory", "reset_connection"] } ]

  - name: package
    fqcn: ansible.builtin.package
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "name", required: true, type: "raw" }, { name: "state", required: true, type: "raw" }, { name: "use", type: "raw", default: "auto" } ]
    params_target: [ { name: "name", required: true, type: "string" }, { name: "state", required: true, type: "string" }, { name: "use", type: "string", default: "auto" } ]

  - name: package_facts
    fqcn: ansible.builtin.package_facts
    collection: ansible.builtin
    params_source: [ { name: "manager", type: "list(raw)", default: "auto", choices: ["apt", "auto", "pkg", "portage", "rpm"] }, { name: "strategy", type: "raw", default: "first", choices: ["all", "first"] } ]
    facts_source: [ { name: "packages", type: "dictionary", params: [ { name: "name", type: "string" }, { name: "source", type: "string" }, { name: "version", type: "string" } ] } ]
    params_target: [ { name: "manager", type: "list(string)", default: "auto", choices: ["apk", "apt", "auto", "pacman", "pkg", "portage", "rpm"] }, { name: "strategy", type: "string", default: "first", choices: ["all", "first"] } ]
    facts_target: [ { name: "packages", type: "dictionary", params: [ { name: "name", type: "string" }, { name: "source", type: "string" }, { name: "version", type: "string" } ] } ]

  - name: pause
    fqcn: ansible.builtin.pause
    collection: ansible.builtin
    params_source: [ { name: "echo", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "minutes", type: "raw" }, { name: "prompt", type: "raw" }, { name: "seconds", type: "raw" } ]
    return_source: [ { name: "delta", type: "string" }, { name: "echo", type: "boolean" }, { name: "start", type: "string" }, { name: "stdout", type: "string" }, { name: "stop", type: "string" }, { name: "user_input", type: "string" } ]
    params_target: [ { name: "echo", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "minutes", type: "string" }, { name: "prompt", type: "string" }, { name: "seconds", type: "string" } ]
    return_target: [ { name: "delta", type: "string" }, { name: "echo", type: "boolean" }, { name: "start", type: "string" }, { name: "stdout", type: "string" }, { name: "stop", type: "string" }, { name: "user_input", type: "string" } ]

  - name: ping
    fqcn: ansible.builtin.ping
    collection: ansible.builtin
    params_source: [ { name: "data", type: "string", default: "pong" } ]
    return_source: [ { name: "ping", type: "string" } ]
    params_target: [ { name: "data", type: "string", default: "pong" } ]
    return_target: [ { name: "ping", type: "string" } ]

  - name: pip
    fqcn: ansible.builtin.pip
    collection: ansible.builtin
    params_source: [ { name: "chdir", type: "path" }, { name: "editable", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "executable", type: "path" }, { name: "extra_args", type: "string" }, { name: "name", type: "list(raw)" }, { name: "requirements", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "forcereinstall", "latest", "present"] }, { name: "umask", type: "string" }, { name: "version", type: "string" }, { name: "virtualenv", type: "path" }, { name: "virtualenv_command", type: "path", default: "virtualenv" }, { name: "virtualenv_python", type: "string" }, { name: "virtualenv_site_packages", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_source: [ { name: "cmd", type: "string" }, { name: "name", type: "list(raw)" }, { name: "requirements", type: "string" }, { name: "version", type: "string" }, { name: "virtualenv", type: "string" } ]
    params_target: [ { name: "chdir", type: "path" }, { name: "editable", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "executable", type: "path" }, { name: "extra_args", type: "string" }, { name: "name", type: "list(string)" }, { name: "requirements", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "forcereinstall", "latest", "present"] }, { name: "umask", type: "string" }, { name: "version", type: "string" }, { name: "virtualenv", type: "path" }, { name: "virtualenv_command", type: "path", default: "virtualenv" }, { name: "virtualenv_python", type: "string" }, { name: "virtualenv_site_packages", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_target: [ { name: "cmd", type: "string" }, { name: "name", type: "list(string)" }, { name: "requirements", type: "string" }, { name: "version", type: "string" }, { name: "virtualenv", type: "string" } ]

  - name: raw
    fqcn: ansible.builtin.raw
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "executable", type: "raw" }, { name: "free_form", required: true, type: "raw" } ]
    params_target: [ { name: "executable", type: "string" }, { name: "free_form", required: true, type: "string" } ]

  - name: reboot
    fqcn: ansible.builtin.reboot
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "connect_timeout", type: "integer" }, { name: "msg", type: "string", default: "Reboot initiated by Ansible" }, { name: "post_reboot_delay", type: "integer", default: 0 }, { name: "pre_reboot_delay", type: "integer", default: 0 }, { name: "reboot_timeout", type: "integer", default: 600 }, { name: "search_paths", type: "list(raw)", default: "/sbin\", \"/usr/sbin\", \"/usr/local/sbin" }, { name: "test_command", type: "string", default: "whoami" } ]
    return_source: [ { name: "elapsed", type: "integer" }, { name: "rebooted", type: "boolean" } ]
    params_target: [ { name: "boot_time_command", type: "string", default: "cat /proc/sys/kernel/random/boot_id" }, { name: "connect_timeout", type: "integer" }, { name: "msg", type: "string", default: "Reboot initiated by Ansible" }, { name: "post_reboot_delay", type: "integer", default: 0 }, { name: "pre_reboot_delay", type: "integer", default: 0 }, { name: "reboot_command", type: "string", default: "[determined based on target OS]" }, { name: "reboot_timeout", type: "integer", default: 600 }, { name: "search_paths", type: "list(string)", default: "/sbin”, “/bin”, “/usr/sbin”, “/usr/bin”, “/usr/local/sbin" }, { name: "test_command", type: "string", default: "whoami" } ]
    return_target: [ { name: "elapsed", type: "integer" }, { name: "rebooted", type: "boolean" } ]

  - name: replace
    fqcn: ansible.builtin.replace
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "after", type: "string" }, { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "before", type: "string" }, { name: "encoding", type: "string", default: "utf-8" }, { name: "group", type: "string" }, { name: "mode", type: "string" }, { name: "others", type: "string" }, { name: "owner", type: "string" }, { name: "path", aliases: ["dest", "destfile", "name"], required: true, type: "path" }, { name: "regexp", required: true, type: "string" }, { name: "replace", type: "string" }, { name: "selevel", type: "string", default: "s0" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate", type: "string" } ]
    params_target: [ { name: "after", type: "string" }, { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "before", type: "string" }, { name: "encoding", type: "string", default: "utf-8" }, { name: "group", type: "string" }, { name: "mode", type: "raw" }, { name: "others", type: "string" }, { name: "owner", type: "string" }, { name: "path", aliases: ["dest", "destfile", "name"], required: true, type: "path" }, { name: "regexp", required: true, type: "string" }, { name: "replace", type: "string" }, { name: "selevel", type: "string" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate", type: "string" } ]

  - name: rpm_key
    fqcn: ansible.builtin.rpm_key
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "fingerprint", type: "string" }, { name: "key", required: true, type: "raw" }, { name: "state", type: "raw", default: "present", choices: ["absent", "present"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    params_target: [ { name: "fingerprint", type: "string" }, { name: "key", required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]

  - name: script
    fqcn: ansible.builtin.script
    collection: ansible.builtin
    params_source: [ { name: "chdir", type: "raw" }, { name: "cmd", type: "string" }, { name: "creates", type: "raw" }, { name: "decrypt", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "executable", type: "raw" }, { name: "free_form", type: "raw" }, { name: "removes", type: "raw" } ]
    params_target: [ { name: "chdir", type: "string" }, { name: "cmd", type: "string" }, { name: "creates", type: "string" }, { name: "decrypt", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "executable", type: "string" }, { name: "free_form", type: "string" }, { name: "removes", type: "string" } ]

  - name: service
    fqcn: ansible.builtin.service
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "arguments", aliases: ["args"], type: "string" }, { name: "enabled", type: "boolean", choices: ["no", "yes"] }, { name: "name", required: true, type: "string" }, { name: "pattern", type: "string" }, { name: "runlevel", type: "string", default: "default" }, { name: "sleep", type: "integer" }, { name: "state", type: "string", choices: ["reloaded", "restarted", "started", "stopped"] }, { name: "use", type: "string", default: "auto" } ]
    params_target: [ { name: "arguments", aliases: ["args"], type: "string" }, { name: "enabled", type: "boolean", choices: ["no", "yes"] }, { name: "name", required: true, type: "string" }, { name: "pattern", type: "string" }, { name: "runlevel", type: "string", default: "default" }, { name: "sleep", type: "integer" }, { name: "state", type: "string", choices: ["reloaded", "restarted", "started", "stopped"] }, { name: "use", type: "string", default: "auto" } ]

  - name: service_facts
    fqcn: ansible.builtin.service_facts
    collection: ansible.builtin
    facts_source: [ { name: "services", type: "complex", params: [ { name: "name", type: "string" }, { name: "source", type: "string" }, { name: "state", type: "string" }, { name: "status", type: "string" } ] } ]
    facts_target: [ { name: "services", type: "complex", params: [ { name: "name", type: "string" }, { name: "source", type: "string" }, { name: "state", type: "string" }, { name: "status", type: "string" } ] } ]

  - name: set_fact
    fqcn: ansible.builtin.set_fact
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "cacheable", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "key_value", required: true, type: "raw" } ]
    params_target: [ { name: "cacheable", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "key_value", required: true, type: "string" } ]

  - name: set_stats
    fqcn: ansible.builtin.set_stats
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "aggregate", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "data", required: true, type: "dictionary" }, { name: "per_host", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    params_target: [ { name: "aggregate", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "data", required: true, type: "dictionary" }, { name: "per_host", type: "boolean", default: "no", choices: ["no", "yes"] } ]

  - name: setup
    fqcn: ansible.builtin.setup
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "fact_path", type: "raw", default: "/etc/ansible/facts.d" }, { name: "filter", type: "raw", default: "*" }, { name: "gather_subset", type: "raw", default: "all" }, { name: "gather_timeout", type: "raw", default: 10 } ]
    params_target: [ { name: "fact_path", type: "path", default: "/etc/ansible/facts.d" }, { name: "filter", type: "list(string)", default: "" }, { name: "gather_subset", type: "list(string)", default: "all" }, { name: "gather_timeout", type: "integer", default: 10 } ]

  - name: shell
    fqcn: ansible.builtin.shell
    collection: ansible.builtin
    params_source: [ { name: "chdir", type: "path" }, { name: "cmd", type: "string" }, { name: "creates", type: "path" }, { name: "executable", type: "path" }, { name: "free_form", type: "string" }, { name: "removes", type: "path" }, { name: "stdin", type: "string" }, { name: "stdin_add_newline", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "warn", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_source: [ { name: "cmd", type: "string" }, { name: "delta", type: "string" }, { name: "end", type: "string" }, { name: "msg", type: "boolean" }, { name: "rc", type: "integer" }, { name: "start", type: "string" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" }, { name: "stdout_lines", type: "list(raw)" } ]
    params_target: [ { name: "chdir", type: "path" }, { name: "cmd", type: "string" }, { name: "creates", type: "path" }, { name: "executable", type: "path" }, { name: "free_form", type: "string" }, { name: "removes", type: "path" }, { name: "stdin", type: "string" }, { name: "stdin_add_newline", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "warn", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_target: [ { name: "cmd", type: "string" }, { name: "delta", type: "string" }, { name: "end", type: "string" }, { name: "msg", type: "boolean" }, { name: "rc", type: "integer" }, { name: "start", type: "string" }, { name: "stderr", type: "string" }, { name: "stderr_lines", type: "list(string)" }, { name: "stdout", type: "string" }, { name: "stdout_lines", type: "list(string)" } ]

  - name: slurp
    fqcn: ansible.builtin.slurp
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "src", aliases: ["path"], required: true, type: "path" } ]
    params_target: [ { name: "src", aliases: ["path"], required: true, type: "path" } ]
    return_target: [ { name: "content", type: "string" }, { name: "encoding", type: "string" }, { name: "source", type: "string" } ]

  - name: stat
    fqcn: ansible.builtin.stat
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "checksum_algorithm", aliases: ["checksum", "checksum_algo"], type: "string", default: "sha1", choices: ["md5", "sha1", "sha224", "sha256", "sha384", "sha512"] }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "get_attributes", aliases: ["attr", "attributes"], type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "get_checksum", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "get_mime", aliases: ["mime", "mime_type", "mime-type"], type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "path", required: true, type: "path" } ]
    return_source: [ { name: "stat", type: "complex", params: [ { name: "atime", type: "float" }, { name: "attributes", type: "list(raw)" }, { name: "charset", type: "string" }, { name: "checksum", type: "string" }, { name: "ctime", type: "float" }, { name: "dev", type: "integer" }, { name: "executable", type: "boolean" }, { name: "exists", type: "boolean" }, { name: "gid", type: "integer" }, { name: "gr_name", type: "string" }, { name: "inode", type: "integer" }, { name: "isblk", type: "boolean" }, { name: "ischr", type: "boolean" }, { name: "isdir", type: "boolean" }, { name: "isfifo", type: "boolean" }, { name: "isgid", type: "boolean" }, { name: "islnk", type: "boolean" }, { name: "isreg", type: "boolean" }, { name: "issock", type: "boolean" }, { name: "isuid", type: "boolean" }, { name: "lnk_source", type: "string" }, { name: "lnk_target", type: "string" }, { name: "md5", type: "string" }, { name: "mimetype", type: "string" }, { name: "mode", type: "string" }, { name: "mtime", type: "float" }, { name: "nlink", type: "integer" }, { name: "path", type: "string" }, { name: "pw_name", type: "string" }, { name: "readable", type: "boolean" }, { name: "rgrp", type: "boolean" }, { name: "roth", type: "boolean" }, { name: "rusr", type: "boolean" }, { name: "size", type: "integer" }, { name: "uid", type: "integer" }, { name: "wgrp", type: "boolean" }, { name: "woth", type: "boolean" }, { name: "writeable", type: "boolean" }, { name: "wusr", type: "boolean" }, { name: "xgrp", type: "boolean" }, { name: "xoth", type: "boolean" }, { name: "xusr", type: "boolean" } ] } ]
    params_target: [ { name: "checksum_algorithm", aliases: ["checksum", "checksum_algo"], type: "string", default: "sha1", choices: ["md5", "sha1", "sha224", "sha256", "sha384", "sha512"] }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "get_attributes", aliases: ["attr", "attributes"], type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "get_checksum", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "get_mime", aliases: ["mime", "mime_type", "mime-type"], type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "path", aliases: ["dest", "name"], required: true, type: "path" } ]
    return_target: [ { name: "stat", type: "complex", params: [ { name: "atime", type: "float" }, { name: "attributes", type: "list(string)" }, { name: "charset", type: "string" }, { name: "checksum", type: "string" }, { name: "ctime", type: "float" }, { name: "dev", type: "integer" }, { name: "executable", type: "boolean" }, { name: "exists", type: "boolean" }, { name: "gid", type: "integer" }, { name: "gr_name", type: "string" }, { name: "inode", type: "integer" }, { name: "isblk", type: "boolean" }, { name: "ischr", type: "boolean" }, { name: "isdir", type: "boolean" }, { name: "isfifo", type: "boolean" }, { name: "isgid", type: "boolean" }, { name: "islnk", type: "boolean" }, { name: "isreg", type: "boolean" }, { name: "issock", type: "boolean" }, { name: "isuid", type: "boolean" }, { name: "lnk_source", type: "string" }, { name: "lnk_target", type: "string" }, { name: "md5", type: "string" }, { name: "mimetype", type: "string" }, { name: "mode", type: "string" }, { name: "mtime", type: "float" }, { name: "nlink", type: "integer" }, { name: "path", type: "string" }, { name: "pw_name", type: "string" }, { name: "readable", type: "boolean" }, { name: "rgrp", type: "boolean" }, { name: "roth", type: "boolean" }, { name: "rusr", type: "boolean" }, { name: "size", type: "integer" }, { name: "uid", type: "integer" }, { name: "wgrp", type: "boolean" }, { name: "woth", type: "boolean" }, { name: "writeable", type: "boolean" }, { name: "wusr", type: "boolean" }, { name: "xgrp", type: "boolean" }, { name: "xoth", type: "boolean" }, { name: "xusr", type: "boolean" } ] } ]

  - name: subversion
    fqcn: ansible.builtin.subversion
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "checkout", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "dest", required: true, type: "raw" }, { name: "executable", type: "raw" }, { name: "export", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "in_place", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "password", type: "raw" }, { name: "repo", aliases: ["name", "repository"], required: true, type: "raw" }, { name: "revision", aliases: ["version"], type: "raw", default: "HEAD" }, { name: "switch", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "update", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "username", type: "raw" } ]
    params_target: [ { name: "checkout", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "dest", type: "path" }, { name: "executable", type: "path" }, { name: "export", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "in_place", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "password", type: "string" }, { name: "repo", aliases: ["name", "repository"], required: true, type: "string" }, { name: "revision", aliases: ["rev", "version"], type: "string", default: "HEAD" }, { name: "switch", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "update", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "username", type: "string" }, { name: "validate_certs", type: "boolean", default: "no", choices: ["no", "yes"] } ]

  - name: systemd
    fqcn: ansible.builtin.systemd
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "daemon_reexec", aliases: ["daemon-reexec"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "daemon_reload", aliases: ["daemon-reload"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "enabled", type: "boolean", choices: ["no", "yes"] }, { name: "force", type: "boolean", choices: ["no", "yes"] }, { name: "masked", type: "boolean", choices: ["no", "yes"] }, { name: "name", aliases: ["service", "unit"], type: "raw" }, { name: "no_block", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "scope", type: "raw", choices: ["global", "system", "user"] }, { name: "state", type: "raw", choices: ["reloaded", "restarted", "started", "stopped"] }, { name: "user", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_source: [ { name: "status", type: "complex" } ]
    params_target: [ { name: "daemon_reexec", aliases: ["daemon-reexec"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "daemon_reload", aliases: ["daemon-reload"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "enabled", type: "boolean", choices: ["no", "yes"] }, { name: "force", type: "boolean", choices: ["no", "yes"] }, { name: "masked", type: "boolean", choices: ["no", "yes"] }, { name: "name", aliases: ["service", "unit"], type: "string" }, { name: "no_block", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "scope", type: "string", default: "system", choices: ["global", "system", "user"] }, { name: "state", type: "string", choices: ["reloaded", "restarted", "started", "stopped"] } ]
    return_target: [ { name: "status", type: "complex" } ]

  - name: sysvinit
    fqcn: ansible.builtin.sysvinit
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "arguments", aliases: ["args"], type: "raw" }, { name: "daemonize", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "enabled", type: "boolean", choices: ["no", "yes"] }, { name: "name", aliases: ["service"], required: true, type: "raw" }, { name: "pattern", type: "raw" }, { name: "runlevels", type: "raw" }, { name: "sleep", type: "raw", default: 1 }, { name: "state", type: "raw", choices: ["reloaded", "restarted", "started", "stopped"] } ]
    return_source: [ { name: "results", type: "complex" } ]
    params_target: [ { name: "arguments", aliases: ["args"], type: "string" }, { name: "daemonize", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "enabled", type: "boolean", choices: ["no", "yes"] }, { name: "name", aliases: ["service"], required: true, type: "string" }, { name: "pattern", type: "string" }, { name: "runlevels", type: "list(string)" }, { name: "sleep", type: "integer", default: 1 }, { name: "state", type: "string", choices: ["reloaded", "restarted", "started", "stopped"] } ]
    return_target: [ { name: "results", type: "complex" } ]

  - name: tempfile
    fqcn: ansible.builtin.tempfile
    collection: ansible.builtin
    params_source: [ { name: "path", type: "path" }, { name: "prefix", type: "string", default: "ansible." }, { name: "state", type: "string", default: "file", choices: ["directory", "file"] }, { name: "suffix", type: "string", default: "" } ]
    return_source: [ { name: "path", type: "string" } ]
    params_target: [ { name: "path", type: "path" }, { name: "prefix", type: "string", default: "ansible." }, { name: "state", type: "string", default: "file", choices: ["directory", "file"] }, { name: "suffix", type: "string", default: "" } ]
    return_target: [ { name: "path", type: "string" } ]

  - name: template
    fqcn: ansible.builtin.template
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "block_end_string", type: "string", default: "%}" }, { name: "block_start_string", type: "string", default: "{%" }, { name: "dest", required: true, type: "path" }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "lstrip_blocks", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "mode", type: "string" }, { name: "newline_sequence", type: "string", default: "\\n", choices: ["\\n", "\\r", "\\r\\n"] }, { name: "output_encoding", type: "string", default: "utf-8" }, { name: "owner", type: "string" }, { name: "selevel", type: "string", default: "s0" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "src", required: true, type: "path" }, { name: "trim_blocks", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate", type: "string" }, { name: "variable_end_string", type: "string", default: "}}" }, { name: "variable_start_string", type: "string", default: "{{" } ]
    params_target: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "block_end_string", type: "string", default: "%}" }, { name: "block_start_string", type: "string", default: "{%" }, { name: "comment_end_string", type: "string" }, { name: "comment_start_string", type: "string" }, { name: "dest", required: true, type: "path" }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "lstrip_blocks", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "mode", type: "raw" }, { name: "newline_sequence", type: "string", default: "\\n", choices: ["\\n", "\\r", "\\r\\n"] }, { name: "output_encoding", type: "string", default: "utf-8" }, { name: "owner", type: "string" }, { name: "selevel", type: "string" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "src", required: true, type: "path" }, { name: "trim_blocks", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate", type: "string" }, { name: "variable_end_string", type: "string", default: "}}" }, { name: "variable_start_string", type: "string", default: "{{" } ]

  - name: unarchive
    fqcn: ansible.builtin.unarchive
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "copy", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "creates", type: "path" }, { name: "decrypt", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "dest", required: true, type: "path" }, { name: "exclude", type: "list(raw)" }, { name: "extra_opts", type: "list(raw)", default: "" }, { name: "group", type: "string" }, { name: "keep_newer", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "list_files", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "mode", type: "string" }, { name: "owner", type: "string" }, { name: "remote_src", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "selevel", type: "string", default: "s0" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "src", required: true, type: "path" }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    params_target: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "copy", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "creates", type: "path" }, { name: "decrypt", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "dest", required: true, type: "path" }, { name: "exclude", type: "list(string)", default: "" }, { name: "extra_opts", type: "list(string)", default: "" }, { name: "group", type: "string" }, { name: "include", type: "list(string)", default: "" }, { name: "io_buffer_size", type: "integer", default: 65536 }, { name: "keep_newer", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "list_files", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "mode", type: "raw" }, { name: "owner", type: "string" }, { name: "remote_src", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "selevel", type: "string" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "src", required: true, type: "path" }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_target: [ { name: "dest", type: "string" }, { name: "files", type: "list(string)" }, { name: "gid", type: "integer" }, { name: "group", type: "string" }, { name: "handler", type: "string" }, { name: "mode", type: "string" }, { name: "owner", type: "string" }, { name: "size", type: "integer" }, { name: "src", type: "string" }, { name: "state", type: "string" }, { name: "uid", type: "integer" } ]

  - name: uri
    fqcn: ansible.builtin.uri
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "body", type: "raw" }, { name: "body_format", type: "string", default: "raw", choices: ["form-urlencoded", "json", "raw"] }, { name: "client_cert", type: "path" }, { name: "client_key", type: "path" }, { name: "creates", type: "path" }, { name: "dest", type: "path" }, { name: "follow_redirects", type: "string", default: "safe", choices: ["all", "no", "none", "safe", "urllib2", "yes"] }, { name: "force", aliases: ["thirsty"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force_basic_auth", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "headers", type: "dictionary" }, { name: "http_agent", type: "string", default: "ansible-httpget" }, { name: "method", type: "string", default: "GET" }, { name: "mode", type: "string" }, { name: "owner", type: "string" }, { name: "remote_src", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "removes", type: "path" }, { name: "return_content", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "selevel", type: "string", default: "s0" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "src", type: "path" }, { name: "status_code", type: "list(raw)", default: 200 }, { name: "timeout", type: "integer", default: 30 }, { name: "unix_socket", type: "raw" }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "url", required: true, type: "string" }, { name: "url_password", aliases: ["password"], type: "string" }, { name: "url_username", aliases: ["user"], type: "string" }, { name: "use_proxy", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_source: [ { name: "elapsed", type: "integer" }, { name: "msg", type: "string" }, { name: "redirected", type: "boolean" }, { name: "status", type: "integer" }, { name: "url", type: "string" } ]
    params_target: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "body", type: "raw" }, { name: "body_format", type: "string", default: "raw", choices: ["form-multipart", "form-urlencoded", "json", "raw"] }, { name: "ca_path", type: "path" }, { name: "client_cert", type: "path" }, { name: "client_key", type: "path" }, { name: "creates", type: "path" }, { name: "dest", type: "path" }, { name: "follow_redirects", type: "string", default: "safe", choices: ["all", "no", "none", "safe", "urllib2", "yes"] }, { name: "force", aliases: ["thirsty"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force_basic_auth", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "headers", type: "dictionary" }, { name: "http_agent", type: "string", default: "ansible-httpget" }, { name: "method", type: "string", default: "GET" }, { name: "mode", type: "raw" }, { name: "owner", type: "string" }, { name: "remote_src", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "removes", type: "path" }, { name: "return_content", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "selevel", type: "string" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "src", type: "path" }, { name: "status_code", type: "list(integer)", default: 200 }, { name: "timeout", type: "integer", default: 30 }, { name: "unix_socket", type: "path" }, { name: "unredirected_headers", type: "list(string)", default: "" }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "url", required: true, type: "string" }, { name: "url_password", aliases: ["password"], type: "string" }, { name: "url_username", aliases: ["user"], type: "string" }, { name: "use_gssapi", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_proxy", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_target: [ { name: "content", type: "string" }, { name: "cookies", type: "dictionary" }, { name: "cookies_string", type: "string" }, { name: "elapsed", type: "integer" }, { name: "msg", type: "string" }, { name: "path", type: "string" }, { name: "redirected", type: "boolean" }, { name: "status", type: "integer" }, { name: "url", type: "string" } ]

  - name: user
    fqcn: ansible.builtin.user
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "append", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "authorization", type: "string" }, { name: "comment", type: "string" }, { name: "create_home", aliases: ["createhome"], type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "expires", type: "float" }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "generate_ssh_key", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "groups", type: "list(raw)" }, { name: "hidden", type: "boolean", choices: ["no", "yes"] }, { name: "home", type: "path" }, { name: "local", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "login_class", type: "string" }, { name: "move_home", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", aliases: ["user"], required: true, type: "string" }, { name: "non_unique", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "password", type: "string" }, { name: "password_lock", type: "boolean", choices: ["no", "yes"] }, { name: "profile", type: "string" }, { name: "remove", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "role", type: "string" }, { name: "seuser", type: "string" }, { name: "shell", type: "string" }, { name: "skeleton", type: "string" }, { name: "ssh_key_bits", type: "integer", default: "default set by ssh-keygen" }, { name: "ssh_key_comment", type: "string", default: "ansible-generated on $HOSTNAME" }, { name: "ssh_key_file", type: "path" }, { name: "ssh_key_passphrase", type: "string" }, { name: "ssh_key_type", type: "string", default: "rsa" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "system", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "uid", type: "integer" }, { name: "update_password", type: "string", default: "always", choices: ["always", "on_create"] } ]
    return_source: [ { name: "append", type: "boolean" }, { name: "comment", type: "string" }, { name: "create_home", type: "boolean" }, { name: "force", type: "boolean" }, { name: "group", type: "integer" }, { name: "groups", type: "string" }, { name: "home", type: "string" }, { name: "move_home", type: "boolean" }, { name: "name", type: "string" }, { name: "password", type: "string" }, { name: "remove", type: "boolean" }, { name: "shell", type: "string" }, { name: "ssh_fingerprint", type: "string" }, { name: "ssh_key_file", type: "string" }, { name: "ssh_public_key", type: "string" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" }, { name: "system", type: "boolean" }, { name: "uid", type: "integer" } ]
    params_target: [ { name: "append", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "authorization", type: "string" }, { name: "comment", type: "string" }, { name: "create_home", aliases: ["createhome"], type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "expires", type: "float" }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "generate_ssh_key", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "groups", type: "list(string)" }, { name: "hidden", type: "boolean", choices: ["no", "yes"] }, { name: "home", type: "path" }, { name: "local", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "login_class", type: "string" }, { name: "move_home", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", aliases: ["user"], required: true, type: "string" }, { name: "non_unique", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "password", type: "string" }, { name: "password_expire_max", type: "integer" }, { name: "password_expire_min", type: "integer" }, { name: "password_lock", type: "boolean", choices: ["no", "yes"] }, { name: "profile", type: "string" }, { name: "remove", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "role", type: "string" }, { name: "seuser", type: "string" }, { name: "shell", type: "string" }, { name: "skeleton", type: "string" }, { name: "ssh_key_bits", type: "integer", default: "default set by ssh-keygen" }, { name: "ssh_key_comment", type: "string", default: "ansible-generated on $HOSTNAME" }, { name: "ssh_key_file", type: "path" }, { name: "ssh_key_passphrase", type: "string" }, { name: "ssh_key_type", type: "string", default: "rsa" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "system", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "uid", type: "integer" }, { name: "umask", type: "string" }, { name: "update_password", type: "string", default: "always", choices: ["always", "on_create"] } ]
    return_target: [ { name: "append", type: "boolean" }, { name: "comment", type: "string" }, { name: "create_home", type: "boolean" }, { name: "force", type: "boolean" }, { name: "group", type: "integer" }, { name: "groups", type: "string" }, { name: "home", type: "string" }, { name: "move_home", type: "boolean" }, { name: "name", type: "string" }, { name: "password", type: "string" }, { name: "password_expire_max", type: "integer" }, { name: "password_expire_min", type: "integer" }, { name: "remove", type: "boolean" }, { name: "shell", type: "string" }, { name: "ssh_fingerprint", type: "string" }, { name: "ssh_key_file", type: "string" }, { name: "ssh_public_key", type: "string" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" }, { name: "system", type: "boolean" }, { name: "uid", type: "integer" } ]

  - name: wait_for
    fqcn: ansible.builtin.wait_for
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "active_connection_states", type: "list(raw)", default: "ESTABLISHED\", \"FIN_WAIT1\", \"FIN_WAIT2\", \"SYN_RECV\", \"SYN_SENT\", \"TIME_WAIT" }, { name: "connect_timeout", type: "integer", default: 5 }, { name: "delay", type: "integer", default: 0 }, { name: "exclude_hosts", type: "list(raw)" }, { name: "host", type: "string", default: "127.0.0.1" }, { name: "msg", type: "string" }, { name: "path", type: "path" }, { name: "port", type: "integer" }, { name: "search_regex", type: "string" }, { name: "sleep", type: "integer", default: 1 }, { name: "state", type: "string", default: "started", choices: ["absent", "drained", "present", "started", "stopped"] }, { name: "timeout", type: "integer", default: 300 } ]
    return_source: [ { name: "elapsed", type: "integer" }, { name: "match_groupdict", type: "dictionary" }, { name: "match_groups", type: "list(raw)" } ]
    params_target: [ { name: "active_connection_states", type: "list(string)", default: "ESTABLISHED”, “FIN_WAIT1”, “FIN_WAIT2”, “SYN_RECV”, “SYN_SENT”, “TIME_WAIT" }, { name: "connect_timeout", type: "integer", default: 5 }, { name: "delay", type: "integer", default: 0 }, { name: "exclude_hosts", type: "list(string)" }, { name: "host", type: "string", default: "127.0.0.1" }, { name: "msg", type: "string" }, { name: "path", type: "path" }, { name: "port", type: "integer" }, { name: "search_regex", type: "string" }, { name: "sleep", type: "integer", default: 1 }, { name: "state", type: "string", default: "started", choices: ["absent", "drained", "present", "started", "stopped"] }, { name: "timeout", type: "integer", default: 300 } ]
    return_target: [ { name: "elapsed", type: "integer" }, { name: "match_groupdict", type: "dictionary" }, { name: "match_groups", type: "list(string)" } ]

  - name: wait_for_connection
    fqcn: ansible.builtin.wait_for_connection
    collection: ansible.builtin
    params_source: [ { name: "connect_timeout", type: "integer", default: 5 }, { name: "delay", type: "integer", default: 0 }, { name: "sleep", type: "integer", default: 1 }, { name: "timeout", type: "integer", default: 600 } ]
    return_source: [ { name: "elapsed", type: "float" } ]
    params_target: [ { name: "connect_timeout", type: "integer", default: 5 }, { name: "delay", type: "integer", default: 0 }, { name: "sleep", type: "integer", default: 1 }, { name: "timeout", type: "integer", default: 600 } ]
    return_target: [ { name: "elapsed", type: "float" } ]

  - name: yum
    fqcn: ansible.builtin.yum
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "allow_downgrade", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "autoremove", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "bugfix", type: "raw", default: "no" }, { name: "conf_file", type: "raw" }, { name: "disable_excludes", type: "raw" }, { name: "disable_gpg_check", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "disable_plugin", type: "raw" }, { name: "disablerepo", type: "raw" }, { name: "download_dir", type: "string" }, { name: "download_only", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "enable_plugin", type: "raw" }, { name: "enablerepo", type: "raw" }, { name: "exclude", type: "raw" }, { name: "install_weak_deps", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "installroot", type: "raw", default: "/" }, { name: "list", type: "raw" }, { name: "lock_timeout", type: "integer", default: 30 }, { name: "name", aliases: ["pkg"], type: "list(raw)" }, { name: "releasever", type: "raw" }, { name: "security", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "skip_broken", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", type: "raw", choices: ["absent", "installed", "latest", "present", "removed"] }, { name: "update_cache", aliases: ["expire-cache"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "update_only", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_backend", type: "raw", default: "auto", choices: ["auto", "dnf", "yum", "yum4"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    params_target: [ { name: "allow_downgrade", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "autoremove", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "bugfix", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "cacheonly", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "conf_file", type: "string" }, { name: "disable_excludes", type: "string" }, { name: "disable_gpg_check", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "disable_plugin", type: "list(string)" }, { name: "disablerepo", type: "list(string)" }, { name: "download_dir", type: "string" }, { name: "download_only", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "enable_plugin", type: "list(string)" }, { name: "enablerepo", type: "list(string)" }, { name: "exclude", type: "list(string)" }, { name: "install_repoquery", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "install_weak_deps", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "installroot", type: "string", default: "/" }, { name: "list", type: "string" }, { name: "lock_timeout", type: "integer", default: 30 }, { name: "name", aliases: ["pkg"], type: "list(string)" }, { name: "releasever", type: "string" }, { name: "security", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "skip_broken", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", type: "string", choices: ["absent", "installed", "latest", "present", "removed"] }, { name: "update_cache", aliases: ["expire-cache"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "update_only", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_backend", type: "string", default: "auto", choices: ["auto", "dnf", "yum", "yum4"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]

  - name: yum_repository
    fqcn: ansible.builtin.yum_repository
    collection: ansible.builtin
    breaking: true
    breaking_params: true
    params_source: [ { name: "async", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "attributes", aliases: ["attr"], type: "string" }, { name: "bandwidth", type: "raw", default: 0 }, { name: "baseurl", type: "raw" }, { name: "cost", type: "raw", default: 1000 }, { name: "deltarpm_metadata_percentage", type: "raw", default: 100 }, { name: "deltarpm_percentage", type: "raw", default: 75 }, { name: "description", type: "raw" }, { name: "enabled", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "enablegroups", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "exclude", type: "raw" }, { name: "failovermethod", type: "raw", default: "roundrobin", choices: ["priority", "roundrobin"] }, { name: "file", type: "raw" }, { name: "gpgcakey", type: "raw" }, { name: "gpgcheck", type: "boolean", choices: ["no", "yes"] }, { name: "gpgkey", type: "raw" }, { name: "group", type: "string" }, { name: "http_caching", type: "raw", default: "all", choices: ["all", "none", "packages"] }, { name: "include", type: "raw" }, { name: "includepkgs", type: "raw" }, { name: "ip_resolve", type: "raw", default: "whatever", choices: [4, 6, "IPv4", "IPv6", "whatever"] }, { name: "keepalive", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "keepcache", type: "raw", default: 1, choices: [0, 1] }, { name: "metadata_expire", type: "raw", default: 21600 }, { name: "metadata_expire_filter", type: "raw", default: "read-only:present", choices: ["never", "read-only:future", "read-only:past", "read-only:present"] }, { name: "metalink", type: "raw" }, { name: "mirrorlist", type: "raw" }, { name: "mirrorlist_expire", type: "raw", default: 21600 }, { name: "mode", type: "string" }, { name: "name", required: true, type: "raw" }, { name: "owner", type: "string" }, { name: "password", type: "raw" }, { name: "priority", type: "raw", default: 99 }, { name: "protect", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "proxy", type: "raw" }, { name: "proxy_password", type: "raw" }, { name: "proxy_username", type: "raw" }, { name: "repo_gpgcheck", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "reposdir", type: "raw", default: "/etc/yum.repos.d" }, { name: "retries", type: "raw", default: 10 }, { name: "s3_enabled", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "selevel", type: "string", default: "s0" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "skip_if_unavailable", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "ssl_check_cert_permissions", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "sslcacert", aliases: ["ca_cert"], type: "raw" }, { name: "sslclientcert", aliases: ["client_cert"], type: "raw" }, { name: "sslclientkey", aliases: ["client_key"], type: "raw" }, { name: "sslverify", aliases: ["validate_certs"], type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "state", type: "raw", default: "present", choices: ["absent", "present"] }, { name: "throttle", type: "raw" }, { name: "timeout", type: "raw", default: 30 }, { name: "ui_repoid_vars", type: "raw", default: "releasever basearch" }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "username", type: "raw" } ]
    return_source: [ { name: "repo", type: "string" }, { name: "state", type: "string" } ]
    params_target: [ { name: "async", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "attributes", aliases: ["attr"], type: "string" }, { name: "bandwidth", type: "string", default: 0 }, { name: "baseurl", type: "list(string)" }, { name: "cost", type: "string", default: 1000 }, { name: "deltarpm_metadata_percentage", type: "string", default: 100 }, { name: "deltarpm_percentage", type: "string", default: 75 }, { name: "description", type: "string" }, { name: "enabled", type: "boolean", choices: ["no", "yes"] }, { name: "enablegroups", type: "boolean", choices: ["no", "yes"] }, { name: "exclude", type: "list(string)" }, { name: "failovermethod", type: "string", default: "roundrobin", choices: ["priority", "roundrobin"] }, { name: "file", type: "string" }, { name: "gpgcakey", type: "string" }, { name: "gpgcheck", type: "boolean", choices: ["no", "yes"] }, { name: "gpgkey", type: "list(string)" }, { name: "group", type: "string" }, { name: "http_caching", type: "string", default: "all", choices: ["all", "none", "packages"] }, { name: "include", type: "string" }, { name: "includepkgs", type: "list(string)" }, { name: "ip_resolve", type: "string", default: "whatever", choices: [4, 6, "IPv4", "IPv6", "whatever"] }, { name: "keepalive", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "keepcache", type: "string", default: 1, choices: [0, 1] }, { name: "metadata_expire", type: "string", default: 21600 }, { name: "metadata_expire_filter", type: "string", default: "read-only:present", choices: ["never", "read-only:future", "read-only:past", "read-only:present"] }, { name: "metalink", type: "string" }, { name: "mirrorlist", type: "string" }, { name: "mirrorlist_expire", type: "string", default: 21600 }, { name: "mode", type: "raw" }, { name: "module_hotfixes", type: "boolean", choices: ["no", "yes"] }, { name: "name", required: true, type: "string" }, { name: "owner", type: "string" }, { name: "password", type: "string" }, { name: "priority", type: "string", default: 99 }, { name: "protect", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "proxy", type: "string" }, { name: "proxy_password", type: "string" }, { name: "proxy_username", type: "string" }, { name: "repo_gpgcheck", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "reposdir", type: "path", default: "/etc/yum.repos.d" }, { name: "retries", type: "string", default: 10 }, { name: "s3_enabled", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "selevel", type: "string" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "skip_if_unavailable", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "ssl_check_cert_permissions", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "sslcacert", aliases: ["ca_cert"], type: "string" }, { name: "sslclientcert", aliases: ["client_cert"], type: "string" }, { name: "sslclientkey", aliases: ["client_key"], type: "string" }, { name: "sslverify", aliases: ["validate_certs"], type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "throttle", type: "string" }, { name: "timeout", type: "string", default: 30 }, { name: "ui_repoid_vars", type: "string", default: "releasever basearch" }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "username", type: "string" } ]
    return_target: [ { name: "repo", type: "string" }, { name: "state", type: "string" } ]

