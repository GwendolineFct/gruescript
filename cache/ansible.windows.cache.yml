---
modules:
    - name: ansible.windows.win_acl
      doc_2x:
        name: win_acl
        params: [ { name: "inherit", type: "string", choices: ["ContainerInherit", "ObjectInherit"] }, { name: "path", required: true, type: "string" }, { name: "propagation", type: "string", choices: ["InheritOnly", "None", "NoPropagateInherit"] }, { name: "rights", required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "type", required: true, type: "string", choices: ["allow", "deny"] }, { name: "user", required: true, type: "string" } ]
      doc_3x:
        name: ansible.windows.win_acl
        params: [ { name: "inherit", type: "string", choices: ["ContainerInherit", "ObjectInherit"] }, { name: "path", required: true, type: "string" }, { name: "propagation", type: "string", choices: ["InheritOnly", "None", "NoPropagateInherit"] }, { name: "rights", required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "type", required: true, type: "string", choices: ["allow", "deny"] }, { name: "user", required: true, type: "string" } ]
      doc_4x:
        name: ansible.windows.win_acl
        params: [ { name: "inherit", type: "string", choices: ["ContainerInherit", "ObjectInherit"] }, { name: "path", required: true, type: "string" }, { name: "propagation", type: "string", choices: ["InheritOnly", "NoPropagateInherit", "None"] }, { name: "rights", required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "type", required: true, type: "string", choices: ["allow", "deny"] }, { name: "user", required: true, type: "string" } ]
      doc_5x:
        name: ansible.windows.win_acl
        params: [ { name: "inherit", type: "string", choices: ["ContainerInherit", "ObjectInherit"] }, { name: "path", required: true, type: "string" }, { name: "propagation", type: "string", choices: ["InheritOnly", "NoPropagateInherit", "None"] }, { name: "rights", required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "type", required: true, type: "string", choices: ["allow", "deny"] }, { name: "user", required: true, type: "string" } ]
    - name: ansible.windows.win_acl_inheritance
      doc_2x:
        name: win_acl_inheritance
        params: [ { name: "path", required: true, type: "path" }, { name: "reorganize", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", type: "string", default: "absent", choices: ["absent", "present"] } ]
      doc_3x:
        name: ansible.windows.win_acl_inheritance
        params: [ { name: "path", required: true, type: "path" }, { name: "reorganize", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", type: "string", default: "absent", choices: ["absent", "present"] } ]
      doc_4x:
        name: ansible.windows.win_acl_inheritance
        params: [ { name: "path", required: true, type: "path" }, { name: "reorganize", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", type: "string", default: "absent", choices: ["absent", "present"] } ]
      doc_5x:
        name: ansible.windows.win_acl_inheritance
        params: [ { name: "path", required: true, type: "path" }, { name: "reorganize", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", type: "string", default: "absent", choices: ["absent", "present"] } ]
    - name: ansible.windows.win_certificate_store
      doc_2x:
        name: win_certificate_store
        params: [ { name: "file_type", type: "string", default: "der", choices: ["der", "pem", "pkcs12"] }, { name: "key_exportable", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "key_storage", type: "string", default: "default", choices: ["default", "machine", "user"] }, { name: "password", type: "string" }, { name: "path", type: "path" }, { name: "state", type: "string", default: "present", choices: ["absent", "exported", "present"] }, { name: "store_location", type: "raw", default: "LocalMachine", choices: ["CurrentUser", "LocalMachine"] }, { name: "store_name", type: "string", default: "My", choices: ["AddressBook", "AuthRoot", "CertificateAuthority", "Disallowed", "My", "Root", "TrustedPeople", "TrustedPublisher"] }, { name: "thumbprint", type: "string" } ]
        return: [ { name: "thumbprints", type: "list(raw)" } ]
      doc_3x:
        name: ansible.windows.win_certificate_store
        params: [ { name: "file_type", type: "string", default: "der", choices: ["der", "pem", "pkcs12"] }, { name: "key_exportable", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "key_storage", type: "string", default: "default", choices: ["default", "machine", "user"] }, { name: "password", type: "string" }, { name: "path", type: "path" }, { name: "state", type: "string", default: "present", choices: ["absent", "exported", "present"] }, { name: "store_location", type: "string", default: "LocalMachine" }, { name: "store_name", type: "string", default: "My" }, { name: "store_type", type: "string", default: "system", choices: ["system", "service"] }, { name: "thumbprint", type: "string" } ]
        return: [ { name: "thumbprints", type: "list(raw)" } ]
      doc_4x:
        name: ansible.windows.win_certificate_store
        params: [ { name: "file_type", type: "string", default: "der", choices: ["der", "pem", "pkcs12"] }, { name: "key_exportable", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "key_storage", type: "string", default: "default", choices: ["default", "machine", "user"] }, { name: "password", type: "string" }, { name: "path", type: "path" }, { name: "state", type: "string", default: "present", choices: ["absent", "exported", "present"] }, { name: "store_location", type: "string", default: "LocalMachine" }, { name: "store_name", type: "string", default: "My" }, { name: "store_type", type: "string", default: "system", choices: ["service", "system"] }, { name: "thumbprint", type: "string" } ]
        return: [ { name: "thumbprints", type: "list(string)" } ]
      doc_5x:
        name: ansible.windows.win_certificate_store
        params: [ { name: "file_type", type: "string", default: "der", choices: ["der", "pem", "pkcs12"] }, { name: "key_exportable", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "key_storage", type: "string", default: "default", choices: ["default", "machine", "user"] }, { name: "password", type: "string" }, { name: "path", type: "path" }, { name: "state", type: "string", default: "present", choices: ["absent", "exported", "present"] }, { name: "store_location", type: "string", default: "LocalMachine" }, { name: "store_name", type: "string", default: "My" }, { name: "store_type", type: "string", default: "system", choices: ["service", "system"] }, { name: "thumbprint", type: "string" } ]
        return: [ { name: "thumbprints", type: "list(string)" } ]
    - name: ansible.windows.win_command
      doc_2x:
        name: win_command
        params: [ { name: "chdir", type: "path" }, { name: "creates", type: "path" }, { name: "free_form", required: true, type: "string" }, { name: "removes", type: "path" }, { name: "stdin", type: "string" } ]
        return: [ { name: "cmd", type: "string" }, { name: "delta", type: "string" }, { name: "end", type: "string" }, { name: "msg", type: "boolean" }, { name: "rc", type: "integer" }, { name: "start", type: "string" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" }, { name: "stdout_lines", type: "list(raw)" } ]
      doc_3x:
        name: ansible.windows.win_command
        params: [ { name: "chdir", type: "path" }, { name: "creates", type: "path" }, { name: "free_form", required: true, type: "string" }, { name: "output_encoding_override", type: "string" }, { name: "removes", type: "path" }, { name: "stdin", type: "string" } ]
        return: [ { name: "cmd", type: "string" }, { name: "delta", type: "string" }, { name: "end", type: "string" }, { name: "msg", type: "boolean" }, { name: "rc", type: "integer" }, { name: "start", type: "string" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" }, { name: "stdout_lines", type: "list(raw)" } ]
      doc_4x:
        name: ansible.windows.win_command
        params: [ { name: "chdir", type: "path" }, { name: "creates", type: "path" }, { name: "free_form", required: true, type: "string" }, { name: "output_encoding_override", type: "string" }, { name: "removes", type: "path" }, { name: "stdin", type: "string" } ]
        return: [ { name: "cmd", type: "string" }, { name: "delta", type: "string" }, { name: "end", type: "string" }, { name: "msg", type: "boolean" }, { name: "rc", type: "integer" }, { name: "start", type: "string" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" }, { name: "stdout_lines", type: "list(string)" } ]
      doc_5x:
        name: ansible.windows.win_command
        params: [ { name: "chdir", type: "path" }, { name: "creates", type: "path" }, { name: "free_form", required: true, type: "string" }, { name: "output_encoding_override", type: "string" }, { name: "removes", type: "path" }, { name: "stdin", type: "string" } ]
        return: [ { name: "cmd", type: "string" }, { name: "delta", type: "string" }, { name: "end", type: "string" }, { name: "msg", type: "boolean" }, { name: "rc", type: "integer" }, { name: "start", type: "string" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" }, { name: "stdout_lines", type: "list(string)" } ]
    - name: ansible.windows.win_copy
      doc_2x:
        name: win_copy
        params: [ { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "content", type: "string" }, { name: "decrypt", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "dest", required: true, type: "path" }, { name: "force", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "local_follow", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "remote_src", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "src", type: "path" } ]
        return: [ { name: "backup_file", type: "string" }, { name: "checksum", type: "string" }, { name: "dest", type: "string" }, { name: "operation", type: "string" }, { name: "original_basename", type: "string" }, { name: "size", type: "integer" }, { name: "src", type: "string" } ]
      doc_3x:
        name: ansible.windows.win_copy
        params: [ { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "content", type: "string" }, { name: "decrypt", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "dest", required: true, type: "path" }, { name: "force", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "local_follow", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "remote_src", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "src", type: "path" } ]
        return: [ { name: "backup_file", type: "string" }, { name: "checksum", type: "string" }, { name: "dest", type: "string" }, { name: "operation", type: "string" }, { name: "original_basename", type: "string" }, { name: "size", type: "integer" }, { name: "src", type: "string" } ]
      doc_4x:
        name: ansible.windows.win_copy
        params: [ { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "content", type: "string" }, { name: "decrypt", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "dest", required: true, type: "path" }, { name: "force", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "local_follow", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "remote_src", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "src", type: "path" } ]
        return: [ { name: "backup_file", type: "string" }, { name: "checksum", type: "string" }, { name: "dest", type: "string" }, { name: "operation", type: "string" }, { name: "original_basename", type: "string" }, { name: "size", type: "integer" }, { name: "src", type: "string" } ]
      doc_5x:
        name: ansible.windows.win_copy
        params: [ { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "content", type: "string" }, { name: "decrypt", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "dest", required: true, type: "path" }, { name: "force", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "local_follow", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "remote_src", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "src", type: "path" } ]
        return: [ { name: "backup_file", type: "string" }, { name: "checksum", type: "string" }, { name: "dest", type: "string" }, { name: "operation", type: "string" }, { name: "original_basename", type: "string" }, { name: "size", type: "integer" }, { name: "src", type: "string" } ]
    - name: ansible.windows.win_dns_client
      doc_2x:
        name: win_dns_client
        params: [ { name: "adapter_names", required: true, type: "string" }, { name: "ipv4_addresses", required: true, type: "string" } ]
      doc_3x:
        name: ansible.windows.win_dns_client
        params: [ { name: "adapter_names", required: true, type: "list(raw)" }, { name: "dns_servers", aliases: ["ipv4_addresses", "ip_addresses", "addresses"], required: true, type: "list(raw)" } ]
      doc_4x:
        name: ansible.windows.win_dns_client
        params: [ { name: "adapter_names", required: true, type: "list(string)" }, { name: "dns_servers", aliases: ["ipv4_addresses", "ip_addresses", "addresses"], required: true, type: "list(string)" } ]
      doc_5x:
        name: ansible.windows.win_dns_client
        params: [ { name: "adapter_names", required: true, type: "list(string)" }, { name: "dns_servers", aliases: ["ipv4_addresses", "ip_addresses", "addresses"], required: true, type: "list(string)" } ]
    - name: ansible.windows.win_domain
      doc_2x:
        name: win_domain
        params: [ { name: "create_dns_delegation", type: "boolean", choices: ["no", "yes"] }, { name: "database_path", type: "path" }, { name: "dns_domain_name", required: true, type: "string" }, { name: "domain_mode", type: "string", choices: ["Win2003", "Win2008", "Win2008R2", "Win2012", "Win2012R2", "WinThreshold"] }, { name: "domain_netbios_name", type: "string" }, { name: "forest_mode", type: "string", choices: ["Win2003", "Win2008", "Win2008R2", "Win2012", "Win2012R2", "WinThreshold"] }, { name: "safe_mode_password", required: true, type: "string" }, { name: "sysvol_path", type: "path" } ]
        return: [ { name: "reboot_required", type: "boolean" } ]
      doc_3x:
        name: ansible.windows.win_domain
        params: [ { name: "create_dns_delegation", type: "boolean", choices: ["no", "yes"] }, { name: "database_path", type: "path" }, { name: "dns_domain_name", required: true, type: "string" }, { name: "domain_mode", type: "string", choices: ["Win2003", "Win2008", "Win2008R2", "Win2012", "Win2012R2", "WinThreshold"] }, { name: "domain_netbios_name", type: "string" }, { name: "forest_mode", type: "string", choices: ["Win2003", "Win2008", "Win2008R2", "Win2012", "Win2012R2", "WinThreshold"] }, { name: "install_dns", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "log_path", type: "path" }, { name: "safe_mode_password", required: true, type: "string" }, { name: "sysvol_path", type: "path" } ]
        return: [ { name: "reboot_required", type: "boolean" } ]
      doc_4x:
        name: ansible.windows.win_domain
        params: [ { name: "create_dns_delegation", type: "boolean", choices: ["no", "yes"] }, { name: "database_path", type: "path" }, { name: "dns_domain_name", required: true, type: "string" }, { name: "domain_mode", type: "string", choices: ["Win2003", "Win2008", "Win2008R2", "Win2012", "Win2012R2", "WinThreshold"] }, { name: "domain_netbios_name", type: "string" }, { name: "forest_mode", type: "string", choices: ["Win2003", "Win2008", "Win2008R2", "Win2012", "Win2012R2", "WinThreshold"] }, { name: "install_dns", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "log_path", type: "path" }, { name: "safe_mode_password", required: true, type: "string" }, { name: "sysvol_path", type: "path" } ]
        return: [ { name: "reboot_required", type: "boolean" } ]
      doc_5x:
        name: ansible.windows.win_domain
        params: [ { name: "create_dns_delegation", type: "boolean", choices: ["no", "yes"] }, { name: "database_path", type: "path" }, { name: "dns_domain_name", required: true, type: "string" }, { name: "domain_mode", type: "string", choices: ["Win2003", "Win2008", "Win2008R2", "Win2012", "Win2012R2", "WinThreshold"] }, { name: "domain_netbios_name", type: "string" }, { name: "forest_mode", type: "string", choices: ["Win2003", "Win2008", "Win2008R2", "Win2012", "Win2012R2", "WinThreshold"] }, { name: "install_dns", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "log_path", type: "path" }, { name: "safe_mode_password", required: true, type: "string" }, { name: "sysvol_path", type: "path" } ]
        return: [ { name: "reboot_required", type: "boolean" } ]
    - name: ansible.windows.win_domain_controller
      doc_2x:
        name: win_domain_controller
        params: [ { name: "database_path", type: "path" }, { name: "dns_domain_name", type: "string" }, { name: "domain_admin_password", required: true, type: "string" }, { name: "domain_admin_user", required: true, type: "string" }, { name: "local_admin_password", type: "string" }, { name: "read_only", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "safe_mode_password", type: "string" }, { name: "site_name", type: "string" }, { name: "state", type: "string", choices: ["domain_controller", "member_server"] }, { name: "sysvol_path", type: "path" } ]
        return: [ { name: "reboot_required", type: "boolean" } ]
      doc_3x:
        name: ansible.windows.win_domain_controller
        params: [ { name: "database_path", type: "path" }, { name: "dns_domain_name", type: "string" }, { name: "domain_admin_password", required: true, type: "string" }, { name: "domain_admin_user", required: true, type: "string" }, { name: "domain_log_path", type: "path" }, { name: "install_dns", type: "boolean", choices: ["no", "yes"] }, { name: "install_media_path", type: "path" }, { name: "local_admin_password", type: "string" }, { name: "log_path", type: "string" }, { name: "read_only", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "safe_mode_password", type: "string" }, { name: "site_name", type: "string" }, { name: "state", required: true, type: "string", choices: ["domain_controller", "member_server"] }, { name: "sysvol_path", type: "path" } ]
        return: [ { name: "reboot_required", type: "boolean" } ]
      doc_4x:
        name: ansible.windows.win_domain_controller
        params: [ { name: "database_path", type: "path" }, { name: "dns_domain_name", type: "string" }, { name: "domain_admin_password", required: true, type: "string" }, { name: "domain_admin_user", required: true, type: "string" }, { name: "domain_log_path", type: "path" }, { name: "install_dns", type: "boolean", choices: ["no", "yes"] }, { name: "install_media_path", type: "path" }, { name: "local_admin_password", type: "string" }, { name: "log_path", type: "string" }, { name: "read_only", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "safe_mode_password", type: "string" }, { name: "site_name", type: "string" }, { name: "state", required: true, type: "string", choices: ["domain_controller", "member_server"] }, { name: "sysvol_path", type: "path" } ]
        return: [ { name: "reboot_required", type: "boolean" } ]
      doc_5x:
        name: ansible.windows.win_domain_controller
        params: [ { name: "database_path", type: "path" }, { name: "dns_domain_name", type: "string" }, { name: "domain_admin_password", required: true, type: "string" }, { name: "domain_admin_user", required: true, type: "string" }, { name: "domain_log_path", type: "path" }, { name: "install_dns", type: "boolean", choices: ["no", "yes"] }, { name: "install_media_path", type: "path" }, { name: "local_admin_password", type: "string" }, { name: "log_path", type: "string" }, { name: "read_only", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "safe_mode_password", type: "string" }, { name: "site_name", type: "string" }, { name: "state", required: true, type: "string", choices: ["domain_controller", "member_server"] }, { name: "sysvol_path", type: "path" } ]
        return: [ { name: "reboot_required", type: "boolean" } ]
    - name: ansible.windows.win_domain_membership
      doc_2x:
        name: win_domain_membership
        params: [ { name: "dns_domain_name", type: "string" }, { name: "domain_admin_password", type: "string" }, { name: "domain_admin_user", required: true, type: "string" }, { name: "domain_ou_path", type: "string" }, { name: "hostname", type: "string" }, { name: "state", type: "string", choices: ["domain", "workgroup"] }, { name: "workgroup_name", type: "string" } ]
        return: [ { name: "reboot_required", type: "boolean" } ]
      doc_3x:
        name: ansible.windows.win_domain_membership
        params: [ { name: "dns_domain_name", type: "string" }, { name: "domain_admin_password", type: "string" }, { name: "domain_admin_user", required: true, type: "string" }, { name: "domain_ou_path", type: "string" }, { name: "hostname", type: "string" }, { name: "state", type: "string", choices: ["domain", "workgroup"] }, { name: "workgroup_name", type: "string" } ]
        return: [ { name: "reboot_required", type: "boolean" } ]
      doc_4x:
        name: ansible.windows.win_domain_membership
        params: [ { name: "dns_domain_name", type: "string" }, { name: "domain_admin_password", type: "string" }, { name: "domain_admin_user", required: true, type: "string" }, { name: "domain_ou_path", type: "string" }, { name: "hostname", type: "string" }, { name: "state", type: "string", choices: ["domain", "workgroup"] }, { name: "workgroup_name", type: "string" } ]
        return: [ { name: "reboot_required", type: "boolean" } ]
      doc_5x:
        name: ansible.windows.win_domain_membership
        params: [ { name: "dns_domain_name", type: "string" }, { name: "domain_admin_password", type: "string" }, { name: "domain_admin_user", required: true, type: "string" }, { name: "domain_ou_path", type: "string" }, { name: "hostname", type: "string" }, { name: "state", type: "string", choices: ["domain", "workgroup"] }, { name: "workgroup_name", type: "string" } ]
        return: [ { name: "reboot_required", type: "boolean" } ]
    - name: ansible.windows.win_dsc
      doc_2x:
        name: win_dsc
        params: [ { name: "free_form", required: true, type: "string" }, { name: "module_version", type: "string", default: "latest" }, { name: "resource_name", required: true, type: "string" } ]
        return: [ { name: "module_version", type: "string" }, { name: "reboot_required", type: "boolean" }, { name: "verbose_set", type: "list(raw)" }, { name: "verbose_test", type: "list(raw)" } ]
      doc_3x:
        name: ansible.windows.win_dsc
        params: [ { name: "free_form", required: true, type: "string" }, { name: "module_version", type: "string", default: "latest" }, { name: "resource_name", required: true, type: "string" } ]
        return: [ { name: "module_version", type: "string" }, { name: "reboot_required", type: "boolean" }, { name: "verbose_set", type: "list(raw)" }, { name: "verbose_test", type: "list(raw)" } ]
      doc_4x:
        name: ansible.windows.win_dsc
        params: [ { name: "free_form", required: true, type: "string" }, { name: "module_version", type: "string", default: "latest" }, { name: "resource_name", required: true, type: "string" } ]
        return: [ { name: "module_version", type: "string" }, { name: "reboot_required", type: "boolean" }, { name: "verbose_set", type: "list(string)" }, { name: "verbose_test", type: "list(string)" } ]
      doc_5x:
        name: ansible.windows.win_dsc
        params: [ { name: "free_form", required: true, type: "string" }, { name: "module_version", type: "string", default: "latest" }, { name: "resource_name", required: true, type: "string" } ]
        return: [ { name: "module_version", type: "string" }, { name: "reboot_required", type: "boolean" }, { name: "verbose_set", type: "list(string)" }, { name: "verbose_test", type: "list(string)" } ]
    - name: ansible.windows.win_environment
      doc_2x:
        name: win_environment
        params: [ { name: "level", required: true, type: "string", choices: ["machine", "process", "user"] }, { name: "name", required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "value", type: "string" } ]
        return: [ { name: "before_value", type: "string" }, { name: "value", type: "string" } ]
      doc_3x:
        name: ansible.windows.win_environment
        params: [ { name: "level", required: true, type: "string", choices: ["machine", "process", "user"] }, { name: "name", type: "string" }, { name: "state", type: "string", choices: ["absent", "present"] }, { name: "value", type: "string" }, { name: "variables", type: "dictionary" } ]
        return: [ { name: "before_value", type: "string" }, { name: "value", type: "string" }, { name: "values", type: "dictionary" } ]
      doc_4x:
        name: ansible.windows.win_environment
        params: [ { name: "level", required: true, type: "string", choices: ["machine", "process", "user"] }, { name: "name", type: "string" }, { name: "state", type: "string", choices: ["absent", "present"] }, { name: "value", type: "string" }, { name: "variables", type: "dictionary" } ]
        return: [ { name: "before_value", type: "string" }, { name: "value", type: "string" }, { name: "values", type: "dictionary" } ]
      doc_5x:
        name: ansible.windows.win_environment
        params: [ { name: "level", required: true, type: "string", choices: ["machine", "process", "user"] }, { name: "name", type: "string" }, { name: "state", type: "string", choices: ["absent", "present"] }, { name: "value", type: "string" }, { name: "variables", type: "dictionary" } ]
        return: [ { name: "before_value", type: "string" }, { name: "value", type: "string" }, { name: "values", type: "dictionary" } ]
    - name: ansible.windows.win_feature
      doc_2x:
        name: win_feature
        params: [ { name: "include_management_tools", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "include_sub_features", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", required: true, type: "list(raw)" }, { name: "source", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]
        return: [ { name: "exitcode", type: "string" }, { name: "feature_result", type: "complex", params: [ { name: "display_name", type: "string" }, { name: "id", type: "integer" }, { name: "message", type: "list(string)" }, { name: "reboot_required", type: "boolean" }, { name: "restart_needed", type: "boolean" }, { name: "skip_reason", type: "string" }, { name: "success", type: "boolean" } ] }, { name: "reboot_required", type: "boolean" } ]
      doc_3x:
        name: ansible.windows.win_feature
        params: [ { name: "include_management_tools", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "include_sub_features", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", required: true, type: "list(raw)" }, { name: "source", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]
        return: [ { name: "exitcode", type: "string" }, { name: "feature_result", type: "complex", params: [ { name: "display_name", type: "string" }, { name: "id", type: "integer" }, { name: "message", type: "list(raw)" }, { name: "reboot_required", type: "boolean" }, { name: "restart_needed", type: "boolean" }, { name: "skip_reason", type: "string" }, { name: "success", type: "boolean" } ] }, { name: "reboot_required", type: "boolean" } ]
      doc_4x:
        name: ansible.windows.win_feature
        params: [ { name: "include_management_tools", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "include_sub_features", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", required: true, type: "list(string)" }, { name: "source", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]
        return: [ { name: "exitcode", type: "string" }, { name: "feature_result", type: "complex", params: [ { name: "display_name", type: "string" }, { name: "id", type: "integer" }, { name: "message", type: "list(string)" }, { name: "reboot_required", type: "boolean" }, { name: "restart_needed", type: "boolean" }, { name: "skip_reason", type: "string" }, { name: "success", type: "boolean" } ] }, { name: "reboot_required", type: "boolean" } ]
      doc_5x:
        name: ansible.windows.win_feature
        params: [ { name: "include_management_tools", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "include_sub_features", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", required: true, type: "list(string)" }, { name: "source", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]
        return: [ { name: "exitcode", type: "string" }, { name: "feature_result", type: "complex", params: [ { name: "display_name", type: "string" }, { name: "id", type: "integer" }, { name: "message", type: "list(string)" }, { name: "reboot_required", type: "boolean" }, { name: "restart_needed", type: "boolean" }, { name: "skip_reason", type: "string" }, { name: "success", type: "boolean" } ] }, { name: "reboot_required", type: "boolean" } ]
    - name: ansible.windows.win_file
      doc_2x:
        name: win_file
        params: [ { name: "path", aliases: ["dest", "name"], required: true, type: "path" }, { name: "state", type: "string", choices: ["absent", "directory", "file", "touch"] } ]
      doc_3x:
        name: ansible.windows.win_file
        params: [ { name: "path", aliases: ["dest", "name"], required: true, type: "path" }, { name: "state", type: "string", choices: ["absent", "directory", "file", "touch"] } ]
      doc_4x:
        name: ansible.windows.win_file
        params: [ { name: "path", aliases: ["dest", "name"], required: true, type: "path" }, { name: "state", type: "string", choices: ["absent", "directory", "file", "touch"] } ]
      doc_5x:
        name: ansible.windows.win_file
        params: [ { name: "path", aliases: ["dest", "name"], required: true, type: "path" }, { name: "state", type: "string", choices: ["absent", "directory", "file", "touch"] } ]
    - name: ansible.windows.win_find
      doc_2x:
        name: win_find
        params: [ { name: "age", type: "string" }, { name: "age_stamp", type: "string", default: "mtime", choices: ["atime", "ctime", "mtime"] }, { name: "checksum_algorithm", type: "string", default: "sha1", choices: ["md5", "sha1", "sha256", "sha384", "sha512"] }, { name: "file_type", type: "string", default: "file", choices: ["directory", "file"] }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "get_checksum", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "hidden", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "paths", required: true, type: "list(raw)" }, { name: "patterns", aliases: ["regex", "regexp"], type: "list(raw)" }, { name: "recurse", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "size", type: "string" }, { name: "use_regex", type: "boolean", default: "no", choices: ["no", "yes"] } ]
        return: [ { name: "examined", type: "integer" }, { name: "files", type: "complex", params: [ { name: "attributes", type: "string" }, { name: "checksum", type: "string" }, { name: "creationtime", type: "float" }, { name: "extension", type: "string" }, { name: "filename", type: "string" }, { name: "isarchive", type: "boolean" }, { name: "isdir", type: "boolean" }, { name: "ishidden", type: "boolean" }, { name: "islnk", type: "boolean" }, { name: "isreadonly", type: "boolean" }, { name: "isshared", type: "boolean" }, { name: "lastaccesstime", type: "float" }, { name: "lastwritetime", type: "float" }, { name: "lnk_source", type: "string" }, { name: "owner", type: "string" }, { name: "path", type: "string" }, { name: "sharename", type: "string" }, { name: "size", type: "integer" } ] }, { name: "matched", type: "integer" } ]
      doc_3x:
        name: ansible.windows.win_find
        params: [ { name: "age", type: "string" }, { name: "age_stamp", type: "string", default: "mtime", choices: ["atime", "ctime", "mtime"] }, { name: "checksum_algorithm", type: "string", default: "sha1", choices: ["md5", "sha1", "sha256", "sha384", "sha512"] }, { name: "file_type", type: "string", default: "file", choices: ["directory", "file"] }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "get_checksum", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "hidden", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "paths", required: true, type: "list(raw)" }, { name: "patterns", aliases: ["regex", "regexp"], type: "list(raw)" }, { name: "recurse", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "size", type: "string" }, { name: "use_regex", type: "boolean", default: "no", choices: ["no", "yes"] } ]
        return: [ { name: "examined", type: "integer" }, { name: "files", type: "complex", params: [ { name: "attributes", type: "string" }, { name: "checksum", type: "string" }, { name: "creationtime", type: "float" }, { name: "exists", type: "boolean" }, { name: "extension", type: "string" }, { name: "filename", type: "string" }, { name: "hlnk_targets", type: "list(raw)" }, { name: "isarchive", type: "boolean" }, { name: "isdir", type: "boolean" }, { name: "ishidden", type: "boolean" }, { name: "isjunction", type: "boolean" }, { name: "islnk", type: "boolean" }, { name: "isreadonly", type: "boolean" }, { name: "isreg", type: "boolean" }, { name: "isshared", type: "boolean" }, { name: "lastaccesstime", type: "float" }, { name: "lastwritetime", type: "float" }, { name: "lnk_source", type: "string" }, { name: "lnk_target", type: "string" }, { name: "nlink", type: "integer" }, { name: "owner", type: "string" }, { name: "path", type: "string" }, { name: "sharename", type: "string" }, { name: "size", type: "integer" } ] }, { name: "matched", type: "integer" } ]
      doc_4x:
        name: ansible.windows.win_find
        params: [ { name: "age", type: "string" }, { name: "age_stamp", type: "string", default: "mtime", choices: ["atime", "ctime", "mtime"] }, { name: "checksum_algorithm", type: "string", default: "sha1", choices: ["md5", "sha1", "sha256", "sha384", "sha512"] }, { name: "file_type", type: "string", default: "file", choices: ["directory", "file"] }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "get_checksum", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "hidden", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "paths", required: true, type: "list(string)" }, { name: "patterns", aliases: ["regex", "regexp"], type: "list(string)" }, { name: "recurse", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "size", type: "string" }, { name: "use_regex", type: "boolean", default: "no", choices: ["no", "yes"] } ]
        return: [ { name: "examined", type: "integer" }, { name: "files", type: "complex", params: [ { name: "attributes", type: "string" }, { name: "checksum", type: "string" }, { name: "creationtime", type: "float" }, { name: "exists", type: "boolean" }, { name: "extension", type: "string" }, { name: "filename", type: "string" }, { name: "hlnk_targets", type: "list(string)" }, { name: "isarchive", type: "boolean" }, { name: "isdir", type: "boolean" }, { name: "ishidden", type: "boolean" }, { name: "isjunction", type: "boolean" }, { name: "islnk", type: "boolean" }, { name: "isreadonly", type: "boolean" }, { name: "isreg", type: "boolean" }, { name: "isshared", type: "boolean" }, { name: "lastaccesstime", type: "float" }, { name: "lastwritetime", type: "float" }, { name: "lnk_source", type: "string" }, { name: "lnk_target", type: "string" }, { name: "nlink", type: "integer" }, { name: "owner", type: "string" }, { name: "path", type: "string" }, { name: "sharename", type: "string" }, { name: "size", type: "integer" } ] }, { name: "matched", type: "integer" } ]
      doc_5x:
        name: ansible.windows.win_find
        params: [ { name: "age", type: "string" }, { name: "age_stamp", type: "string", default: "mtime", choices: ["atime", "ctime", "mtime"] }, { name: "checksum_algorithm", type: "string", default: "sha1", choices: ["md5", "sha1", "sha256", "sha384", "sha512"] }, { name: "file_type", type: "string", default: "file", choices: ["directory", "file"] }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "get_checksum", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "hidden", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "paths", required: true, type: "list(string)" }, { name: "patterns", aliases: ["regex", "regexp"], type: "list(string)" }, { name: "recurse", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "size", type: "string" }, { name: "use_regex", type: "boolean", default: "no", choices: ["no", "yes"] } ]
        return: [ { name: "examined", type: "integer" }, { name: "files", type: "complex", params: [ { name: "attributes", type: "string" }, { name: "checksum", type: "string" }, { name: "creationtime", type: "float" }, { name: "exists", type: "boolean" }, { name: "extension", type: "string" }, { name: "filename", type: "string" }, { name: "hlnk_targets", type: "list(string)" }, { name: "isarchive", type: "boolean" }, { name: "isdir", type: "boolean" }, { name: "ishidden", type: "boolean" }, { name: "isjunction", type: "boolean" }, { name: "islnk", type: "boolean" }, { name: "isreadonly", type: "boolean" }, { name: "isreg", type: "boolean" }, { name: "isshared", type: "boolean" }, { name: "lastaccesstime", type: "float" }, { name: "lastwritetime", type: "float" }, { name: "lnk_source", type: "string" }, { name: "lnk_target", type: "string" }, { name: "nlink", type: "integer" }, { name: "owner", type: "string" }, { name: "path", type: "string" }, { name: "sharename", type: "string" }, { name: "size", type: "integer" } ] }, { name: "matched", type: "integer" } ]
    - name: ansible.windows.win_get_url
      doc_2x:
        name: win_get_url
        params: [ { name: "checksum", type: "string" }, { name: "checksum_algorithm", type: "string", default: "sha1", choices: ["md5", "sha1", "sha256", "sha384", "sha512"] }, { name: "checksum_url", type: "string" }, { name: "client_cert", type: "string" }, { name: "client_cert_password", type: "string" }, { name: "dest", required: true, type: "path" }, { name: "follow_redirects", type: "string", default: "safe", choices: ["all", "none", "safe"] }, { name: "force", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "force_basic_auth", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "headers", type: "dictionary" }, { name: "http_agent", type: "string", default: "ansible-httpget" }, { name: "maximum_redirection", type: "integer", default: 50 }, { name: "method", type: "string" }, { name: "proxy_password", type: "string" }, { name: "proxy_url", type: "string" }, { name: "proxy_use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "proxy_username", type: "string" }, { name: "timeout", type: "integer", default: 30 }, { name: "url", required: true, type: "string" }, { name: "url_password", aliases: ["password"], type: "string" }, { name: "url_username", aliases: ["user", "username"], type: "string" }, { name: "use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_proxy", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
        return: [ { name: "checksum_dest", type: "string" }, { name: "checksum_src", type: "string" }, { name: "dest", type: "string" }, { name: "elapsed", type: "float" }, { name: "msg", type: "string" }, { name: "size", type: "integer" }, { name: "status_code", type: "integer" }, { name: "url", type: "string" } ]
      doc_3x:
        name: ansible.windows.win_get_url
        params: [ { name: "checksum", type: "string" }, { name: "checksum_algorithm", type: "string", default: "sha1", choices: ["md5", "sha1", "sha256", "sha384", "sha512"] }, { name: "checksum_url", type: "string" }, { name: "client_cert", type: "string" }, { name: "client_cert_password", type: "string" }, { name: "dest", required: true, type: "path" }, { name: "follow_redirects", type: "string", default: "safe", choices: ["all", "none", "safe"] }, { name: "force", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "force_basic_auth", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "headers", type: "dictionary" }, { name: "http_agent", type: "string", default: "ansible-httpget" }, { name: "maximum_redirection", type: "integer", default: 50 }, { name: "proxy_password", type: "string" }, { name: "proxy_url", type: "string" }, { name: "proxy_use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "proxy_username", type: "string" }, { name: "url", required: true, type: "string" }, { name: "url_method", aliases: ["method"], type: "string" }, { name: "url_password", aliases: ["password"], type: "string" }, { name: "url_timeout", aliases: ["timeout"], type: "integer", default: 30 }, { name: "url_username", aliases: ["user", "username"], type: "string" }, { name: "use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_proxy", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
        return: [ { name: "checksum_dest", type: "string" }, { name: "checksum_src", type: "string" }, { name: "dest", type: "string" }, { name: "elapsed", type: "float" }, { name: "msg", type: "string" }, { name: "size", type: "integer" }, { name: "status_code", type: "integer" }, { name: "url", type: "string" } ]
      doc_4x:
        name: ansible.windows.win_get_url
        params: [ { name: "checksum", type: "string" }, { name: "checksum_algorithm", type: "string", default: "sha1", choices: ["md5", "sha1", "sha256", "sha384", "sha512"] }, { name: "checksum_url", type: "string" }, { name: "client_cert", type: "string" }, { name: "client_cert_password", type: "string" }, { name: "dest", required: true, type: "path" }, { name: "follow_redirects", type: "string", default: "safe", choices: ["all", "none", "safe"] }, { name: "force", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "force_basic_auth", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "headers", type: "dictionary" }, { name: "http_agent", type: "string", default: "ansible-httpget" }, { name: "maximum_redirection", type: "integer", default: 50 }, { name: "proxy_password", type: "string" }, { name: "proxy_url", type: "string" }, { name: "proxy_use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "proxy_username", type: "string" }, { name: "url", required: true, type: "string" }, { name: "url_method", aliases: ["method"], type: "string" }, { name: "url_password", aliases: ["password"], type: "string" }, { name: "url_timeout", aliases: ["timeout"], type: "integer", default: 30 }, { name: "url_username", aliases: ["user", "username"], type: "string" }, { name: "use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_proxy", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
        return: [ { name: "checksum_dest", type: "string" }, { name: "checksum_src", type: "string" }, { name: "dest", type: "string" }, { name: "elapsed", type: "float" }, { name: "msg", type: "string" }, { name: "size", type: "integer" }, { name: "status_code", type: "integer" }, { name: "url", type: "string" } ]
      doc_5x:
        name: ansible.windows.win_get_url
        params: [ { name: "checksum", type: "string" }, { name: "checksum_algorithm", type: "string", default: "sha1", choices: ["md5", "sha1", "sha256", "sha384", "sha512"] }, { name: "checksum_url", type: "string" }, { name: "client_cert", type: "string" }, { name: "client_cert_password", type: "string" }, { name: "dest", required: true, type: "path" }, { name: "follow_redirects", type: "string", default: "safe", choices: ["all", "none", "safe"] }, { name: "force", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "force_basic_auth", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "headers", type: "dictionary" }, { name: "http_agent", type: "string", default: "ansible-httpget" }, { name: "maximum_redirection", type: "integer", default: 50 }, { name: "proxy_password", type: "string" }, { name: "proxy_url", type: "string" }, { name: "proxy_use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "proxy_username", type: "string" }, { name: "url", required: true, type: "string" }, { name: "url_method", aliases: ["method"], type: "string" }, { name: "url_password", aliases: ["password"], type: "string" }, { name: "url_timeout", aliases: ["timeout"], type: "integer", default: 30 }, { name: "url_username", aliases: ["user", "username"], type: "string" }, { name: "use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_proxy", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
        return: [ { name: "checksum_dest", type: "string" }, { name: "checksum_src", type: "string" }, { name: "dest", type: "string" }, { name: "elapsed", type: "float" }, { name: "msg", type: "string" }, { name: "size", type: "integer" }, { name: "status_code", type: "integer" }, { name: "url", type: "string" } ]
    - name: ansible.windows.win_group
      doc_2x:
        name: win_group
        params: [ { name: "description", type: "string" }, { name: "name", required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]
      doc_3x:
        name: ansible.windows.win_group
        params: [ { name: "description", type: "string" }, { name: "name", required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]
      doc_4x:
        name: ansible.windows.win_group
        params: [ { name: "description", type: "string" }, { name: "name", required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]
      doc_5x:
        name: ansible.windows.win_group
        params: [ { name: "description", type: "string" }, { name: "name", required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]
    - name: ansible.windows.win_group_membership
      doc_2x:
        name: win_group_membership
        params: [ { name: "members", required: true, type: "list(raw)" }, { name: "name", required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present", "pure"] } ]
        return: [ { name: "added", type: "list(raw)" }, { name: "members", type: "list(raw)" }, { name: "name", type: "string" }, { name: "removed", type: "list(raw)" } ]
      doc_3x:
        name: ansible.windows.win_group_membership
        params: [ { name: "members", required: true, type: "list(raw)" }, { name: "name", required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present", "pure"] } ]
        return: [ { name: "added", type: "list(raw)" }, { name: "members", type: "list(raw)" }, { name: "name", type: "string" }, { name: "removed", type: "list(raw)" } ]
      doc_4x:
        name: ansible.windows.win_group_membership
        params: [ { name: "members", required: true, type: "list(string)" }, { name: "name", required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present", "pure"] } ]
        return: [ { name: "added", type: "list(string)" }, { name: "members", type: "list(string)" }, { name: "name", type: "string" }, { name: "removed", type: "list(string)" } ]
      doc_5x:
        name: ansible.windows.win_group_membership
        params: [ { name: "members", required: true, type: "list(string)" }, { name: "name", required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present", "pure"] } ]
        return: [ { name: "added", type: "list(string)" }, { name: "members", type: "list(string)" }, { name: "name", type: "string" }, { name: "removed", type: "list(string)" } ]
    - name: ansible.windows.win_hostname
      doc_2x:
        name: win_hostname
        params: [ { name: "name", required: true, type: "string" } ]
        return: [ { name: "old_name", type: "string" }, { name: "reboot_required", type: "boolean" } ]
      doc_3x:
        name: ansible.windows.win_hostname
        params: [ { name: "name", required: true, type: "string" } ]
        return: [ { name: "old_name", type: "string" }, { name: "reboot_required", type: "boolean" } ]
      doc_4x:
        name: ansible.windows.win_hostname
        params: [ { name: "name", required: true, type: "string" } ]
        return: [ { name: "old_name", type: "string" }, { name: "reboot_required", type: "boolean" } ]
      doc_5x:
        name: ansible.windows.win_hostname
        params: [ { name: "name", required: true, type: "string" } ]
        return: [ { name: "old_name", type: "string" }, { name: "reboot_required", type: "boolean" } ]
    - name: ansible.windows.win_optional_feature
      doc_2x:
        name: win_optional_feature
        params: [ { name: "include_parent", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", required: true, type: "list(raw)" }, { name: "source", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]
        return: [ { name: "reboot_required", type: "boolean" } ]
      doc_3x:
        name: ansible.windows.win_optional_feature
        params: [ { name: "include_parent", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", required: true, type: "list(raw)" }, { name: "source", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]
        return: [ { name: "reboot_required", type: "boolean" } ]
      doc_4x:
        name: ansible.windows.win_optional_feature
        params: [ { name: "include_parent", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", required: true, type: "list(string)" }, { name: "source", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]
        return: [ { name: "reboot_required", type: "boolean" } ]
      doc_5x:
        name: ansible.windows.win_optional_feature
        params: [ { name: "include_parent", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", required: true, type: "list(string)" }, { name: "source", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]
        return: [ { name: "reboot_required", type: "boolean" } ]
    - name: ansible.windows.win_owner
      doc_2x:
        name: win_owner
        params: [ { name: "path", required: true, type: "path" }, { name: "recurse", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "user", required: true, type: "string" } ]
      doc_3x:
        name: ansible.windows.win_owner
        params: [ { name: "path", required: true, type: "path" }, { name: "recurse", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "user", required: true, type: "string" } ]
      doc_4x:
        name: ansible.windows.win_owner
        params: [ { name: "path", required: true, type: "path" }, { name: "recurse", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "user", required: true, type: "string" } ]
      doc_5x:
        name: ansible.windows.win_owner
        params: [ { name: "path", required: true, type: "path" }, { name: "recurse", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "user", required: true, type: "string" } ]
    - name: ansible.windows.win_package
      doc_2x:
        name: win_package
        params: [ { name: "arguments", type: "string" }, { name: "chdir", type: "path" }, { name: "creates_path", type: "path" }, { name: "creates_service", type: "string" }, { name: "creates_version", type: "string" }, { name: "expected_return_code", type: "list(raw)", default: "0, 3010" }, { name: "log_path", type: "path" }, { name: "password", aliases: ["user_password"], type: "string" }, { name: "path", type: "string" }, { name: "product_id", aliases: ["productid"], type: "string" }, { name: "state", aliases: ["ensure"], type: "string", default: "present", choices: ["absent", "present"] }, { name: "username", aliases: ["user_name"], type: "string" }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
        return: [ { name: "log", type: "string" }, { name: "rc", type: "integer" }, { name: "reboot_required", type: "boolean" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" } ]
      doc_3x:
        name: ansible.windows.win_package
        params: [ { name: "arguments", type: "raw" }, { name: "chdir", type: "path" }, { name: "client_cert", type: "string" }, { name: "client_cert_password", type: "string" }, { name: "creates_path", type: "path" }, { name: "creates_service", type: "string" }, { name: "creates_version", type: "string" }, { name: "expected_return_code", type: "list(raw)", default: "0, 3010" }, { name: "follow_redirects", type: "string", default: "safe", choices: ["all", "none", "safe"] }, { name: "force_basic_auth", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "headers", type: "dictionary" }, { name: "http_agent", type: "string", default: "ansible-httpget" }, { name: "log_path", type: "path" }, { name: "maximum_redirection", type: "integer", default: 50 }, { name: "password", aliases: ["user_password"], type: "string" }, { name: "path", type: "string" }, { name: "product_id", aliases: ["productid"], type: "string" }, { name: "provider", type: "string", default: "auto", choices: ["auto", "msi", "msix", "msp", "registry"] }, { name: "proxy_password", type: "string" }, { name: "proxy_url", type: "string" }, { name: "proxy_use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "proxy_username", type: "string" }, { name: "state", aliases: ["ensure"], type: "string", default: "present", choices: ["absent", "present"] }, { name: "url_method", type: "string" }, { name: "url_password", type: "string" }, { name: "url_timeout", type: "integer", default: 30 }, { name: "url_username", type: "string" }, { name: "use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_proxy", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "username", aliases: ["user_name"], type: "string" }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "wait_for_children", type: "boolean", default: "no", choices: ["no", "yes"] } ]
        return: [ { name: "log", type: "string" }, { name: "rc", type: "integer" }, { name: "reboot_required", type: "boolean" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" } ]
      doc_4x:
        name: ansible.windows.win_package
        params: [ { name: "arguments", type: "raw" }, { name: "chdir", type: "path" }, { name: "client_cert", type: "string" }, { name: "client_cert_password", type: "string" }, { name: "creates_path", type: "path" }, { name: "creates_service", type: "string" }, { name: "creates_version", type: "string" }, { name: "expected_return_code", type: "list(integer)", default: "0, 3010" }, { name: "follow_redirects", type: "string", default: "safe", choices: ["all", "none", "safe"] }, { name: "force_basic_auth", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "headers", type: "dictionary" }, { name: "http_agent", type: "string", default: "ansible-httpget" }, { name: "log_path", type: "path" }, { name: "maximum_redirection", type: "integer", default: 50 }, { name: "password", aliases: ["user_password"], type: "string" }, { name: "path", type: "string" }, { name: "product_id", aliases: ["productid"], type: "string" }, { name: "provider", type: "string", default: "auto", choices: ["auto", "msi", "msix", "msp", "registry"] }, { name: "proxy_password", type: "string" }, { name: "proxy_url", type: "string" }, { name: "proxy_use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "proxy_username", type: "string" }, { name: "state", aliases: ["ensure"], type: "string", default: "present", choices: ["absent", "present"] }, { name: "url_method", type: "string" }, { name: "url_password", type: "string" }, { name: "url_timeout", type: "integer", default: 30 }, { name: "url_username", type: "string" }, { name: "use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_proxy", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "username", aliases: ["user_name"], type: "string" }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "wait_for_children", type: "boolean", default: "no", choices: ["no", "yes"] } ]
        return: [ { name: "log", type: "string" }, { name: "rc", type: "integer" }, { name: "reboot_required", type: "boolean" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" } ]
      doc_5x:
        name: ansible.windows.win_package
        params: [ { name: "arguments", type: "raw" }, { name: "chdir", type: "path" }, { name: "client_cert", type: "string" }, { name: "client_cert_password", type: "string" }, { name: "creates_path", type: "path" }, { name: "creates_service", type: "string" }, { name: "creates_version", type: "string" }, { name: "expected_return_code", type: "list(integer)", default: "0, 3010" }, { name: "follow_redirects", type: "string", default: "safe", choices: ["all", "none", "safe"] }, { name: "force_basic_auth", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "headers", type: "dictionary" }, { name: "http_agent", type: "string", default: "ansible-httpget" }, { name: "log_path", type: "path" }, { name: "maximum_redirection", type: "integer", default: 50 }, { name: "password", aliases: ["user_password"], type: "string" }, { name: "path", type: "string" }, { name: "product_id", aliases: ["productid"], type: "string" }, { name: "provider", type: "string", default: "auto", choices: ["auto", "msi", "msix", "msp", "registry"] }, { name: "proxy_password", type: "string" }, { name: "proxy_url", type: "string" }, { name: "proxy_use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "proxy_username", type: "string" }, { name: "state", aliases: ["ensure"], type: "string", default: "present", choices: ["absent", "present"] }, { name: "url_method", type: "string" }, { name: "url_password", type: "string" }, { name: "url_timeout", type: "integer", default: 30 }, { name: "url_username", type: "string" }, { name: "use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_proxy", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "username", aliases: ["user_name"], type: "string" }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "wait_for_children", type: "boolean", default: "no", choices: ["no", "yes"] } ]
        return: [ { name: "log", type: "string" }, { name: "rc", type: "integer" }, { name: "reboot_required", type: "boolean" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" } ]
    - name: ansible.windows.win_path
      doc_2x:
        name: win_path
        params: [ { name: "elements", required: true, type: "list(raw)" }, { name: "name", type: "string", default: "PATH" }, { name: "scope", type: "string", default: "machine", choices: ["machine", "user"] }, { name: "state", type: "string", choices: ["absent", "present"] } ]
      doc_3x:
        name: ansible.windows.win_path
        params: [ { name: "elements", required: true, type: "list(raw)" }, { name: "name", type: "string", default: "PATH" }, { name: "scope", type: "string", default: "machine", choices: ["machine", "user"] }, { name: "state", type: "string", choices: ["absent", "present"] } ]
      doc_4x:
        name: ansible.windows.win_path
        params: [ { name: "elements", required: true, type: "list(string)" }, { name: "name", type: "string", default: "PATH" }, { name: "scope", type: "string", default: "machine", choices: ["machine", "user"] }, { name: "state", type: "string", choices: ["absent", "present"] } ]
      doc_5x:
        name: ansible.windows.win_path
        params: [ { name: "elements", required: true, type: "list(string)" }, { name: "name", type: "string", default: "PATH" }, { name: "scope", type: "string", default: "machine", choices: ["machine", "user"] }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]
    - name: ansible.windows.win_ping
      doc_2x:
        name: win_ping
        params: [ { name: "data", type: "string", default: "pong" } ]
        return: [ { name: "ping", type: "string" } ]
      doc_3x:
        name: ansible.windows.win_ping
        params: [ { name: "data", type: "string", default: "pong" } ]
        return: [ { name: "ping", type: "string" } ]
      doc_4x:
        name: ansible.windows.win_ping
        params: [ { name: "data", type: "string", default: "pong" } ]
        return: [ { name: "ping", type: "string" } ]
      doc_5x:
        name: ansible.windows.win_ping
        params: [ { name: "data", type: "string", default: "pong" } ]
        return: [ { name: "ping", type: "string" } ]
    - name: ansible.windows.win_powershell
      doc_2x:
        missing: true
      doc_3x:
        name: ansible.windows.win_powershell
        params: [ { name: "arguments", type: "list(raw)" }, { name: "chdir", type: "string" }, { name: "creates", type: "string" }, { name: "depth", type: "integer", default: 2 }, { name: "error_action", type: "string", default: "continue", choices: ["silently_continue", "continue", "stop"] }, { name: "executable", type: "string" }, { name: "parameters", type: "dictionary" }, { name: "removes", type: "string" }, { name: "script", required: true, type: "string" } ]
        return: [ { name: "debug", type: "list(raw)" }, { name: "error", type: "list(raw)", params: [ { name: "category_info", type: "dictionary", params: [ { name: "activity", type: "string" }, { name: "category", type: "string" }, { name: "category_id", type: "integer" }, { name: "reason", type: "string" }, { name: "target_name", type: "string" }, { name: "target_type", type: "string" } ] }, { name: "error_details", type: "dictionary", params: [ { name: "message", type: "string" }, { name: "recommended_action", type: "string" } ] }, { name: "exception", type: "dictionary", params: [ { name: "help_link", type: "string" }, { name: "hresult", type: "integer" }, { name: "inner_exception", type: "dictionary" }, { name: "message", type: "string" }, { name: "source", type: "string" }, { name: "type", type: "string" } ] }, { name: "fully_qualified_error_id", type: "string" }, { name: "output", type: "string" }, { name: "pipeline_iteration_info", type: "list(raw)" }, { name: "script_stack_trace", type: "string" }, { name: "target_object", type: "string" } ] }, { name: "host_err", type: "string" }, { name: "host_out", type: "string" }, { name: "information", type: "list(raw)", params: [ { name: "message_data", type: "complex" }, { name: "source", type: "string" }, { name: "tags", type: "list(raw)" }, { name: "time_generated", type: "string" } ] }, { name: "output", type: "list(raw)" }, { name: "result", type: "complex" }, { name: "verbose", type: "list(raw)" }, { name: "warning", type: "list(raw)" } ]
      doc_4x:
        name: ansible.windows.win_powershell
        params: [ { name: "arguments", type: "list(string)" }, { name: "chdir", type: "string" }, { name: "creates", type: "string" }, { name: "depth", type: "integer", default: 2 }, { name: "error_action", type: "string", default: "continue", choices: ["continue", "silently_continue", "stop"] }, { name: "executable", type: "string" }, { name: "parameters", type: "dictionary" }, { name: "removes", type: "string" }, { name: "script", required: true, type: "string" } ]
        return: [ { name: "debug", type: "list(string)" }, { name: "error", type: "list(dictionary)", params: [ { name: "category_info", type: "dictionary", params: [ { name: "activity", type: "string" }, { name: "category", type: "string" }, { name: "category_id", type: "integer" }, { name: "reason", type: "string" }, { name: "target_name", type: "string" }, { name: "target_type", type: "string" } ] }, { name: "error_details", type: "dictionary", params: [ { name: "message", type: "string" }, { name: "recommended_action", type: "string" } ] }, { name: "exception", type: "dictionary", params: [ { name: "help_link", type: "string" }, { name: "hresult", type: "integer" }, { name: "inner_exception", type: "dictionary" }, { name: "message", type: "string" }, { name: "source", type: "string" }, { name: "type", type: "string" } ] }, { name: "fully_qualified_error_id", type: "string" }, { name: "output", type: "string" }, { name: "pipeline_iteration_info", type: "list(integer)" }, { name: "script_stack_trace", type: "string" }, { name: "target_object", type: "string" } ] }, { name: "host_err", type: "string" }, { name: "host_out", type: "string" }, { name: "information", type: "list(dictionary)", params: [ { name: "message_data", type: "complex" }, { name: "source", type: "string" }, { name: "tags", type: "list(string)" }, { name: "time_generated", type: "string" } ] }, { name: "output", type: "list(string)" }, { name: "result", type: "complex" }, { name: "verbose", type: "list(string)" }, { name: "warning", type: "list(string)" } ]
      doc_5x:
        name: ansible.windows.win_powershell
        params: [ { name: "arguments", type: "list(string)" }, { name: "chdir", type: "string" }, { name: "creates", type: "string" }, { name: "depth", type: "integer", default: 2 }, { name: "error_action", type: "string", default: "continue", choices: ["continue", "silently_continue", "stop"] }, { name: "executable", type: "string" }, { name: "parameters", type: "dictionary" }, { name: "removes", type: "string" }, { name: "script", required: true, type: "string" } ]
        return: [ { name: "debug", type: "list(string)" }, { name: "error", type: "list(dictionary)", params: [ { name: "category_info", type: "dictionary", params: [ { name: "activity", type: "string" }, { name: "category", type: "string" }, { name: "category_id", type: "integer" }, { name: "reason", type: "string" }, { name: "target_name", type: "string" }, { name: "target_type", type: "string" } ] }, { name: "error_details", type: "dictionary", params: [ { name: "message", type: "string" }, { name: "recommended_action", type: "string" } ] }, { name: "exception", type: "dictionary", params: [ { name: "help_link", type: "string" }, { name: "hresult", type: "integer" }, { name: "inner_exception", type: "dictionary" }, { name: "message", type: "string" }, { name: "source", type: "string" }, { name: "type", type: "string" } ] }, { name: "fully_qualified_error_id", type: "string" }, { name: "output", type: "string" }, { name: "pipeline_iteration_info", type: "list(integer)" }, { name: "script_stack_trace", type: "string" }, { name: "target_object", type: "string" } ] }, { name: "host_err", type: "string" }, { name: "host_out", type: "string" }, { name: "information", type: "list(dictionary)", params: [ { name: "message_data", type: "complex" }, { name: "source", type: "string" }, { name: "tags", type: "list(string)" }, { name: "time_generated", type: "string" } ] }, { name: "output", type: "list(string)" }, { name: "result", type: "complex" }, { name: "verbose", type: "list(string)" }, { name: "warning", type: "list(string)" } ]
    - name: ansible.windows.win_reboot
      doc_2x:
        name: win_reboot
        params: [ { name: "connect_timeout", aliases: ["connect_timeout_sec"], type: "integer", default: 5 }, { name: "msg", type: "string", default: "Reboot initiated by Ansible" }, { name: "post_reboot_delay", aliases: ["post_reboot_delay_sec"], type: "integer", default: 0 }, { name: "pre_reboot_delay", aliases: ["pre_reboot_delay_sec"], type: "integer", default: 2 }, { name: "reboot_timeout", aliases: ["reboot_timeout_sec"], type: "integer", default: 600 }, { name: "shutdown_timeout", aliases: ["shutdown_timeout_sec"], type: "integer", default: 600 }, { name: "test_command", type: "string", default: "whoami" } ]
        return: [ { name: "elapsed", type: "float" }, { name: "rebooted", type: "boolean" } ]
      doc_3x:
        name: ansible.windows.win_reboot
        params: [ { name: "boot_time_command", type: "string", default: "(Get-WmiObject -ClassName Win32_OperatingSystem).LastBootUpTime" }, { name: "connect_timeout", aliases: ["connect_timeout_sec"], type: "integer", default: 5 }, { name: "msg", type: "string", default: "Reboot initiated by Ansible" }, { name: "post_reboot_delay", aliases: ["post_reboot_delay_sec"], type: "integer", default: 0 }, { name: "pre_reboot_delay", aliases: ["pre_reboot_delay_sec"], type: "integer", default: 2 }, { name: "reboot_timeout", aliases: ["reboot_timeout_sec"], type: "integer", default: 600 }, { name: "test_command", type: "string", default: "whoami" } ]
        return: [ { name: "elapsed", type: "float" }, { name: "rebooted", type: "boolean" } ]
      doc_4x:
        name: ansible.windows.win_reboot
        params: [ { name: "boot_time_command", type: "string", default: "(Get-CimInstance -ClassName Win32_OperatingSystem -Property LastBootUpTime).LastBootUpTime.ToFileTime()" }, { name: "connect_timeout", aliases: ["connect_timeout_sec"], type: "float", default: 5 }, { name: "msg", type: "string", default: "Reboot initiated by Ansible" }, { name: "post_reboot_delay", aliases: ["post_reboot_delay_sec"], type: "float", default: 0 }, { name: "pre_reboot_delay", aliases: ["pre_reboot_delay_sec"], type: "float", default: 2 }, { name: "reboot_timeout", aliases: ["reboot_timeout_sec"], type: "float", default: 600 }, { name: "test_command", type: "string" } ]
        return: [ { name: "elapsed", type: "float" }, { name: "rebooted", type: "boolean" } ]
      doc_5x:
        name: ansible.windows.win_reboot
        params: [ { name: "boot_time_command", type: "string", default: "(Get-CimInstance -ClassName Win32_OperatingSystem -Property LastBootUpTime).LastBootUpTime.ToFileTime()" }, { name: "connect_timeout", aliases: ["connect_timeout_sec"], type: "float", default: 5 }, { name: "msg", type: "string", default: "Reboot initiated by Ansible" }, { name: "post_reboot_delay", aliases: ["post_reboot_delay_sec"], type: "float", default: 0 }, { name: "pre_reboot_delay", aliases: ["pre_reboot_delay_sec"], type: "float", default: 2 }, { name: "reboot_timeout", aliases: ["reboot_timeout_sec"], type: "float", default: 600 }, { name: "test_command", type: "string" } ]
        return: [ { name: "elapsed", type: "float" }, { name: "rebooted", type: "boolean" } ]
    - name: ansible.windows.win_reg_stat
      doc_2x:
        name: win_reg_stat
        params: [ { name: "name", aliases: ["entry", "value", "property"], type: "string" }, { name: "path", aliases: ["key"], required: true, type: "string" } ]
        return: [ { name: "changed", type: "boolean" }, { name: "exists", type: "boolean" }, { name: "properties", type: "dictionary" }, { name: "raw_value", type: "string" }, { name: "sub_keys", type: "list(raw)" }, { name: "type", type: "string" }, { name: "value", type: "string" } ]
      doc_3x:
        name: ansible.windows.win_reg_stat
        params: [ { name: "name", aliases: ["entry", "value", "property"], type: "string" }, { name: "path", aliases: ["key"], required: true, type: "string" } ]
        return: [ { name: "changed", type: "boolean" }, { name: "exists", type: "boolean" }, { name: "properties", type: "dictionary" }, { name: "raw_value", type: "string" }, { name: "sub_keys", type: "list(raw)" }, { name: "type", type: "string" }, { name: "value", type: "string" } ]
      doc_4x:
        name: ansible.windows.win_reg_stat
        params: [ { name: "name", aliases: ["entry", "value", "property"], type: "string" }, { name: "path", aliases: ["key"], required: true, type: "string" } ]
        return: [ { name: "changed", type: "boolean" }, { name: "exists", type: "boolean" }, { name: "properties", type: "dictionary" }, { name: "raw_value", type: "string" }, { name: "sub_keys", type: "list(string)" }, { name: "type", type: "string" }, { name: "value", type: "string" } ]
      doc_5x:
        name: ansible.windows.win_reg_stat
        params: [ { name: "name", aliases: ["entry", "value", "property"], type: "string" }, { name: "path", aliases: ["key"], required: true, type: "string" } ]
        return: [ { name: "changed", type: "boolean" }, { name: "exists", type: "boolean" }, { name: "properties", type: "dictionary" }, { name: "raw_value", type: "string" }, { name: "sub_keys", type: "list(string)" }, { name: "type", type: "string" }, { name: "value", type: "string" } ]
    - name: ansible.windows.win_regedit
      doc_2x:
        name: win_regedit
        params: [ { name: "data", type: "string" }, { name: "delete_key", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "hive", type: "path" }, { name: "name", aliases: ["entry"], type: "string" }, { name: "path", aliases: ["key"], required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "type", aliases: ["datatype"], type: "string", default: "string", choices: ["binary", "dword", "expandstring", "multistring", "string", "qword"] } ]
        return: [ { name: "data_changed", type: "boolean" }, { name: "data_type_changed", type: "boolean" } ]
      doc_3x:
        name: ansible.windows.win_regedit
        params: [ { name: "data", type: "raw" }, { name: "delete_key", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "hive", type: "path" }, { name: "name", aliases: ["entry", "value"], type: "string" }, { name: "path", aliases: ["key"], required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "type", aliases: ["datatype"], type: "string", default: "string", choices: ["none", "binary", "dword", "expandstring", "multistring", "string", "qword"] } ]
        return: [ { name: "data_changed", type: "boolean" }, { name: "data_type_changed", type: "boolean" } ]
      doc_4x:
        name: ansible.windows.win_regedit
        params: [ { name: "data", type: "raw" }, { name: "delete_key", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "hive", type: "path" }, { name: "name", aliases: ["entry", "value"], type: "string" }, { name: "path", aliases: ["key"], required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "type", aliases: ["datatype"], type: "string", default: "string", choices: ["binary", "dword", "expandstring", "multistring", "none", "qword", "string"] } ]
        return: [ { name: "data_changed", type: "boolean" }, { name: "data_type_changed", type: "boolean" } ]
      doc_5x:
        name: ansible.windows.win_regedit
        params: [ { name: "data", type: "raw" }, { name: "delete_key", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "hive", type: "path" }, { name: "name", aliases: ["entry", "value"], type: "string" }, { name: "path", aliases: ["key"], required: true, type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "type", aliases: ["datatype"], type: "string", default: "string", choices: ["binary", "dword", "expandstring", "multistring", "none", "qword", "string"] } ]
        return: [ { name: "data_changed", type: "boolean" }, { name: "data_type_changed", type: "boolean" } ]
    - name: ansible.windows.win_service
      doc_2x:
        name: win_service
        params: [ { name: "dependencies", type: "list(raw)" }, { name: "dependency_action", type: "string", default: "set", choices: ["add", "remove", "set"] }, { name: "description", type: "string" }, { name: "desktop_interact", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "display_name", type: "string" }, { name: "force_dependent_services", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", required: true, type: "string" }, { name: "password", type: "string" }, { name: "path", type: "string" }, { name: "start_mode", type: "string", choices: ["auto", "delayed", "disabled", "manual"] }, { name: "state", type: "string", choices: ["absent", "paused", "started", "stopped", "restarted"] }, { name: "username", type: "string" } ]
        return: [ { name: "can_pause_and_continue", type: "boolean" }, { name: "depended_by", type: "list(raw)" }, { name: "dependencies", type: "list(raw)" }, { name: "description", type: "string" }, { name: "desktop_interact", type: "boolean" }, { name: "display_name", type: "string" }, { name: "exists", type: "boolean" }, { name: "name", type: "string" }, { name: "path", type: "string" }, { name: "start_mode", type: "string" }, { name: "state", type: "string" }, { name: "username", type: "string" } ]
      doc_3x:
        name: ansible.windows.win_service
        params: [ { name: "dependencies", type: "list(raw)" }, { name: "dependency_action", type: "string", default: "set", choices: ["add", "remove", "set"] }, { name: "description", type: "string" }, { name: "desktop_interact", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "display_name", type: "string" }, { name: "error_control", type: "string", choices: ["critical", "ignore", "normal", "severe"] }, { name: "failure_actions", type: "list(raw)", params: [ { name: "delay_ms", aliases: ["delay"], type: "raw", default: 0 }, { name: "type", required: true, type: "string", choices: ["none", "reboot", "restart", "run_command"] } ] }, { name: "failure_actions_on_non_crash_failure", type: "boolean", choices: ["no", "yes"] }, { name: "failure_command", type: "string" }, { name: "failure_reboot_msg", type: "string" }, { name: "failure_reset_period_sec", aliases: ["failure_reset_period"], type: "raw" }, { name: "force_dependent_services", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "load_order_group", type: "string" }, { name: "name", required: true, type: "string" }, { name: "password", type: "string" }, { name: "path", type: "string" }, { name: "pre_shutdown_timeout_ms", aliases: ["pre_shutdown_timeout"], type: "raw" }, { name: "required_privileges", type: "list(raw)" }, { name: "service_type", type: "string", choices: ["user_own_process", "user_share_process", "win32_own_process", "win32_share_process"] }, { name: "sid_info", type: "string", choices: ["none", "restricted", "unrestricted"] }, { name: "start_mode", type: "string", choices: ["auto", "delayed", "disabled", "manual"] }, { name: "state", type: "string", choices: ["absent", "paused", "started", "stopped", "restarted"] }, { name: "update_password", type: "string", choices: ["always", "on_create"] }, { name: "username", type: "string" } ]
        return: [ { name: "can_pause_and_continue", type: "boolean" }, { name: "depended_by", type: "list(raw)" }, { name: "dependencies", type: "list(raw)" }, { name: "description", type: "string" }, { name: "desktop_interact", type: "boolean" }, { name: "display_name", type: "string" }, { name: "exists", type: "boolean" }, { name: "name", type: "string" }, { name: "path", type: "string" }, { name: "start_mode", type: "string" }, { name: "state", type: "string" }, { name: "username", type: "string" } ]
      doc_4x:
        name: ansible.windows.win_service
        params: [ { name: "dependencies", type: "list(string)" }, { name: "dependency_action", type: "string", default: "set", choices: ["add", "remove", "set"] }, { name: "description", type: "string" }, { name: "desktop_interact", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "display_name", type: "string" }, { name: "error_control", type: "string", choices: ["critical", "ignore", "normal", "severe"] }, { name: "failure_actions", type: "list(dictionary)", params: [ { name: "delay_ms", aliases: ["delay"], type: "raw", default: 0 }, { name: "type", required: true, type: "string", choices: ["none", "reboot", "restart", "run_command"] } ] }, { name: "failure_actions_on_non_crash_failure", type: "boolean", choices: ["no", "yes"] }, { name: "failure_command", type: "string" }, { name: "failure_reboot_msg", type: "string" }, { name: "failure_reset_period_sec", aliases: ["failure_reset_period"], type: "raw" }, { name: "force_dependent_services", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "load_order_group", type: "string" }, { name: "name", required: true, type: "string" }, { name: "password", type: "string" }, { name: "path", type: "string" }, { name: "pre_shutdown_timeout_ms", aliases: ["pre_shutdown_timeout"], type: "raw" }, { name: "required_privileges", type: "list(string)" }, { name: "service_type", type: "string", choices: ["user_own_process", "user_share_process", "win32_own_process", "win32_share_process"] }, { name: "sid_info", type: "string", choices: ["none", "restricted", "unrestricted"] }, { name: "start_mode", type: "string", choices: ["auto", "delayed", "disabled", "manual"] }, { name: "state", type: "string", choices: ["absent", "paused", "restarted", "started", "stopped"] }, { name: "update_password", type: "string", choices: ["always", "on_create"] }, { name: "username", type: "string" } ]
        return: [ { name: "can_pause_and_continue", type: "boolean" }, { name: "depended_by", type: "list(string)" }, { name: "dependencies", type: "list(string)" }, { name: "description", type: "string" }, { name: "desktop_interact", type: "boolean" }, { name: "display_name", type: "string" }, { name: "exists", type: "boolean" }, { name: "name", type: "string" }, { name: "path", type: "string" }, { name: "start_mode", type: "string" }, { name: "state", type: "string" }, { name: "username", type: "string" } ]
      doc_5x:
        name: ansible.windows.win_service
        params: [ { name: "dependencies", type: "list(string)" }, { name: "dependency_action", type: "string", default: "set", choices: ["add", "remove", "set"] }, { name: "description", type: "string" }, { name: "desktop_interact", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "display_name", type: "string" }, { name: "error_control", type: "string", choices: ["critical", "ignore", "normal", "severe"] }, { name: "failure_actions", type: "list(dictionary)", params: [ { name: "delay_ms", aliases: ["delay"], type: "raw", default: 0 }, { name: "type", required: true, type: "string", choices: ["none", "reboot", "restart", "run_command"] } ] }, { name: "failure_actions_on_non_crash_failure", type: "boolean", choices: ["no", "yes"] }, { name: "failure_command", type: "string" }, { name: "failure_reboot_msg", type: "string" }, { name: "failure_reset_period_sec", aliases: ["failure_reset_period"], type: "raw" }, { name: "force_dependent_services", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "load_order_group", type: "string" }, { name: "name", required: true, type: "string" }, { name: "password", type: "string" }, { name: "path", type: "string" }, { name: "pre_shutdown_timeout_ms", aliases: ["pre_shutdown_timeout"], type: "raw" }, { name: "required_privileges", type: "list(string)" }, { name: "service_type", type: "string", choices: ["user_own_process", "user_share_process", "win32_own_process", "win32_share_process"] }, { name: "sid_info", type: "string", choices: ["none", "restricted", "unrestricted"] }, { name: "start_mode", type: "string", choices: ["auto", "delayed", "disabled", "manual"] }, { name: "state", type: "string", choices: ["absent", "paused", "restarted", "started", "stopped"] }, { name: "update_password", type: "string", choices: ["always", "on_create"] }, { name: "username", type: "string" } ]
        return: [ { name: "can_pause_and_continue", type: "boolean" }, { name: "depended_by", type: "list(string)" }, { name: "dependencies", type: "list(string)" }, { name: "description", type: "string" }, { name: "desktop_interact", type: "boolean" }, { name: "display_name", type: "string" }, { name: "exists", type: "boolean" }, { name: "name", type: "string" }, { name: "path", type: "string" }, { name: "start_mode", type: "string" }, { name: "state", type: "string" }, { name: "username", type: "string" } ]
    - name: ansible.windows.win_service_info
      doc_2x:
        missing: true
      doc_3x:
        name: ansible.windows.win_service_info
        params: [ { name: "name", type: "string" } ]
        return: [ { name: "exists", type: "boolean" }, { name: "services", type: "list(raw)", params: [ { name: "checkpoint", type: "integer" }, { name: "controls_accepted", type: "list(raw)" }, { name: "dependencies", type: "list(raw)" }, { name: "dependency_of", type: "list(raw)" }, { name: "description", type: "string" }, { name: "desktop_interact", type: "boolean" }, { name: "display_name", type: "string" }, { name: "error_control", type: "string" }, { name: "failure_action_on_non_crash_failure", type: "boolean" }, { name: "failure_actions", type: "list(raw)", params: [ { name: "delay_ms", type: "integer" }, { name: "type", type: "string" } ] }, { name: "failure_command", type: "string" }, { name: "failure_reboot_msg", type: "string" }, { name: "failure_reset_period_sec", type: "integer" }, { name: "launch_protection", type: "string" }, { name: "load_order_group", type: "string" }, { name: "name", type: "string" }, { name: "path", type: "string" }, { name: "pre_shutdown_timeout_ms", type: "integer" }, { name: "preferred_node", type: "integer" }, { name: "process_id", type: "integer" }, { name: "required_privileges", type: "list(raw)" }, { name: "service_exit_code", type: "integer" }, { name: "service_flags", type: "list(raw)" }, { name: "service_type", type: "string" }, { name: "sid_info", type: "string" }, { name: "start_mode", type: "string" }, { name: "state", type: "string" }, { name: "triggers", type: "list(raw)", params: [ { name: "action", type: "string" }, { name: "data_items", type: "list(raw)", params: [ { name: "data", type: "complex" }, { name: "type", type: "string" } ] }, { name: "sub_type", type: "string" }, { name: "sub_type_guid", type: "string" }, { name: "type", type: "string" } ] }, { name: "username", type: "string" }, { name: "wait_hint_ms", type: "integer" }, { name: "win32_exitcode", type: "integer" } ] } ]
      doc_4x:
        name: ansible.windows.win_service_info
        params: [ { name: "name", type: "string" } ]
        return: [ { name: "exists", type: "boolean" }, { name: "services", type: "list(dictionary)", params: [ { name: "checkpoint", type: "integer" }, { name: "controls_accepted", type: "list(string)" }, { name: "dependencies", type: "list(string)" }, { name: "dependency_of", type: "list(string)" }, { name: "description", type: "string" }, { name: "desktop_interact", type: "boolean" }, { name: "display_name", type: "string" }, { name: "error_control", type: "string" }, { name: "failure_action_on_non_crash_failure", type: "boolean" }, { name: "failure_actions", type: "list(dictionary)", params: [ { name: "delay_ms", type: "integer" }, { name: "type", type: "string" } ] }, { name: "failure_command", type: "string" }, { name: "failure_reboot_msg", type: "string" }, { name: "failure_reset_period_sec", type: "integer" }, { name: "launch_protection", type: "string" }, { name: "load_order_group", type: "string" }, { name: "name", type: "string" }, { name: "path", type: "string" }, { name: "pre_shutdown_timeout_ms", type: "integer" }, { name: "preferred_node", type: "integer" }, { name: "process_id", type: "integer" }, { name: "required_privileges", type: "list(string)" }, { name: "service_exit_code", type: "integer" }, { name: "service_flags", type: "list(string)" }, { name: "service_type", type: "string" }, { name: "sid_info", type: "string" }, { name: "start_mode", type: "string" }, { name: "state", type: "string" }, { name: "triggers", type: "list(dictionary)", params: [ { name: "action", type: "string" }, { name: "data_items", type: "list(dictionary)", params: [ { name: "data", type: "complex" }, { name: "type", type: "string" } ] }, { name: "sub_type", type: "string" }, { name: "sub_type_guid", type: "string" }, { name: "type", type: "string" } ] }, { name: "username", type: "string" }, { name: "wait_hint_ms", type: "integer" }, { name: "win32_exitcode", type: "integer" } ] } ]
      doc_5x:
        name: ansible.windows.win_service_info
        params: [ { name: "name", type: "string" } ]
        return: [ { name: "exists", type: "boolean" }, { name: "services", type: "list(dictionary)", params: [ { name: "checkpoint", type: "integer" }, { name: "controls_accepted", type: "list(string)" }, { name: "dependencies", type: "list(string)" }, { name: "dependency_of", type: "list(string)" }, { name: "description", type: "string" }, { name: "desktop_interact", type: "boolean" }, { name: "display_name", type: "string" }, { name: "error_control", type: "string" }, { name: "failure_action_on_non_crash_failure", type: "boolean" }, { name: "failure_actions", type: "list(dictionary)", params: [ { name: "delay_ms", type: "integer" }, { name: "type", type: "string" } ] }, { name: "failure_command", type: "string" }, { name: "failure_reboot_msg", type: "string" }, { name: "failure_reset_period_sec", type: "integer" }, { name: "launch_protection", type: "string" }, { name: "load_order_group", type: "string" }, { name: "name", type: "string" }, { name: "path", type: "string" }, { name: "pre_shutdown_timeout_ms", type: "integer" }, { name: "preferred_node", type: "integer" }, { name: "process_id", type: "integer" }, { name: "required_privileges", type: "list(string)" }, { name: "service_exit_code", type: "integer" }, { name: "service_flags", type: "list(string)" }, { name: "service_type", type: "string" }, { name: "sid_info", type: "string" }, { name: "start_mode", type: "string" }, { name: "state", type: "string" }, { name: "triggers", type: "list(dictionary)", params: [ { name: "action", type: "string" }, { name: "data_items", type: "list(dictionary)", params: [ { name: "data", type: "complex" }, { name: "type", type: "string" } ] }, { name: "sub_type", type: "string" }, { name: "sub_type_guid", type: "string" }, { name: "type", type: "string" } ] }, { name: "username", type: "string" }, { name: "wait_hint_ms", type: "integer" }, { name: "win32_exitcode", type: "integer" } ] } ]
    - name: ansible.windows.win_share
      doc_2x:
        name: win_share
        params: [ { name: "caching_mode", type: "string", default: "Manual", choices: ["BranchCache", "Documents", "Manual", "None", "Programs", "Unknown"] }, { name: "change", type: "string" }, { name: "deny", type: "string" }, { name: "description", type: "string" }, { name: "encrypt", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "full", type: "string" }, { name: "list", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", required: true, type: "string" }, { name: "path", required: true, type: "path" }, { name: "read", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]
        return: [ { name: "actions", type: "list(raw)" } ]
      doc_3x:
        name: ansible.windows.win_share
        params: [ { name: "caching_mode", type: "string", default: "Manual", choices: ["BranchCache", "Documents", "Manual", "None", "Programs", "Unknown"] }, { name: "change", type: "string" }, { name: "deny", type: "string" }, { name: "description", type: "string" }, { name: "encrypt", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "full", type: "string" }, { name: "list", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", required: true, type: "string" }, { name: "path", required: true, type: "path" }, { name: "read", type: "string" }, { name: "rule_action", type: "string", default: "set", choices: ["set", "add"] }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]
        return: [ { name: "actions", type: "list(raw)" } ]
      doc_4x:
        name: ansible.windows.win_share
        params: [ { name: "caching_mode", type: "string", default: "Manual", choices: ["BranchCache", "Documents", "Manual", "None", "Programs", "Unknown"] }, { name: "change", type: "string" }, { name: "deny", type: "string" }, { name: "description", type: "string" }, { name: "encrypt", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "full", type: "string" }, { name: "list", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", required: true, type: "string" }, { name: "path", required: true, type: "path" }, { name: "read", type: "string" }, { name: "rule_action", type: "string", default: "set", choices: ["add", "set"] }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]
        return: [ { name: "actions", type: "list(string)" } ]
      doc_5x:
        name: ansible.windows.win_share
        params: [ { name: "caching_mode", type: "string", default: "Manual", choices: ["BranchCache", "Documents", "Manual", "None", "Programs", "Unknown"] }, { name: "change", type: "string" }, { name: "deny", type: "string" }, { name: "description", type: "string" }, { name: "encrypt", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "full", type: "string" }, { name: "list", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name", required: true, type: "string" }, { name: "path", required: true, type: "path" }, { name: "read", type: "string" }, { name: "rule_action", type: "string", default: "set", choices: ["add", "set"] }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] } ]
        return: [ { name: "actions", type: "list(string)" } ]
    - name: ansible.windows.win_shell
      doc_2x:
        name: win_shell
        params: [ { name: "chdir", type: "path" }, { name: "creates", type: "path" }, { name: "executable", type: "path" }, { name: "free_form", required: true, type: "string" }, { name: "no_profile", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "removes", type: "path" }, { name: "stdin", type: "string" } ]
        return: [ { name: "cmd", type: "string" }, { name: "delta", type: "string" }, { name: "end", type: "string" }, { name: "msg", type: "boolean" }, { name: "rc", type: "integer" }, { name: "start", type: "string" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" }, { name: "stdout_lines", type: "list(raw)" } ]
      doc_3x:
        name: ansible.windows.win_shell
        params: [ { name: "chdir", type: "path" }, { name: "creates", type: "path" }, { name: "executable", type: "path" }, { name: "free_form", required: true, type: "string" }, { name: "no_profile", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "output_encoding_override", type: "string" }, { name: "removes", type: "path" }, { name: "stdin", type: "string" } ]
        return: [ { name: "cmd", type: "string" }, { name: "delta", type: "string" }, { name: "end", type: "string" }, { name: "msg", type: "boolean" }, { name: "rc", type: "integer" }, { name: "start", type: "string" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" }, { name: "stdout_lines", type: "list(raw)" } ]
      doc_4x:
        name: ansible.windows.win_shell
        params: [ { name: "chdir", type: "path" }, { name: "creates", type: "path" }, { name: "executable", type: "path" }, { name: "free_form", required: true, type: "string" }, { name: "no_profile", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "output_encoding_override", type: "string" }, { name: "removes", type: "path" }, { name: "stdin", type: "string" } ]
        return: [ { name: "cmd", type: "string" }, { name: "delta", type: "string" }, { name: "end", type: "string" }, { name: "msg", type: "boolean" }, { name: "rc", type: "integer" }, { name: "start", type: "string" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" }, { name: "stdout_lines", type: "list(string)" } ]
      doc_5x:
        name: ansible.windows.win_shell
        params: [ { name: "chdir", type: "path" }, { name: "creates", type: "path" }, { name: "executable", type: "path" }, { name: "free_form", required: true, type: "string" }, { name: "no_profile", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "output_encoding_override", type: "string" }, { name: "removes", type: "path" }, { name: "stdin", type: "string" } ]
        return: [ { name: "cmd", type: "string" }, { name: "delta", type: "string" }, { name: "end", type: "string" }, { name: "msg", type: "boolean" }, { name: "rc", type: "integer" }, { name: "start", type: "string" }, { name: "stderr", type: "string" }, { name: "stdout", type: "string" }, { name: "stdout_lines", type: "list(string)" } ]
    - name: ansible.windows.win_stat
      doc_2x:
        name: win_stat
        params: [ { name: "checksum_algorithm", type: "string", default: "sha1", choices: ["md5", "sha1", "sha256", "sha384", "sha512"] }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "get_checksum", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "get_md5", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "path", aliases: ["dest", "name"], required: true, type: "path" } ]
        return: [ { name: "changed", type: "boolean" }, { name: "stat", type: "complex", params: [ { name: "attributes", type: "string" }, { name: "checksum", type: "string" }, { name: "creationtime", type: "float" }, { name: "exists", type: "boolean" }, { name: "extension", type: "string" }, { name: "filename", type: "string" }, { name: "hlnk_targets", type: "list(raw)" }, { name: "isarchive", type: "boolean" }, { name: "isdir", type: "boolean" }, { name: "ishidden", type: "boolean" }, { name: "isjunction", type: "boolean" }, { name: "islnk", type: "boolean" }, { name: "isreadonly", type: "boolean" }, { name: "isreg", type: "boolean" }, { name: "isshared", type: "boolean" }, { name: "lastaccesstime", type: "float" }, { name: "lastwritetime", type: "float" }, { name: "lnk_source", type: "string" }, { name: "lnk_target", type: "string" }, { name: "md5", type: "string" }, { name: "nlink", type: "integer" }, { name: "owner", type: "string" }, { name: "path", type: "string" }, { name: "sharename", type: "string" }, { name: "size", type: "integer" } ] } ]
      doc_3x:
        name: ansible.windows.win_stat
        params: [ { name: "checksum_algorithm", type: "string", default: "sha1", choices: ["md5", "sha1", "sha256", "sha384", "sha512"] }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "get_checksum", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "path", aliases: ["dest", "name"], required: true, type: "path" } ]
        return: [ { name: "changed", type: "boolean" }, { name: "stat", type: "complex", params: [ { name: "attributes", type: "string" }, { name: "checksum", type: "string" }, { name: "creationtime", type: "float" }, { name: "exists", type: "boolean" }, { name: "extension", type: "string" }, { name: "filename", type: "string" }, { name: "hlnk_targets", type: "list(raw)" }, { name: "isarchive", type: "boolean" }, { name: "isdir", type: "boolean" }, { name: "ishidden", type: "boolean" }, { name: "isjunction", type: "boolean" }, { name: "islnk", type: "boolean" }, { name: "isreadonly", type: "boolean" }, { name: "isreg", type: "boolean" }, { name: "isshared", type: "boolean" }, { name: "lastaccesstime", type: "float" }, { name: "lastwritetime", type: "float" }, { name: "lnk_source", type: "string" }, { name: "lnk_target", type: "string" }, { name: "nlink", type: "integer" }, { name: "owner", type: "string" }, { name: "path", type: "string" }, { name: "sharename", type: "string" }, { name: "size", type: "integer" } ] } ]
      doc_4x:
        name: ansible.windows.win_stat
        params: [ { name: "checksum_algorithm", type: "string", default: "sha1", choices: ["md5", "sha1", "sha256", "sha384", "sha512"] }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "get_checksum", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "path", aliases: ["dest", "name"], required: true, type: "path" } ]
        return: [ { name: "changed", type: "boolean" }, { name: "stat", type: "complex", params: [ { name: "attributes", type: "string" }, { name: "checksum", type: "string" }, { name: "creationtime", type: "float" }, { name: "exists", type: "boolean" }, { name: "extension", type: "string" }, { name: "filename", type: "string" }, { name: "hlnk_targets", type: "list(string)" }, { name: "isarchive", type: "boolean" }, { name: "isdir", type: "boolean" }, { name: "ishidden", type: "boolean" }, { name: "isjunction", type: "boolean" }, { name: "islnk", type: "boolean" }, { name: "isreadonly", type: "boolean" }, { name: "isreg", type: "boolean" }, { name: "isshared", type: "boolean" }, { name: "lastaccesstime", type: "float" }, { name: "lastwritetime", type: "float" }, { name: "lnk_source", type: "string" }, { name: "lnk_target", type: "string" }, { name: "nlink", type: "integer" }, { name: "owner", type: "string" }, { name: "path", type: "string" }, { name: "sharename", type: "string" }, { name: "size", type: "integer" } ] } ]
      doc_5x:
        name: ansible.windows.win_stat
        params: [ { name: "checksum_algorithm", type: "string", default: "sha1", choices: ["md5", "sha1", "sha256", "sha384", "sha512"] }, { name: "follow", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "get_checksum", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "path", aliases: ["dest", "name"], required: true, type: "path" } ]
        return: [ { name: "changed", type: "boolean" }, { name: "stat", type: "complex", params: [ { name: "attributes", type: "string" }, { name: "checksum", type: "string" }, { name: "creationtime", type: "float" }, { name: "exists", type: "boolean" }, { name: "extension", type: "string" }, { name: "filename", type: "string" }, { name: "hlnk_targets", type: "list(string)" }, { name: "isarchive", type: "boolean" }, { name: "isdir", type: "boolean" }, { name: "ishidden", type: "boolean" }, { name: "isjunction", type: "boolean" }, { name: "islnk", type: "boolean" }, { name: "isreadonly", type: "boolean" }, { name: "isreg", type: "boolean" }, { name: "isshared", type: "boolean" }, { name: "lastaccesstime", type: "float" }, { name: "lastwritetime", type: "float" }, { name: "lnk_source", type: "string" }, { name: "lnk_target", type: "string" }, { name: "nlink", type: "integer" }, { name: "owner", type: "string" }, { name: "path", type: "string" }, { name: "sharename", type: "string" }, { name: "size", type: "integer" } ] } ]
    - name: ansible.windows.win_tempfile
      doc_2x:
        name: win_tempfile
        params: [ { name: "path", aliases: ["dest"], type: "path", default: "%TEMP%" }, { name: "prefix", type: "string", default: "ansible." }, { name: "state", type: "string", default: "file", choices: ["directory", "file"] }, { name: "suffix", type: "string" } ]
        return: [ { name: "path", type: "string" } ]
      doc_3x:
        name: ansible.windows.win_tempfile
        params: [ { name: "path", aliases: ["dest"], type: "path", default: "%TEMP%" }, { name: "prefix", type: "string", default: "ansible." }, { name: "state", type: "string", default: "file", choices: ["directory", "file"] }, { name: "suffix", type: "string" } ]
        return: [ { name: "path", type: "string" } ]
      doc_4x:
        name: ansible.windows.win_tempfile
        params: [ { name: "path", aliases: ["dest"], type: "path", default: "%TEMP%" }, { name: "prefix", type: "string", default: "ansible." }, { name: "state", type: "string", default: "file", choices: ["directory", "file"] }, { name: "suffix", type: "string" } ]
        return: [ { name: "path", type: "string" } ]
      doc_5x:
        name: ansible.windows.win_tempfile
        params: [ { name: "path", aliases: ["dest"], type: "path", default: "%TEMP%" }, { name: "prefix", type: "string", default: "ansible." }, { name: "state", type: "string", default: "file", choices: ["directory", "file"] }, { name: "suffix", type: "string" } ]
        return: [ { name: "path", type: "string" } ]
    - name: ansible.windows.win_template
      doc_2x:
        name: win_template
        params: [ { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "block_end_string", type: "string", default: "%}" }, { name: "block_start_string", type: "string", default: "{%" }, { name: "dest", required: true, type: "path" }, { name: "force", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "lstrip_blocks", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "newline_sequence", type: "string", default: "\\r\\n", choices: ["\\n", "\\r", "\\r\\n"] }, { name: "output_encoding", type: "string", default: "utf-8" }, { name: "src", required: true, type: "path" }, { name: "trim_blocks", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "variable_end_string", type: "string", default: "}}" }, { name: "variable_start_string", type: "string", default: "{{" } ]
        return: [ { name: "backup_file", type: "string" } ]
      doc_3x:
        name: ansible.windows.win_template
        params: [ { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "block_end_string", type: "string", default: "%}" }, { name: "block_start_string", type: "string", default: "{%" }, { name: "dest", required: true, type: "path" }, { name: "force", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "lstrip_blocks", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "newline_sequence", type: "string", default: "\\r\\n", choices: ["\\n", "\\r", "\\r\\n"] }, { name: "output_encoding", type: "string", default: "utf-8" }, { name: "src", required: true, type: "path" }, { name: "trim_blocks", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "variable_end_string", type: "string", default: "}}" }, { name: "variable_start_string", type: "string", default: "{{" } ]
        return: [ { name: "backup_file", type: "string" } ]
      doc_4x:
        name: ansible.windows.win_template
        params: [ { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "block_end_string", type: "string", default: "%}" }, { name: "block_start_string", type: "string", default: "{%" }, { name: "dest", required: true, type: "path" }, { name: "force", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "lstrip_blocks", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "newline_sequence", type: "string", default: "\\r\\n", choices: ["\\n", "\\r", "\\r\\n"] }, { name: "output_encoding", type: "string", default: "utf-8" }, { name: "src", required: true, type: "path" }, { name: "trim_blocks", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "variable_end_string", type: "string", default: "}}" }, { name: "variable_start_string", type: "string", default: "{{" } ]
        return: [ { name: "backup_file", type: "string" } ]
      doc_5x:
        name: ansible.windows.win_template
        params: [ { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "block_end_string", type: "string", default: "%}" }, { name: "block_start_string", type: "string", default: "{%" }, { name: "dest", required: true, type: "path" }, { name: "force", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "lstrip_blocks", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "newline_sequence", type: "string", default: "\\r\\n", choices: ["\\n", "\\r", "\\r\\n"] }, { name: "output_encoding", type: "string", default: "utf-8" }, { name: "src", required: true, type: "path" }, { name: "trim_blocks", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "variable_end_string", type: "string", default: "}}" }, { name: "variable_start_string", type: "string", default: "{{" } ]
        return: [ { name: "backup_file", type: "string" } ]
    - name: ansible.windows.win_updates
      doc_2x:
        name: win_updates
        params: [ { name: "blacklist", type: "list(raw)" }, { name: "category_names", type: "list(raw)", default: "CriticalUpdates\", \"SecurityUpdates\", \"UpdateRollups" }, { name: "log_path", type: "path" }, { name: "reboot", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "reboot_timeout", type: "raw", default: 1200 }, { name: "server_selection", type: "string", default: "default", choices: ["default", "managed_server", "windows_update"] }, { name: "state", type: "string", default: "installed", choices: ["installed", "searched", "downloaded"] }, { name: "use_scheduled_task", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "whitelist", type: "list(raw)" } ]
        return: [ { name: "failed_update_count", type: "integer" }, { name: "filtered_updates", type: "complex", params: [ { name: "filtered_reason", type: "string" } ] }, { name: "found_update_count", type: "integer" }, { name: "installed_update_count", type: "integer" }, { name: "reboot_required", type: "boolean" }, { name: "updates", type: "complex", params: [ { name: "categories", type: "list(string)" }, { name: "failure_hresult_code", type: "boolean" }, { name: "id", type: "string" }, { name: "installed", type: "boolean" }, { name: "kb", type: "list(string)" }, { name: "title", type: "string" } ] } ]
      doc_3x:
        name: ansible.windows.win_updates
        params: [ { name: "blacklist", type: "list(raw)" }, { name: "category_names", type: "list(raw)", default: "CriticalUpdates\", \"SecurityUpdates\", \"UpdateRollups" }, { name: "log_path", type: "path" }, { name: "reboot", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "reboot_timeout", type: "string", default: 1200 }, { name: "server_selection", type: "string", default: "default", choices: ["default", "managed_server", "windows_update"] }, { name: "state", type: "string", default: "installed", choices: ["installed", "searched", "downloaded"] }, { name: "use_scheduled_task", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "whitelist", type: "list(raw)" } ]
        return: [ { name: "failed_update_count", type: "integer" }, { name: "filtered_updates", type: "complex", params: [ { name: "filtered_reason", type: "string" } ] }, { name: "found_update_count", type: "integer" }, { name: "installed_update_count", type: "integer" }, { name: "reboot_required", type: "boolean" }, { name: "updates", type: "complex", params: [ { name: "categories", type: "list(raw)" }, { name: "failure_hresult_code", type: "boolean" }, { name: "id", type: "string" }, { name: "installed", type: "boolean" }, { name: "kb", type: "list(raw)" }, { name: "title", type: "string" } ] } ]
      doc_4x:
        name: ansible.windows.win_updates
        params: [ { name: "_output_path", type: "string" }, { name: "_wait", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "accept_list", aliases: ["whitelist"], type: "list(string)" }, { name: "category_names", type: "list(string)", default: "CriticalUpdates”, “SecurityUpdates”, “UpdateRollups" }, { name: "log_path", type: "path" }, { name: "reboot", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "reboot_timeout", type: "integer", default: 1200 }, { name: "reject_list", aliases: ["blacklist"], type: "list(string)" }, { name: "server_selection", type: "string", default: "default", choices: ["default", "managed_server", "windows_update"] }, { name: "skip_optional", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", type: "string", default: "installed", choices: ["downloaded", "installed", "searched"] }, { name: "use_scheduled_task", type: "boolean", default: "no", choices: ["no", "yes"] } ]
        return: [ { name: "failed_update_count", type: "integer" }, { name: "filtered_updates", type: "complex", params: [ { name: "filtered_reason", type: "string" }, { name: "filtered_reasons", type: "list(string)" } ] }, { name: "found_update_count", type: "integer" }, { name: "installed_update_count", type: "integer" }, { name: "reboot_required", type: "boolean" }, { name: "updates", type: "complex", params: [ { name: "categories", type: "list(string)" }, { name: "downloaded", type: "boolean" }, { name: "failure_hresult_code", type: "boolean" }, { name: "failure_msg", type: "string" }, { name: "id", type: "string" }, { name: "installed", type: "boolean" }, { name: "kb", type: "list(string)" }, { name: "title", type: "string" } ] } ]
      doc_5x:
        name: ansible.windows.win_updates
        params: [ { name: "_output_path", type: "string" }, { name: "_wait", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "accept_list", aliases: ["whitelist"], type: "list(string)" }, { name: "category_names", type: "list(string)", default: "CriticalUpdates”, “SecurityUpdates”, “UpdateRollups" }, { name: "log_path", type: "path" }, { name: "reboot", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "reboot_timeout", type: "integer", default: 1200 }, { name: "reject_list", aliases: ["blacklist"], type: "list(string)" }, { name: "server_selection", type: "string", default: "default", choices: ["default", "managed_server", "windows_update"] }, { name: "skip_optional", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "state", type: "string", default: "installed", choices: ["downloaded", "installed", "searched"] }, { name: "use_scheduled_task", type: "boolean", default: "no", choices: ["no", "yes"] } ]
        return: [ { name: "failed_update_count", type: "integer" }, { name: "filtered_updates", type: "dictionary", params: [ { name: "filtered_reason", type: "string" }, { name: "filtered_reasons", type: "list(string)" } ] }, { name: "found_update_count", type: "integer" }, { name: "installed_update_count", type: "integer" }, { name: "reboot_required", type: "boolean" }, { name: "updates", type: "dictionary", params: [ { name: "categories", type: "list(string)" }, { name: "downloaded", type: "boolean" }, { name: "failure_hresult_code", type: "boolean" }, { name: "failure_msg", type: "string" }, { name: "id", type: "string" }, { name: "installed", type: "boolean" }, { name: "kb", type: "list(string)" }, { name: "title", type: "string" } ] } ]
    - name: ansible.windows.win_uri
      doc_2x:
        name: win_uri
        params: [ { name: "body", type: "raw" }, { name: "client_cert", type: "string" }, { name: "client_cert_password", type: "string" }, { name: "content_type", type: "string" }, { name: "creates", type: "path" }, { name: "dest", type: "path" }, { name: "follow_redirects", type: "string", default: "safe", choices: ["all", "none", "safe"] }, { name: "force_basic_auth", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "headers", type: "dictionary" }, { name: "http_agent", type: "string", default: "ansible-httpget" }, { name: "maximum_redirection", type: "integer", default: 50 }, { name: "method", type: "string", default: "GET" }, { name: "proxy_password", type: "string" }, { name: "proxy_url", type: "string" }, { name: "proxy_use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "proxy_username", type: "string" }, { name: "removes", type: "path" }, { name: "return_content", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "status_code", type: "list(raw)", default: 200 }, { name: "timeout", type: "integer", default: 30 }, { name: "url", required: true, type: "string" }, { name: "url_password", aliases: ["password"], type: "string" }, { name: "url_username", aliases: ["user", "username"], type: "string" }, { name: "use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_proxy", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
        return: [ { name: "content", type: "string" }, { name: "content_length", type: "integer" }, { name: "elapsed", type: "float" }, { name: "json", type: "dictionary" }, { name: "status_code", type: "integer" }, { name: "status_description", type: "string" }, { name: "url", type: "string" } ]
      doc_3x:
        name: ansible.windows.win_uri
        params: [ { name: "body", type: "raw" }, { name: "client_cert", type: "string" }, { name: "client_cert_password", type: "string" }, { name: "content_type", type: "string" }, { name: "creates", type: "path" }, { name: "dest", type: "path" }, { name: "follow_redirects", type: "string", default: "safe", choices: ["all", "none", "safe"] }, { name: "force_basic_auth", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "headers", type: "dictionary" }, { name: "http_agent", type: "string", default: "ansible-httpget" }, { name: "maximum_redirection", type: "integer", default: 50 }, { name: "proxy_password", type: "string" }, { name: "proxy_url", type: "string" }, { name: "proxy_use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "proxy_username", type: "string" }, { name: "removes", type: "path" }, { name: "return_content", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "status_code", type: "list(raw)", default: 200 }, { name: "url", required: true, type: "string" }, { name: "url_method", aliases: ["method"], type: "string", default: "GET" }, { name: "url_password", aliases: ["password"], type: "string" }, { name: "url_timeout", aliases: ["timeout"], type: "integer", default: 30 }, { name: "url_username", aliases: ["user", "username"], type: "string" }, { name: "use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_proxy", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
        return: [ { name: "content", type: "string" }, { name: "content_length", type: "integer" }, { name: "elapsed", type: "float" }, { name: "json", type: "dictionary" }, { name: "status_code", type: "integer" }, { name: "status_description", type: "string" }, { name: "url", type: "string" } ]
      doc_4x:
        name: ansible.windows.win_uri
        params: [ { name: "body", type: "raw" }, { name: "client_cert", type: "string" }, { name: "client_cert_password", type: "string" }, { name: "content_type", type: "string" }, { name: "creates", type: "path" }, { name: "dest", type: "path" }, { name: "follow_redirects", type: "string", default: "safe", choices: ["all", "none", "safe"] }, { name: "force_basic_auth", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "headers", type: "dictionary" }, { name: "http_agent", type: "string", default: "ansible-httpget" }, { name: "maximum_redirection", type: "integer", default: 50 }, { name: "proxy_password", type: "string" }, { name: "proxy_url", type: "string" }, { name: "proxy_use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "proxy_username", type: "string" }, { name: "removes", type: "path" }, { name: "return_content", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "status_code", type: "list(integer)", default: 200 }, { name: "url", required: true, type: "string" }, { name: "url_method", aliases: ["method"], type: "string", default: "GET" }, { name: "url_password", aliases: ["password"], type: "string" }, { name: "url_timeout", aliases: ["timeout"], type: "integer", default: 30 }, { name: "url_username", aliases: ["user", "username"], type: "string" }, { name: "use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_proxy", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
        return: [ { name: "content", type: "string" }, { name: "content_length", type: "integer" }, { name: "elapsed", type: "float" }, { name: "json", type: "dictionary" }, { name: "status_code", type: "integer" }, { name: "status_description", type: "string" }, { name: "url", type: "string" } ]
      doc_5x:
        name: ansible.windows.win_uri
        params: [ { name: "body", type: "raw" }, { name: "client_cert", type: "string" }, { name: "client_cert_password", type: "string" }, { name: "content_type", type: "string" }, { name: "creates", type: "path" }, { name: "dest", type: "path" }, { name: "follow_redirects", type: "string", default: "safe", choices: ["all", "none", "safe"] }, { name: "force_basic_auth", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "headers", type: "dictionary" }, { name: "http_agent", type: "string", default: "ansible-httpget" }, { name: "maximum_redirection", type: "integer", default: 50 }, { name: "proxy_password", type: "string" }, { name: "proxy_url", type: "string" }, { name: "proxy_use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "proxy_username", type: "string" }, { name: "removes", type: "path" }, { name: "return_content", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "status_code", type: "list(integer)", default: 200 }, { name: "url", required: true, type: "string" }, { name: "url_method", aliases: ["method"], type: "string", default: "GET" }, { name: "url_password", aliases: ["password"], type: "string" }, { name: "url_timeout", aliases: ["timeout"], type: "integer", default: 30 }, { name: "url_username", aliases: ["user", "username"], type: "string" }, { name: "use_default_credential", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_proxy", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
        return: [ { name: "content", type: "string" }, { name: "content_length", type: "integer" }, { name: "elapsed", type: "float" }, { name: "json", type: "dictionary" }, { name: "status_code", type: "integer" }, { name: "status_description", type: "string" }, { name: "url", type: "string" } ]
    - name: ansible.windows.win_user
      doc_2x:
        name: win_user
        params: [ { name: "account_disabled", type: "boolean", choices: ["no", "yes"] }, { name: "account_locked", type: "raw", choices: ["no"] }, { name: "description", type: "string" }, { name: "fullname", type: "string" }, { name: "groups", type: "raw" }, { name: "groups_action", type: "string", default: "replace", choices: ["add", "replace", "remove"] }, { name: "name", required: true, type: "string" }, { name: "password", type: "string" }, { name: "password_expired", type: "boolean", choices: ["no", "yes"] }, { name: "password_never_expires", type: "boolean", choices: ["no", "yes"] }, { name: "state", type: "string", default: "present", choices: ["absent", "present", "query"] }, { name: "update_password", type: "string", default: "always", choices: ["always", "on_create"] }, { name: "user_cannot_change_password", type: "boolean", choices: ["no", "yes"] } ]
        return: [ { name: "account_disabled", type: "boolean" }, { name: "account_locked", type: "boolean" }, { name: "description", type: "string" }, { name: "fullname", type: "string" }, { name: "groups", type: "list(raw)" }, { name: "name", type: "string" }, { name: "password_expired", type: "boolean" }, { name: "password_never_expires", type: "boolean" }, { name: "path", type: "string" }, { name: "sid", type: "string" }, { name: "user_cannot_change_password", type: "boolean" } ]
      doc_3x:
        name: ansible.windows.win_user
        params: [ { name: "account_disabled", type: "boolean", choices: ["no", "yes"] }, { name: "account_locked", type: "boolean", choices: ["no", "yes"] }, { name: "description", type: "string" }, { name: "fullname", type: "string" }, { name: "groups", type: "list(raw)" }, { name: "groups_action", type: "string", default: "replace", choices: ["add", "replace", "remove"] }, { name: "home_directory", type: "string" }, { name: "login_script", type: "string" }, { name: "name", required: true, type: "string" }, { name: "password", type: "string" }, { name: "password_expired", type: "boolean", choices: ["no", "yes"] }, { name: "password_never_expires", type: "boolean", choices: ["no", "yes"] }, { name: "profile", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present", "query"] }, { name: "update_password", type: "string", default: "always", choices: ["always", "on_create"] }, { name: "user_cannot_change_password", type: "boolean", choices: ["no", "yes"] } ]
        return: [ { name: "account_disabled", type: "boolean" }, { name: "account_locked", type: "boolean" }, { name: "description", type: "string" }, { name: "fullname", type: "string" }, { name: "groups", type: "list(raw)" }, { name: "name", type: "string" }, { name: "password_expired", type: "boolean" }, { name: "password_never_expires", type: "boolean" }, { name: "path", type: "string" }, { name: "sid", type: "string" }, { name: "user_cannot_change_password", type: "boolean" } ]
      doc_4x:
        name: ansible.windows.win_user
        params: [ { name: "account_disabled", type: "boolean", choices: ["no", "yes"] }, { name: "account_locked", type: "boolean", choices: ["no", "yes"] }, { name: "description", type: "string" }, { name: "fullname", type: "string" }, { name: "groups", type: "list(string)" }, { name: "groups_action", type: "string", default: "replace", choices: ["add", "remove", "replace"] }, { name: "home_directory", type: "string" }, { name: "login_script", type: "string" }, { name: "name", required: true, type: "string" }, { name: "password", type: "string" }, { name: "password_expired", type: "boolean", choices: ["no", "yes"] }, { name: "password_never_expires", type: "boolean", choices: ["no", "yes"] }, { name: "profile", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present", "query"] }, { name: "update_password", type: "string", default: "always", choices: ["always", "on_create"] }, { name: "user_cannot_change_password", type: "boolean", choices: ["no", "yes"] } ]
        return: [ { name: "account_disabled", type: "boolean" }, { name: "account_locked", type: "boolean" }, { name: "description", type: "string" }, { name: "fullname", type: "string" }, { name: "groups", type: "list(string)" }, { name: "name", type: "string" }, { name: "password_expired", type: "boolean" }, { name: "password_never_expires", type: "boolean" }, { name: "path", type: "string" }, { name: "sid", type: "string" }, { name: "user_cannot_change_password", type: "boolean" } ]
      doc_5x:
        name: ansible.windows.win_user
        params: [ { name: "account_disabled", type: "boolean", choices: ["no", "yes"] }, { name: "account_locked", type: "boolean", choices: ["no", "yes"] }, { name: "description", type: "string" }, { name: "fullname", type: "string" }, { name: "groups", type: "list(string)" }, { name: "groups_action", type: "string", default: "replace", choices: ["add", "remove", "replace"] }, { name: "home_directory", type: "string" }, { name: "login_script", type: "string" }, { name: "name", required: true, type: "string" }, { name: "password", type: "string" }, { name: "password_expired", type: "boolean", choices: ["no", "yes"] }, { name: "password_never_expires", type: "boolean", choices: ["no", "yes"] }, { name: "profile", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present", "query"] }, { name: "update_password", type: "string", default: "always", choices: ["always", "on_create"] }, { name: "user_cannot_change_password", type: "boolean", choices: ["no", "yes"] } ]
        return: [ { name: "account_disabled", type: "boolean" }, { name: "account_locked", type: "boolean" }, { name: "description", type: "string" }, { name: "fullname", type: "string" }, { name: "groups", type: "list(string)" }, { name: "name", type: "string" }, { name: "password_expired", type: "boolean" }, { name: "password_never_expires", type: "boolean" }, { name: "path", type: "string" }, { name: "sid", type: "string" }, { name: "user_cannot_change_password", type: "boolean" } ]
    - name: ansible.windows.win_user_right
      doc_2x:
        name: win_user_right
        params: [ { name: "action", type: "string", default: "set", choices: ["add", "remove", "set"] }, { name: "name", required: true, type: "string" }, { name: "users", required: true, type: "list(raw)" } ]
        return: [ { name: "added", type: "list(raw)" }, { name: "removed", type: "list(raw)" } ]
      doc_3x:
        name: ansible.windows.win_user_right
        params: [ { name: "action", type: "string", default: "set", choices: ["add", "remove", "set"] }, { name: "name", required: true, type: "string" }, { name: "users", required: true, type: "list(raw)" } ]
        return: [ { name: "added", type: "list(raw)" }, { name: "removed", type: "list(raw)" } ]
      doc_4x:
        name: ansible.windows.win_user_right
        params: [ { name: "action", type: "string", default: "set", choices: ["add", "remove", "set"] }, { name: "name", required: true, type: "string" }, { name: "users", required: true, type: "list(string)" } ]
        return: [ { name: "added", type: "list(string)" }, { name: "removed", type: "list(string)" } ]
      doc_5x:
        name: ansible.windows.win_user_right
        params: [ { name: "action", type: "string", default: "set", choices: ["add", "remove", "set"] }, { name: "name", required: true, type: "string" }, { name: "users", required: true, type: "list(string)" } ]
        return: [ { name: "added", type: "list(string)" }, { name: "removed", type: "list(string)" } ]
    - name: ansible.windows.win_wait_for
      doc_2x:
        name: win_wait_for
        params: [ { name: "connect_timeout", type: "integer", default: 5 }, { name: "delay", type: "integer" }, { name: "exclude_hosts", type: "list(raw)" }, { name: "host", type: "string", default: "127.0.0.1" }, { name: "path", type: "path" }, { name: "port", type: "integer" }, { name: "regex", aliases: ["search_regex", "regexp"], type: "string" }, { name: "sleep", type: "integer", default: 1 }, { name: "state", type: "string", default: "started", choices: ["absent", "drained", "present", "started", "stopped"] }, { name: "timeout", type: "integer", default: 300 } ]
        return: [ { name: "elapsed", type: "float" }, { name: "wait_attempts", type: "integer" } ]
      doc_3x:
        name: ansible.windows.win_wait_for
        params: [ { name: "connect_timeout", type: "integer", default: 5 }, { name: "delay", type: "integer" }, { name: "exclude_hosts", type: "list(raw)" }, { name: "host", type: "string", default: "127.0.0.1" }, { name: "path", type: "path" }, { name: "port", type: "integer" }, { name: "regex", aliases: ["search_regex", "regexp"], type: "string" }, { name: "sleep", type: "integer", default: 1 }, { name: "state", type: "string", default: "started", choices: ["absent", "drained", "present", "started", "stopped"] }, { name: "timeout", type: "integer", default: 300 } ]
        return: [ { name: "elapsed", type: "float" }, { name: "wait_attempts", type: "integer" } ]
      doc_4x:
        name: ansible.windows.win_wait_for
        params: [ { name: "connect_timeout", type: "integer", default: 5 }, { name: "delay", type: "integer" }, { name: "exclude_hosts", type: "list(string)" }, { name: "host", type: "string", default: "127.0.0.1" }, { name: "path", type: "path" }, { name: "port", type: "integer" }, { name: "regex", aliases: ["search_regex", "regexp"], type: "string" }, { name: "sleep", type: "integer", default: 1 }, { name: "state", type: "string", default: "started", choices: ["absent", "drained", "present", "started", "stopped"] }, { name: "timeout", type: "integer", default: 300 } ]
        return: [ { name: "elapsed", type: "float" }, { name: "wait_attempts", type: "integer" } ]
      doc_5x:
        name: ansible.windows.win_wait_for
        params: [ { name: "connect_timeout", type: "integer", default: 5 }, { name: "delay", type: "integer" }, { name: "exclude_hosts", type: "list(string)" }, { name: "host", type: "string", default: "127.0.0.1" }, { name: "path", type: "path" }, { name: "port", type: "integer" }, { name: "regex", aliases: ["search_regex", "regexp"], type: "string" }, { name: "sleep", type: "integer", default: 1 }, { name: "state", type: "string", default: "started", choices: ["absent", "drained", "present", "started", "stopped"] }, { name: "timeout", type: "integer", default: 300 } ]
        return: [ { name: "elapsed", type: "float" }, { name: "wait_attempts", type: "integer" } ]
    - name: ansible.windows.win_whoami
      doc_2x:
        name: win_whoami
        return: [ { name: "account", type: "complex", params: [ { name: "account_name", type: "string" }, { name: "domain_name", type: "string" }, { name: "sid", type: "string" }, { name: "type", type: "string" } ] }, { name: "authentication_package", type: "string" }, { name: "dns_domain_name", type: "string" }, { name: "groups", type: "list(raw)" }, { name: "impersonation_level", type: "string" }, { name: "label", type: "complex", params: [ { name: "account_name", type: "string" }, { name: "domain_name", type: "string" }, { name: "sid", type: "string" }, { name: "type", type: "string" } ] }, { name: "login_domain", type: "string" }, { name: "login_time", type: "string" }, { name: "logon_id", type: "integer" }, { name: "logon_server", type: "string" }, { name: "logon_type", type: "string" }, { name: "privileges", type: "dictionary" }, { name: "rights", type: "list(raw)" }, { name: "token_type", type: "string" }, { name: "upn", type: "string" }, { name: "user_flags", type: "string" } ]
      doc_3x:
        name: ansible.windows.win_whoami
        return: [ { name: "account", type: "complex", params: [ { name: "account_name", type: "string" }, { name: "domain_name", type: "string" }, { name: "sid", type: "string" }, { name: "type", type: "string" } ] }, { name: "authentication_package", type: "string" }, { name: "dns_domain_name", type: "string" }, { name: "groups", type: "list(raw)" }, { name: "impersonation_level", type: "string" }, { name: "label", type: "complex", params: [ { name: "account_name", type: "string" }, { name: "domain_name", type: "string" }, { name: "sid", type: "string" }, { name: "type", type: "string" } ] }, { name: "login_domain", type: "string" }, { name: "login_time", type: "string" }, { name: "logon_id", type: "integer" }, { name: "logon_server", type: "string" }, { name: "logon_type", type: "string" }, { name: "privileges", type: "dictionary" }, { name: "rights", type: "list(raw)" }, { name: "token_type", type: "string" }, { name: "upn", type: "string" }, { name: "user_flags", type: "string" } ]
      doc_4x:
        name: ansible.windows.win_whoami
        return: [ { name: "account", type: "complex", params: [ { name: "account_name", type: "string" }, { name: "domain_name", type: "string" }, { name: "sid", type: "string" }, { name: "type", type: "string" } ] }, { name: "authentication_package", type: "string" }, { name: "dns_domain_name", type: "string" }, { name: "groups", type: "list(string)" }, { name: "impersonation_level", type: "string" }, { name: "label", type: "complex", params: [ { name: "account_name", type: "string" }, { name: "domain_name", type: "string" }, { name: "sid", type: "string" }, { name: "type", type: "string" } ] }, { name: "login_domain", type: "string" }, { name: "login_time", type: "string" }, { name: "logon_id", type: "integer" }, { name: "logon_server", type: "string" }, { name: "logon_type", type: "string" }, { name: "privileges", type: "dictionary" }, { name: "rights", type: "list(string)" }, { name: "token_type", type: "string" }, { name: "upn", type: "string" }, { name: "user_flags", type: "string" } ]
      doc_5x:
        name: ansible.windows.win_whoami
        return: [ { name: "account", type: "complex", params: [ { name: "account_name", type: "string" }, { name: "domain_name", type: "string" }, { name: "sid", type: "string" }, { name: "type", type: "string" } ] }, { name: "authentication_package", type: "string" }, { name: "dns_domain_name", type: "string" }, { name: "groups", type: "list(string)" }, { name: "impersonation_level", type: "string" }, { name: "label", type: "complex", params: [ { name: "account_name", type: "string" }, { name: "domain_name", type: "string" }, { name: "sid", type: "string" }, { name: "type", type: "string" } ] }, { name: "login_domain", type: "string" }, { name: "login_time", type: "string" }, { name: "logon_id", type: "integer" }, { name: "logon_server", type: "string" }, { name: "logon_type", type: "string" }, { name: "privileges", type: "dictionary" }, { name: "rights", type: "list(string)" }, { name: "token_type", type: "string" }, { name: "upn", type: "string" }, { name: "user_flags", type: "string" } ]
