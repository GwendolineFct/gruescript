---
modules:
  - name: acme_account
    fqcn: community.crypto.acme_account
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "account_key_content", type: "string" }, { name: "account_key_src", aliases: ["account_key"], type: "path" }, { name: "account_uri", type: "string" }, { name: "acme_directory", type: "string", default: "https://acme-staging.api.letsencrypt.org/directory" }, { name: "acme_version", type: "integer", default: 1, choices: [1, 2] }, { name: "allow_creation", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "contact", type: "list(raw)", default: "" }, { name: "new_account_key_content", type: "string" }, { name: "new_account_key_src", type: "path" }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "openssl"] }, { name: "state", required: true, type: "string", choices: ["absent", "changed_key", "present"] }, { name: "terms_agreed", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_source: [ { name: "account_uri", type: "string" } ]
    params_target: [ { name: "account_key_content", type: "string" }, { name: "account_key_passphrase", type: "string" }, { name: "account_key_src", aliases: ["account_key"], type: "path" }, { name: "account_uri", type: "string" }, { name: "acme_directory", required: true, type: "string" }, { name: "acme_version", required: true, type: "integer", choices: [1, 2] }, { name: "allow_creation", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "contact", type: "list(string)", default: "" }, { name: "external_account_binding", type: "dictionary", params: [ { name: "alg", required: true, type: "string", choices: ["HS256", "HS384", "HS512"] }, { name: "key", required: true, type: "string" }, { name: "kid", required: true, type: "string" } ] }, { name: "new_account_key_content", type: "string" }, { name: "new_account_key_passphrase", type: "string" }, { name: "new_account_key_src", type: "path" }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "openssl"] }, { name: "state", required: true, type: "string", choices: ["absent", "changed_key", "present"] }, { name: "terms_agreed", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_target: [ { name: "account_uri", type: "string" } ]

  - name: acme_account_info
    fqcn: community.crypto.acme_account_info
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "account_key_content", type: "string" }, { name: "account_key_src", aliases: ["account_key"], type: "path" }, { name: "account_uri", type: "string" }, { name: "acme_directory", type: "string", default: "https://acme-staging.api.letsencrypt.org/directory" }, { name: "acme_version", type: "integer", default: 1, choices: [1, 2] }, { name: "retrieve_orders", type: "string", default: "ignore", choices: ["ignore", "object_list", "url_list"] }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "openssl"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_source: [ { name: "account", type: "dictionary", params: [ { name: "contact", type: "list(raw)" }, { name: "orders", type: "string" }, { name: "public_account_key", type: "string" }, { name: "status", type: "string" } ] }, { name: "account_uri", type: "string" }, { name: "exists", type: "boolean" }, { name: "orders", type: "list(raw)", params: [ { name: "authorizations", type: "list(raw)" }, { name: "certificate", type: "string" }, { name: "error", type: "dictionary" }, { name: "expires", type: "string" }, { name: "finalize", type: "string" }, { name: "identifiers", type: "list(raw)", params: [ { name: "type", type: "string" }, { name: "value", type: "string" }, { name: "wildcard", type: "boolean" } ] }, { name: "notAfter", type: "string" }, { name: "notBefore", type: "string" }, { name: "status", type: "string" } ] } ]
    params_target: [ { name: "account_key_content", type: "string" }, { name: "account_key_passphrase", type: "string" }, { name: "account_key_src", aliases: ["account_key"], type: "path" }, { name: "account_uri", type: "string" }, { name: "acme_directory", required: true, type: "string" }, { name: "acme_version", required: true, type: "integer", choices: [1, 2] }, { name: "retrieve_orders", type: "string", default: "ignore", choices: ["ignore", "object_list", "url_list"] }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "openssl"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_target: [ { name: "account", type: "dictionary", params: [ { name: "contact", type: "list(string)" }, { name: "orders", type: "string" }, { name: "public_account_key", type: "string" }, { name: "status", type: "string" } ] }, { name: "account_uri", type: "string" }, { name: "exists", type: "boolean" }, { name: "order_uris", type: "list(string)" }, { name: "orders", type: "list(dictionary)", params: [ { name: "authorizations", type: "list(string)" }, { name: "certificate", type: "string" }, { name: "error", type: "dictionary" }, { name: "expires", type: "string" }, { name: "finalize", type: "string" }, { name: "identifiers", type: "list(dictionary)", params: [ { name: "type", type: "string" }, { name: "value", type: "string" }, { name: "wildcard", type: "boolean" } ] }, { name: "notAfter", type: "string" }, { name: "notBefore", type: "string" }, { name: "status", type: "string" } ] } ]

  - name: acme_certificate
    fqcn: community.crypto.acme_certificate
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "account_email", type: "string" }, { name: "account_key_content", type: "string" }, { name: "account_key_src", aliases: ["account_key"], type: "path" }, { name: "account_uri", type: "string" }, { name: "acme_directory", type: "string", default: "https://acme-staging.api.letsencrypt.org/directory" }, { name: "acme_version", type: "integer", default: 1, choices: [1, 2] }, { name: "agreement", type: "string" }, { name: "chain_dest", aliases: ["chain"], type: "path" }, { name: "challenge", type: "string", default: "http-01", choices: ["dns-01", "http-01", "tls-alpn-01"] }, { name: "csr", aliases: ["src"], required: true, type: "path" }, { name: "data", type: "dictionary" }, { name: "deactivate_authzs", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "dest", aliases: ["cert"], type: "path" }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "fullchain_dest", aliases: ["fullchain"], type: "path" }, { name: "modify_account", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "remaining_days", type: "integer", default: 10 }, { name: "retrieve_all_alternates", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "openssl"] }, { name: "terms_agreed", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_source: [ { name: "account_uri", type: "string" }, { name: "all_chains", type: "list(raw)", params: [ { name: "cert", type: "string" }, { name: "chain", type: "string" }, { name: "full_chain", type: "string" } ] }, { name: "authorizations", type: "dictionary" }, { name: "cert_days", type: "integer" }, { name: "challenge_data", type: "list(raw)", params: [ { name: "record", type: "string" }, { name: "resource", type: "string" }, { name: "resource_original", type: "string" }, { name: "resource_value", type: "string" } ] }, { name: "challenge_data_dns", type: "dictionary" }, { name: "finalization_uri", type: "string" }, { name: "order_uri", type: "string" } ]
    params_target: [ { name: "account_email", type: "string" }, { name: "account_key_content", type: "string" }, { name: "account_key_passphrase", type: "string" }, { name: "account_key_src", aliases: ["account_key"], type: "path" }, { name: "account_uri", type: "string" }, { name: "acme_directory", required: true, type: "string" }, { name: "acme_version", required: true, type: "integer", choices: [1, 2] }, { name: "agreement", type: "string" }, { name: "chain_dest", aliases: ["chain"], type: "path" }, { name: "challenge", type: "string", default: "http-01", choices: ["dns-01", "http-01", "tls-alpn-01"] }, { name: "csr", aliases: ["src"], type: "path" }, { name: "csr_content", type: "string" }, { name: "data", type: "dictionary" }, { name: "deactivate_authzs", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "dest", aliases: ["cert"], type: "path" }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "fullchain_dest", aliases: ["fullchain"], type: "path" }, { name: "modify_account", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "remaining_days", type: "integer", default: 10 }, { name: "retrieve_all_alternates", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "select_chain", type: "list(dictionary)", params: [ { name: "authority_key_identifier", type: "string" }, { name: "issuer", type: "dictionary" }, { name: "subject", type: "dictionary" }, { name: "subject_key_identifier", type: "string" }, { name: "test_certificates", type: "string", default: "all", choices: ["all", "first", "last"] } ] }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "openssl"] }, { name: "terms_agreed", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_target: [ { name: "account_uri", type: "string" }, { name: "all_chains", type: "list(dictionary)", params: [ { name: "cert", type: "string" }, { name: "chain", type: "string" }, { name: "full_chain", type: "string" } ] }, { name: "authorizations", type: "dictionary" }, { name: "cert_days", type: "integer" }, { name: "challenge_data", type: "list(dictionary)", params: [ { name: "record", type: "string" }, { name: "resource", type: "string" }, { name: "resource_original", type: "string" }, { name: "resource_value", type: "string" } ] }, { name: "challenge_data_dns", type: "dictionary" }, { name: "finalization_uri", type: "string" }, { name: "order_uri", type: "string" } ]

  - name: acme_certificate_revoke
    fqcn: community.crypto.acme_certificate_revoke
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "account_key_content", type: "string" }, { name: "account_key_src", aliases: ["account_key"], type: "path" }, { name: "account_uri", type: "string" }, { name: "acme_directory", type: "string", default: "https://acme-staging.api.letsencrypt.org/directory" }, { name: "acme_version", type: "integer", default: 1, choices: [1, 2] }, { name: "certificate", required: true, type: "path" }, { name: "private_key_content", type: "string" }, { name: "private_key_src", type: "path" }, { name: "revoke_reason", type: "integer" }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "openssl"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    params_target: [ { name: "account_key_content", type: "string" }, { name: "account_key_passphrase", type: "string" }, { name: "account_key_src", aliases: ["account_key"], type: "path" }, { name: "account_uri", type: "string" }, { name: "acme_directory", required: true, type: "string" }, { name: "acme_version", required: true, type: "integer", choices: [1, 2] }, { name: "certificate", required: true, type: "path" }, { name: "private_key_content", type: "string" }, { name: "private_key_passphrase", type: "string" }, { name: "private_key_src", type: "path" }, { name: "revoke_reason", type: "integer" }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "openssl"] }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]

  - name: acme_challenge_cert_helper
    fqcn: community.crypto.acme_challenge_cert_helper
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "challenge", required: true, type: "string", choices: ["tls-alpn-01"] }, { name: "challenge_data", required: true, type: "dictionary" }, { name: "private_key_content", type: "string" }, { name: "private_key_src", type: "path" } ]
    return_source: [ { name: "challenge_certificate", type: "string" }, { name: "domain", type: "string" }, { name: "identifier", type: "string" }, { name: "identifier_type", type: "string" }, { name: "regular_certificate", type: "string" } ]
    params_target: [ { name: "challenge", required: true, type: "string", choices: ["tls-alpn-01"] }, { name: "challenge_data", required: true, type: "dictionary" }, { name: "private_key_content", type: "string" }, { name: "private_key_passphrase", type: "string" }, { name: "private_key_src", type: "path" } ]
    return_target: [ { name: "challenge_certificate", type: "string" }, { name: "domain", type: "string" }, { name: "identifier", type: "string" }, { name: "identifier_type", type: "string" }, { name: "regular_certificate", type: "string" } ]

  - name: acme_inspect
    fqcn: community.crypto.acme_inspect
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "account_key_content", type: "string" }, { name: "account_key_src", aliases: ["account_key"], type: "path" }, { name: "account_uri", type: "string" }, { name: "acme_directory", type: "string", default: "https://acme-staging.api.letsencrypt.org/directory" }, { name: "acme_version", type: "integer", default: 1, choices: [1, 2] }, { name: "content", type: "string" }, { name: "fail_on_acme_error", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "method", type: "string", default: "get", choices: ["directory-only", "get", "post"] }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "openssl"] }, { name: "url", type: "string" }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_source: [ { name: "directory", type: "dictionary" }, { name: "headers", type: "dictionary" }, { name: "output_json", type: "dictionary" }, { name: "output_text", type: "string" } ]
    params_target: [ { name: "account_key_content", type: "string" }, { name: "account_key_passphrase", type: "string" }, { name: "account_key_src", aliases: ["account_key"], type: "path" }, { name: "account_uri", type: "string" }, { name: "acme_directory", required: true, type: "string" }, { name: "acme_version", required: true, type: "integer", choices: [1, 2] }, { name: "content", type: "string" }, { name: "fail_on_acme_error", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "method", type: "string", default: "get", choices: ["directory-only", "get", "post"] }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "openssl"] }, { name: "url", type: "string" }, { name: "validate_certs", type: "boolean", default: "yes", choices: ["no", "yes"] } ]
    return_target: [ { name: "directory", type: "dictionary" }, { name: "headers", type: "dictionary" }, { name: "output_json", type: "dictionary" }, { name: "output_text", type: "string" } ]

  - name: certificate_complete_chain
    fqcn: community.crypto.certificate_complete_chain
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "input_chain", required: true, type: "string" }, { name: "intermediate_certificates", type: "list(raw)", default: "" }, { name: "root_certificates", required: true, type: "list(raw)" } ]
    return_source: [ { name: "chain", type: "list(raw)" }, { name: "complete_chain", type: "list(raw)" }, { name: "root", type: "string" } ]
    params_target: [ { name: "input_chain", required: true, type: "string" }, { name: "intermediate_certificates", type: "list(path)", default: "" }, { name: "root_certificates", required: true, type: "list(path)" } ]
    return_target: [ { name: "chain", type: "list(string)" }, { name: "complete_chain", type: "list(string)" }, { name: "root", type: "string" } ]

  - name: ecs_certificate
    fqcn: community.crypto.ecs_certificate
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "additional_emails", type: "list(raw)" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "cert_expiry", type: "string" }, { name: "cert_lifetime", type: "string", choices: ["P1Y", "P2Y", "P3Y"] }, { name: "cert_type", type: "string", choices: ["ADVANTAGE_SSL", "CDS_ENT_LITE", "CDS_ENT_PRO", "CDS_GROUP", "CDS_INDIVIDUAL", "CODE_SIGNING", "EV_CODE_SIGNING", "EV_SSL", "PD_SSL", "PRIVATE_SSL", "SMIME_ENT", "STANDARD_SSL", "UC_SSL", "WILDCARD_SSL"] }, { name: "client_id", type: "integer", default: 1 }, { name: "csr", type: "string" }, { name: "ct_log", type: "boolean", choices: ["no", "yes"] }, { name: "custom_fields", type: "dictionary", params: [ { name: "date1", type: "string" }, { name: "date2", type: "string" }, { name: "date3", type: "string" }, { name: "date4", type: "string" }, { name: "date5", type: "string" }, { name: "dropdown1", type: "string" }, { name: "dropdown2", type: "string" }, { name: "dropdown3", type: "string" }, { name: "dropdown4", type: "string" }, { name: "dropdown5", type: "string" }, { name: "email1", type: "string" }, { name: "email2", type: "string" }, { name: "email3", type: "string" }, { name: "email4", type: "string" }, { name: "email5", type: "string" }, { name: "number1", type: "float" }, { name: "number2", type: "float" }, { name: "number3", type: "float" }, { name: "number4", type: "float" }, { name: "number5", type: "float" }, { name: "text1", type: "string" }, { name: "text10", type: "string" }, { name: "text11", type: "string" }, { name: "text12", type: "string" }, { name: "text13", type: "string" }, { name: "text14", type: "string" }, { name: "text15", type: "string" }, { name: "text2", type: "string" }, { name: "text3", type: "string" }, { name: "text4", type: "string" }, { name: "text5", type: "string" }, { name: "text6", type: "string" }, { name: "text7", type: "string" }, { name: "text8", type: "string" }, { name: "text9", type: "string" } ] }, { name: "eku", type: "string", choices: ["CLIENT_AUTH", "SERVER_AND_CLIENT_AUTH", "SERVER_AUTH"] }, { name: "end_user_key_storage_agreement", type: "boolean", choices: ["no", "yes"] }, { name: "entrust_api_client_cert_key_path", required: true, type: "path" }, { name: "entrust_api_client_cert_path", required: true, type: "path" }, { name: "entrust_api_key", required: true, type: "string" }, { name: "entrust_api_specification_path", type: "path", default: "https://cloud.entrust.net/EntrustCloud/documentation/cms-api-2.1.0.yaml" }, { name: "entrust_api_user", required: true, type: "string" }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "full_chain_path", type: "path" }, { name: "org", type: "string" }, { name: "ou", type: "list(raw)" }, { name: "path", required: true, type: "path" }, { name: "remaining_days", type: "integer", default: 30 }, { name: "request_type", type: "string", default: "new", choices: ["new", "reissue", "renew", "validate_only"] }, { name: "requester_email", required: true, type: "string" }, { name: "requester_name", required: true, type: "string" }, { name: "requester_phone", required: true, type: "string" }, { name: "subject_alt_name", type: "list(raw)" }, { name: "tracking_id", type: "integer" }, { name: "tracking_info", type: "string" } ]
    return_source: [ { name: "backup_file", type: "string" }, { name: "backup_full_chain_file", type: "string" }, { name: "cert_days", type: "integer" }, { name: "cert_details", type: "dictionary" }, { name: "cert_status", type: "string" }, { name: "filename", type: "string" }, { name: "serial_number", type: "integer" }, { name: "tracking_id", type: "integer" } ]
    params_target: [ { name: "additional_emails", type: "list(string)" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "cert_expiry", type: "string" }, { name: "cert_lifetime", type: "string", choices: ["P1Y", "P2Y", "P3Y"] }, { name: "cert_type", type: "string", choices: ["ADVANTAGE_SSL", "CDS_ENT_LITE", "CDS_ENT_PRO", "CDS_GROUP", "CDS_INDIVIDUAL", "CODE_SIGNING", "EV_CODE_SIGNING", "EV_SSL", "PD_SSL", "PRIVATE_SSL", "SMIME_ENT", "STANDARD_SSL", "UC_SSL", "WILDCARD_SSL"] }, { name: "client_id", type: "integer", default: 1 }, { name: "csr", type: "string" }, { name: "ct_log", type: "boolean", choices: ["no", "yes"] }, { name: "custom_fields", type: "dictionary", params: [ { name: "date1", type: "string" }, { name: "date2", type: "string" }, { name: "date3", type: "string" }, { name: "date4", type: "string" }, { name: "date5", type: "string" }, { name: "dropdown1", type: "string" }, { name: "dropdown2", type: "string" }, { name: "dropdown3", type: "string" }, { name: "dropdown4", type: "string" }, { name: "dropdown5", type: "string" }, { name: "email1", type: "string" }, { name: "email2", type: "string" }, { name: "email3", type: "string" }, { name: "email4", type: "string" }, { name: "email5", type: "string" }, { name: "number1", type: "float" }, { name: "number2", type: "float" }, { name: "number3", type: "float" }, { name: "number4", type: "float" }, { name: "number5", type: "float" }, { name: "text1", type: "string" }, { name: "text10", type: "string" }, { name: "text11", type: "string" }, { name: "text12", type: "string" }, { name: "text13", type: "string" }, { name: "text14", type: "string" }, { name: "text15", type: "string" }, { name: "text2", type: "string" }, { name: "text3", type: "string" }, { name: "text4", type: "string" }, { name: "text5", type: "string" }, { name: "text6", type: "string" }, { name: "text7", type: "string" }, { name: "text8", type: "string" }, { name: "text9", type: "string" } ] }, { name: "eku", type: "string", choices: ["CLIENT_AUTH", "SERVER_AND_CLIENT_AUTH", "SERVER_AUTH"] }, { name: "end_user_key_storage_agreement", type: "boolean", choices: ["no", "yes"] }, { name: "entrust_api_client_cert_key_path", required: true, type: "path" }, { name: "entrust_api_client_cert_path", required: true, type: "path" }, { name: "entrust_api_key", required: true, type: "string" }, { name: "entrust_api_specification_path", type: "path", default: "https://cloud.entrust.net/EntrustCloud/documentation/cms-api-2.1.0.yaml" }, { name: "entrust_api_user", required: true, type: "string" }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "full_chain_path", type: "path" }, { name: "org", type: "string" }, { name: "ou", type: "list(string)" }, { name: "path", required: true, type: "path" }, { name: "remaining_days", type: "integer", default: 30 }, { name: "request_type", type: "string", default: "new", choices: ["new", "reissue", "renew", "validate_only"] }, { name: "requester_email", required: true, type: "string" }, { name: "requester_name", required: true, type: "string" }, { name: "requester_phone", required: true, type: "string" }, { name: "subject_alt_name", type: "list(string)" }, { name: "tracking_id", type: "integer" }, { name: "tracking_info", type: "string" } ]
    return_target: [ { name: "backup_file", type: "string" }, { name: "backup_full_chain_file", type: "string" }, { name: "cert_days", type: "integer" }, { name: "cert_details", type: "dictionary" }, { name: "cert_status", type: "string" }, { name: "filename", type: "string" }, { name: "serial_number", type: "integer" }, { name: "tracking_id", type: "integer" } ]

  - name: get_certificate
    fqcn: community.crypto.get_certificate
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "ca_cert", type: "path" }, { name: "host", required: true, type: "string" }, { name: "port", required: true, type: "integer" }, { name: "proxy_host", type: "string" }, { name: "proxy_port", type: "integer", default: 8080 }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "pyopenssl"] }, { name: "timeout", type: "integer", default: 10 } ]
    return_source: [ { name: "cert", type: "string" }, { name: "expired", type: "boolean" }, { name: "extensions", type: "list(raw)", params: [ { name: "asn1_data", type: "string" }, { name: "critical", type: "boolean" }, { name: "name", type: "string" } ] }, { name: "issuer", type: "dictionary" }, { name: "not_after", type: "string" }, { name: "not_before", type: "string" }, { name: "serial_number", type: "string" }, { name: "signature_algorithm", type: "string" }, { name: "subject", type: "dictionary" }, { name: "version", type: "string" } ]
    params_target: [ { name: "ca_cert", type: "path" }, { name: "host", required: true, type: "string" }, { name: "port", required: true, type: "integer" }, { name: "proxy_host", type: "string" }, { name: "proxy_port", type: "integer", default: 8080 }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography"] }, { name: "server_name", type: "string" }, { name: "starttls", type: "string", choices: ["mysql"] }, { name: "timeout", type: "integer", default: 10 } ]
    return_target: [ { name: "cert", type: "string" }, { name: "expired", type: "boolean" }, { name: "extensions", type: "list(dictionary)", params: [ { name: "asn1_data", type: "string" }, { name: "critical", type: "boolean" }, { name: "name", type: "string" } ] }, { name: "issuer", type: "dictionary" }, { name: "not_after", type: "string" }, { name: "not_before", type: "string" }, { name: "serial_number", type: "string" }, { name: "signature_algorithm", type: "string" }, { name: "subject", type: "dictionary" }, { name: "version", type: "string" } ]

  - name: luks_device
    fqcn: community.crypto.luks_device
    collection: community.crypto
    params_source: [ { name: "device", type: "string" }, { name: "force_remove_last_key", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "keyfile", type: "path" }, { name: "name", type: "string" }, { name: "new_keyfile", type: "path" }, { name: "remove_keyfile", type: "path" }, { name: "state", type: "string", default: "present", choices: ["absent", "closed", "opened", "present"] } ]
    return_source: [ { name: "name", type: "string" } ]
    params_target: [ { name: "cipher", type: "string" }, { name: "device", type: "string" }, { name: "force_remove_last_key", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "hash", type: "string" }, { name: "keyfile", type: "path" }, { name: "keysize", type: "integer" }, { name: "label", type: "string" }, { name: "name", type: "string" }, { name: "new_keyfile", type: "path" }, { name: "new_passphrase", type: "string" }, { name: "passphrase", type: "string" }, { name: "pbkdf", type: "dictionary", params: [ { name: "algorithm", type: "string", choices: ["argon2i", "argon2id", "pbkdf2"] }, { name: "iteration_count", type: "integer" }, { name: "iteration_time", type: "float" }, { name: "memory", type: "integer" }, { name: "parallel", type: "integer" } ] }, { name: "remove_keyfile", type: "path" }, { name: "remove_passphrase", type: "string" }, { name: "sector_size", type: "integer" }, { name: "state", type: "string", default: "present", choices: ["absent", "closed", "opened", "present"] }, { name: "type", type: "string", choices: ["luks1", "luks2"] }, { name: "uuid", type: "string" } ]
    return_target: [ { name: "name", type: "string" } ]

  - name: openssh_cert
    fqcn: community.crypto.openssh_cert
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "identifier", type: "string" }, { name: "mode", type: "string" }, { name: "options", type: "list(raw)" }, { name: "owner", type: "string" }, { name: "path", required: true, type: "path" }, { name: "principals", type: "list(raw)" }, { name: "public_key", type: "path" }, { name: "selevel", type: "string", default: "s0" }, { name: "serial_number", type: "integer" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "signing_key", type: "path" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "type", type: "string", choices: ["host", "user"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "valid_at", type: "string" }, { name: "valid_from", type: "string" }, { name: "valid_to", type: "string" } ]
    return_source: [ { name: "filename", type: "string" }, { name: "info", type: "list(raw)" }, { name: "type", type: "string" } ]
    params_target: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "identifier", type: "string" }, { name: "ignore_timestamps", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "mode", type: "raw" }, { name: "options", type: "list(string)" }, { name: "owner", type: "string" }, { name: "path", required: true, type: "path" }, { name: "pkcs11_provider", type: "string" }, { name: "principals", type: "list(string)" }, { name: "public_key", type: "path" }, { name: "regenerate", type: "string", default: "partial_idempotence", choices: ["always", "fail", "full_idempotence", "never", "partial_idempotence"] }, { name: "selevel", type: "string" }, { name: "serial_number", type: "integer" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "signature_algorithm", type: "string", choices: ["rsa-sha2-256", "rsa-sha2-512", "ssh-rsa"] }, { name: "signing_key", type: "path" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "type", type: "string", choices: ["host", "user"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_agent", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "valid_at", type: "string" }, { name: "valid_from", type: "string" }, { name: "valid_to", type: "string" } ]
    return_target: [ { name: "filename", type: "string" }, { name: "info", type: "list(string)" }, { name: "type", type: "string" } ]

  - name: openssh_keypair
    fqcn: community.crypto.openssh_keypair
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "comment", type: "string" }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "mode", type: "string" }, { name: "owner", type: "string" }, { name: "path", required: true, type: "path" }, { name: "selevel", type: "string", default: "s0" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "size", type: "integer" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "type", type: "string", default: "rsa", choices: ["dsa", "ecdsa", "ed25519", "rsa", "rsa1"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_source: [ { name: "comment", type: "string" }, { name: "filename", type: "string" }, { name: "fingerprint", type: "string" }, { name: "public_key", type: "string" }, { name: "size", type: "integer" }, { name: "type", type: "string" } ]
    params_target: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backend", type: "string", default: "auto", choices: ["auto", "cryptography", "opensshbin"] }, { name: "comment", type: "string" }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "mode", type: "raw" }, { name: "owner", type: "string" }, { name: "passphrase", type: "string" }, { name: "path", required: true, type: "path" }, { name: "private_key_format", type: "string", default: "auto", choices: ["auto"] }, { name: "regenerate", type: "string", default: "partial_idempotence", choices: ["always", "fail", "full_idempotence", "never", "partial_idempotence"] }, { name: "selevel", type: "string" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "size", type: "integer" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "type", type: "string", default: "rsa", choices: ["dsa", "ecdsa", "ed25519", "rsa", "rsa1"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_target: [ { name: "comment", type: "string" }, { name: "filename", type: "string" }, { name: "fingerprint", type: "string" }, { name: "public_key", type: "string" }, { name: "size", type: "integer" }, { name: "type", type: "string" } ]

  - name: openssl_csr
    fqcn: community.crypto.openssl_csr
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "authority_cert_issuer", type: "list(raw)" }, { name: "authority_cert_serial_number", type: "integer" }, { name: "authority_key_identifier", type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "basic_constraints", aliases: ["basicConstraints"], type: "list(raw)" }, { name: "basic_constraints_critical", aliases: ["basicConstraints_critical"], type: "boolean", choices: ["no", "yes"] }, { name: "common_name", aliases: ["CN", "commonName"], type: "string" }, { name: "country_name", aliases: ["C", "countryName"], type: "string" }, { name: "create_subject_key_identifier", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "digest", type: "string", default: "sha256" }, { name: "email_address", aliases: ["E", "emailAddress"], type: "string" }, { name: "extended_key_usage", aliases: ["extKeyUsage", "extendedKeyUsage"], type: "list(raw)" }, { name: "extended_key_usage_critical", aliases: ["extKeyUsage_critical", "extendedKeyUsage_critical"], type: "boolean", choices: ["no", "yes"] }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "key_usage", aliases: ["keyUsage"], type: "list(raw)" }, { name: "key_usage_critical", aliases: ["keyUsage_critical"], type: "boolean", choices: ["no", "yes"] }, { name: "locality_name", aliases: ["L", "localityName"], type: "string" }, { name: "mode", type: "string" }, { name: "ocsp_must_staple", aliases: ["ocspMustStaple"], type: "boolean", choices: ["no", "yes"] }, { name: "ocsp_must_staple_critical", aliases: ["ocspMustStaple_critical"], type: "boolean", choices: ["no", "yes"] }, { name: "organization_name", aliases: ["O", "organizationName"], type: "string" }, { name: "organizational_unit_name", aliases: ["OU", "organizationalUnitName"], type: "string" }, { name: "owner", type: "string" }, { name: "path", required: true, type: "path" }, { name: "privatekey_passphrase", type: "string" }, { name: "privatekey_path", type: "path" }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "pyopenssl"] }, { name: "selevel", type: "string", default: "s0" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "state_or_province_name", aliases: ["ST", "stateOrProvinceName"], type: "string" }, { name: "subject", type: "dictionary" }, { name: "subject_alt_name", aliases: ["subjectAltName"], type: "list(raw)" }, { name: "subject_alt_name_critical", aliases: ["subjectAltName_critical"], type: "boolean", choices: ["no", "yes"] }, { name: "subject_key_identifier", type: "string" }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_common_name_for_san", aliases: ["useCommonNameForSAN"], type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "version", type: "integer", default: 1 } ]
    return_source: [ { name: "backup_file", type: "string" }, { name: "basicConstraints", type: "list(raw)" }, { name: "extendedKeyUsage", type: "list(raw)" }, { name: "filename", type: "string" }, { name: "keyUsage", type: "list(raw)" }, { name: "ocsp_must_staple", type: "boolean" }, { name: "privatekey", type: "string" }, { name: "subject", type: "list(raw)" }, { name: "subjectAltName", type: "list(raw)" } ]
    params_target: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "authority_cert_issuer", type: "list(string)" }, { name: "authority_cert_serial_number", type: "integer" }, { name: "authority_key_identifier", type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "basic_constraints", aliases: ["basicConstraints"], type: "list(string)" }, { name: "basic_constraints_critical", aliases: ["basicConstraints_critical"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "common_name", aliases: ["CN", "commonName"], type: "string" }, { name: "country_name", aliases: ["C", "countryName"], type: "string" }, { name: "create_subject_key_identifier", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "crl_distribution_points", type: "list(dictionary)", params: [ { name: "crl_issuer", type: "list(string)" }, { name: "full_name", type: "list(string)" }, { name: "reasons", type: "list(string)", choices: ["aa_compromise", "affiliation_changed", "ca_compromise", "certificate_hold", "cessation_of_operation", "key_compromise", "privilege_withdrawn", "superseded"] }, { name: "relative_name", type: "list(string)" } ] }, { name: "digest", type: "string", default: "sha256" }, { name: "email_address", aliases: ["E", "emailAddress"], type: "string" }, { name: "extended_key_usage", aliases: ["extKeyUsage", "extendedKeyUsage"], type: "list(string)" }, { name: "extended_key_usage_critical", aliases: ["extKeyUsage_critical", "extendedKeyUsage_critical"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "key_usage", aliases: ["keyUsage"], type: "list(string)" }, { name: "key_usage_critical", aliases: ["keyUsage_critical"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "locality_name", aliases: ["L", "localityName"], type: "string" }, { name: "mode", type: "raw" }, { name: "name_constraints_critical", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "name_constraints_excluded", type: "list(string)" }, { name: "name_constraints_permitted", type: "list(string)" }, { name: "ocsp_must_staple", aliases: ["ocspMustStaple"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "ocsp_must_staple_critical", aliases: ["ocspMustStaple_critical"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "organization_name", aliases: ["O", "organizationName"], type: "string" }, { name: "organizational_unit_name", aliases: ["OU", "organizationalUnitName"], type: "string" }, { name: "owner", type: "string" }, { name: "path", required: true, type: "path" }, { name: "privatekey_content", type: "string" }, { name: "privatekey_passphrase", type: "string" }, { name: "privatekey_path", type: "path" }, { name: "return_content", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography"] }, { name: "selevel", type: "string" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "state_or_province_name", aliases: ["ST", "stateOrProvinceName"], type: "string" }, { name: "subject", type: "dictionary" }, { name: "subject_alt_name", aliases: ["subjectAltName"], type: "list(string)" }, { name: "subject_alt_name_critical", aliases: ["subjectAltName_critical"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "subject_key_identifier", type: "string" }, { name: "subject_ordered", type: "list(dictionary)" }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "use_common_name_for_san", aliases: ["useCommonNameForSAN"], type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "version", type: "integer", default: 1, choices: [1] } ]
    return_target: [ { name: "backup_file", type: "string" }, { name: "basicConstraints", type: "list(string)" }, { name: "csr", type: "string" }, { name: "extendedKeyUsage", type: "list(string)" }, { name: "filename", type: "string" }, { name: "keyUsage", type: "list(string)" }, { name: "name_constraints_excluded", type: "list(string)" }, { name: "name_constraints_permitted", type: "list(string)" }, { name: "ocsp_must_staple", type: "boolean" }, { name: "privatekey", type: "string" }, { name: "subject", type: "list(list(raw))" }, { name: "subjectAltName", type: "list(string)" } ]

  - name: openssl_csr_info
    fqcn: community.crypto.openssl_csr_info
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "path", required: true, type: "path" }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "pyopenssl"] } ]
    return_source: [ { name: "authority_cert_issuer", type: "list(raw)" }, { name: "authority_cert_serial_number", type: "integer" }, { name: "authority_key_identifier", type: "string" }, { name: "basic_constraints", type: "list(raw)" }, { name: "basic_constraints_critical", type: "boolean" }, { name: "extended_key_usage", type: "list(raw)" }, { name: "extended_key_usage_critical", type: "boolean" }, { name: "extensions_by_oid", type: "dictionary", params: [ { name: "critical", type: "boolean" }, { name: "value", type: "string" } ] }, { name: "key_usage", type: "string" }, { name: "key_usage_critical", type: "boolean" }, { name: "ocsp_must_staple", type: "boolean" }, { name: "ocsp_must_staple_critical", type: "boolean" }, { name: "public_key", type: "string" }, { name: "public_key_fingerprints", type: "dictionary" }, { name: "signature_valid", type: "boolean" }, { name: "subject", type: "dictionary" }, { name: "subject_alt_name", type: "list(raw)" }, { name: "subject_alt_name_critical", type: "boolean" }, { name: "subject_key_identifier", type: "string" }, { name: "subject_ordered", type: "list(raw)" } ]
    params_target: [ { name: "content", type: "string" }, { name: "path", type: "path" }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography"] } ]
    return_target: [ { name: "authority_cert_issuer", type: "list(string)" }, { name: "authority_cert_serial_number", type: "integer" }, { name: "authority_key_identifier", type: "string" }, { name: "basic_constraints", type: "list(string)" }, { name: "basic_constraints_critical", type: "boolean" }, { name: "extended_key_usage", type: "list(string)" }, { name: "extended_key_usage_critical", type: "boolean" }, { name: "extensions_by_oid", type: "dictionary", params: [ { name: "critical", type: "boolean" }, { name: "value", type: "string" } ] }, { name: "key_usage", type: "string" }, { name: "key_usage_critical", type: "boolean" }, { name: "name_constraints_critical", type: "boolean" }, { name: "name_constraints_excluded", type: "list(string)" }, { name: "name_constraints_permitted", type: "list(string)" }, { name: "ocsp_must_staple", type: "boolean" }, { name: "ocsp_must_staple_critical", type: "boolean" }, { name: "public_key", type: "string" }, { name: "public_key_data", type: "dictionary", params: [ { name: "curve", type: "string" }, { name: "exponent", type: "integer" }, { name: "exponent_size", type: "integer" }, { name: "g", type: "integer" }, { name: "modulus", type: "integer" }, { name: "p", type: "integer" }, { name: "q", type: "integer" }, { name: "size", type: "integer" }, { name: "x", type: "integer" }, { name: "y", type: "integer" } ] }, { name: "public_key_fingerprints", type: "dictionary" }, { name: "public_key_type", type: "string" }, { name: "signature_valid", type: "boolean" }, { name: "subject", type: "dictionary" }, { name: "subject_alt_name", type: "list(string)" }, { name: "subject_alt_name_critical", type: "boolean" }, { name: "subject_key_identifier", type: "string" }, { name: "subject_ordered", type: "list(list(raw))" } ]

  - name: openssl_dhparam
    fqcn: community.crypto.openssl_dhparam
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "mode", type: "string" }, { name: "owner", type: "string" }, { name: "path", required: true, type: "path" }, { name: "selevel", type: "string", default: "s0" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "size", type: "integer", default: 4096 }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_source: [ { name: "backup_file", type: "string" }, { name: "filename", type: "string" }, { name: "size", type: "integer" } ]
    params_target: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "mode", type: "raw" }, { name: "owner", type: "string" }, { name: "path", required: true, type: "path" }, { name: "return_content", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "openssl"] }, { name: "selevel", type: "string" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "size", type: "integer", default: 4096 }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_target: [ { name: "backup_file", type: "string" }, { name: "dhparams", type: "string" }, { name: "filename", type: "string" }, { name: "size", type: "integer" } ]

  - name: openssl_pkcs12
    fqcn: community.crypto.openssl_pkcs12
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "action", type: "string", default: "export", choices: ["export", "parse"] }, { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "certificate_path", type: "path" }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "friendly_name", aliases: ["name"], type: "string" }, { name: "group", type: "string" }, { name: "iter_size", type: "integer", default: 2048 }, { name: "maciter_size", type: "integer", default: 1 }, { name: "mode", type: "string" }, { name: "other_certificates", aliases: ["ca_certificates"], type: "list(raw)" }, { name: "owner", type: "string" }, { name: "passphrase", type: "string" }, { name: "path", required: true, type: "path" }, { name: "privatekey_passphrase", type: "string" }, { name: "privatekey_path", type: "path" }, { name: "selevel", type: "string", default: "s0" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "src", type: "path" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_source: [ { name: "backup_file", type: "string" }, { name: "filename", type: "string" }, { name: "privatekey", type: "string" } ]
    params_target: [ { name: "action", type: "string", default: "export", choices: ["export", "parse"] }, { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "certificate_path", type: "path" }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "friendly_name", aliases: ["name"], type: "string" }, { name: "group", type: "string" }, { name: "iter_size", type: "integer" }, { name: "maciter_size", type: "integer" }, { name: "mode", type: "raw" }, { name: "other_certificates", aliases: ["ca_certificates"], type: "list(path)" }, { name: "other_certificates_parse_all", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "owner", type: "string" }, { name: "passphrase", type: "string" }, { name: "path", required: true, type: "path" }, { name: "privatekey_passphrase", type: "string" }, { name: "privatekey_path", type: "path" }, { name: "return_content", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "pyopenssl"] }, { name: "selevel", type: "string" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "src", type: "path" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_target: [ { name: "backup_file", type: "string" }, { name: "filename", type: "string" }, { name: "pkcs12", type: "string" }, { name: "privatekey", type: "string" } ]

  - name: openssl_privatekey
    fqcn: community.crypto.openssl_privatekey
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "cipher", type: "string" }, { name: "curve", type: "string", choices: ["brainpoolP256r1", "brainpoolP384r1", "brainpoolP512r1", "secp192r1", "secp224r1", "secp256k1", "secp256r1", "secp384r1", "secp521r1", "sect163k1", "sect163r2", "sect233k1", "sect233r1", "sect283k1", "sect283r1", "sect409k1", "sect409r1", "sect571k1", "sect571r1"] }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "mode", type: "string" }, { name: "owner", type: "string" }, { name: "passphrase", type: "string" }, { name: "path", required: true, type: "path" }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "pyopenssl"] }, { name: "selevel", type: "string", default: "s0" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "size", type: "integer", default: 4096 }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "type", type: "string", default: "RSA", choices: ["DSA", "ECC", "Ed25519", "Ed448", "RSA", "X25519", "X448"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_source: [ { name: "backup_file", type: "string" }, { name: "curve", type: "string" }, { name: "filename", type: "string" }, { name: "fingerprint", type: "dictionary" }, { name: "size", type: "integer" }, { name: "type", type: "string" } ]
    params_target: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "cipher", type: "string" }, { name: "curve", type: "string", choices: ["brainpoolP256r1", "brainpoolP384r1", "brainpoolP512r1", "secp192r1", "secp224r1", "secp256k1", "secp256r1", "secp384r1", "secp521r1", "sect163k1", "sect163r2", "sect233k1", "sect233r1", "sect283k1", "sect283r1", "sect409k1", "sect409r1", "sect571k1", "sect571r1"] }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "format", type: "string", default: "auto_ignore", choices: ["auto", "auto_ignore", "pkcs1", "pkcs8", "raw"] }, { name: "format_mismatch", type: "string", default: "regenerate", choices: ["convert", "regenerate"] }, { name: "group", type: "string" }, { name: "mode", type: "raw" }, { name: "owner", type: "string" }, { name: "passphrase", type: "string" }, { name: "path", required: true, type: "path" }, { name: "regenerate", type: "string", default: "full_idempotence", choices: ["always", "fail", "full_idempotence", "never", "partial_idempotence"] }, { name: "return_content", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography"] }, { name: "selevel", type: "string" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "size", type: "integer", default: 4096 }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "type", type: "string", default: "RSA", choices: ["DSA", "ECC", "Ed25519", "Ed448", "RSA", "X25519", "X448"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_target: [ { name: "backup_file", type: "string" }, { name: "curve", type: "string" }, { name: "filename", type: "string" }, { name: "fingerprint", type: "dictionary" }, { name: "privatekey", type: "string" }, { name: "size", type: "integer" }, { name: "type", type: "string" } ]

  - name: openssl_privatekey_info
    fqcn: community.crypto.openssl_privatekey_info
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "passphrase", type: "string" }, { name: "path", required: true, type: "path" }, { name: "return_private_key_data", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "pyopenssl"] } ]
    return_source: [ { name: "can_load_key", type: "boolean" }, { name: "can_parse_key", type: "boolean" }, { name: "key_is_consistent", type: "boolean" }, { name: "private_data", type: "dictionary" }, { name: "public_data", type: "dictionary" }, { name: "public_key", type: "string" }, { name: "public_key_fingerprints", type: "dictionary" }, { name: "type", type: "string" } ]
    params_target: [ { name: "check_consistency", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "content", type: "string" }, { name: "passphrase", type: "string" }, { name: "path", type: "path" }, { name: "return_private_key_data", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography"] } ]
    return_target: [ { name: "can_load_key", type: "boolean" }, { name: "can_parse_key", type: "boolean" }, { name: "key_is_consistent", type: "boolean" }, { name: "private_data", type: "dictionary" }, { name: "public_data", type: "dictionary", params: [ { name: "curve", type: "string" }, { name: "exponent", type: "integer" }, { name: "exponent_size", type: "integer" }, { name: "g", type: "integer" }, { name: "modulus", type: "integer" }, { name: "p", type: "integer" }, { name: "q", type: "integer" }, { name: "size", type: "integer" }, { name: "x", type: "integer" }, { name: "y", type: "integer" } ] }, { name: "public_key", type: "string" }, { name: "public_key_fingerprints", type: "dictionary" }, { name: "type", type: "string" } ]

  - name: openssl_publickey
    fqcn: community.crypto.openssl_publickey
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "format", type: "string", default: "PEM", choices: ["OpenSSH", "PEM"] }, { name: "group", type: "string" }, { name: "mode", type: "string" }, { name: "owner", type: "string" }, { name: "path", required: true, type: "path" }, { name: "privatekey_passphrase", type: "string" }, { name: "privatekey_path", type: "path" }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "pyopenssl"] }, { name: "selevel", type: "string", default: "s0" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_source: [ { name: "backup_file", type: "string" }, { name: "filename", type: "string" }, { name: "fingerprint", type: "dictionary" }, { name: "format", type: "string" }, { name: "privatekey", type: "string" } ]
    params_target: [ { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "format", type: "string", default: "PEM", choices: ["OpenSSH", "PEM"] }, { name: "group", type: "string" }, { name: "mode", type: "raw" }, { name: "owner", type: "string" }, { name: "path", required: true, type: "path" }, { name: "privatekey_content", type: "string" }, { name: "privatekey_passphrase", type: "string" }, { name: "privatekey_path", type: "path" }, { name: "return_content", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography"] }, { name: "selevel", type: "string" }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_target: [ { name: "backup_file", type: "string" }, { name: "filename", type: "string" }, { name: "fingerprint", type: "dictionary" }, { name: "format", type: "string" }, { name: "privatekey", type: "string" }, { name: "publickey", type: "string" } ]

  - name: x509_certificate
    fqcn: community.crypto.x509_certificate
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "acme_accountkey_path", type: "path" }, { name: "acme_chain", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "acme_challenge_path", type: "path" }, { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "csr_path", type: "path" }, { name: "entrust_api_client_cert_key_path", type: "path" }, { name: "entrust_api_client_cert_path", type: "path" }, { name: "entrust_api_key", type: "string" }, { name: "entrust_api_specification_path", type: "path", default: "https://cloud.entrust.net/EntrustCloud/documentation/cms-api-2.1.0.yaml" }, { name: "entrust_api_user", type: "string" }, { name: "entrust_cert_type", type: "string", default: "STANDARD_SSL", choices: ["ADVANTAGE_SSL", "CDS_ENT_LITE", "CDS_ENT_PRO", "EV_SSL", "PD_SSL", "PRIVATE_SSL", "SMIME_ENT", "STANDARD_SSL", "UC_SSL", "WILDCARD_SSL"] }, { name: "entrust_not_after", type: "string", default: "+365d" }, { name: "entrust_requester_email", type: "string" }, { name: "entrust_requester_name", type: "string" }, { name: "entrust_requester_phone", type: "string" }, { name: "extended_key_usage", aliases: ["extendedKeyUsage"], type: "list(raw)" }, { name: "extended_key_usage_strict", aliases: ["extendedKeyUsage_strict"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "has_expired", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "invalid_at", type: "string" }, { name: "issuer", type: "dictionary" }, { name: "issuer_strict", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "key_usage", aliases: ["keyUsage"], type: "list(raw)" }, { name: "key_usage_strict", aliases: ["keyUsage_strict"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "mode", type: "string" }, { name: "not_after", aliases: ["notAfter"], type: "string" }, { name: "not_before", aliases: ["notBefore"], type: "string" }, { name: "ownca_create_authority_key_identifier", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "ownca_create_subject_key_identifier", type: "string", default: "create_if_not_provided", choices: ["always_create", "create_if_not_provided", "never_create"] }, { name: "ownca_digest", type: "string", default: "sha256" }, { name: "ownca_not_after", type: "string", default: "+3650d" }, { name: "ownca_not_before", type: "string", default: "+0s" }, { name: "ownca_path", type: "path" }, { name: "ownca_privatekey_passphrase", type: "string" }, { name: "ownca_privatekey_path", type: "path" }, { name: "ownca_version", type: "integer", default: 3 }, { name: "owner", type: "string" }, { name: "path", required: true, type: "path" }, { name: "privatekey_passphrase", type: "string" }, { name: "privatekey_path", type: "path" }, { name: "provider", type: "string", choices: ["acme", "assertonly", "entrust", "ownca", "selfsigned"] }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "pyopenssl"] }, { name: "selevel", type: "string", default: "s0" }, { name: "selfsigned_create_subject_key_identifier", type: "string", default: "create_if_not_provided", choices: ["always_create", "create_if_not_provided", "never_create"] }, { name: "selfsigned_digest", type: "string", default: "sha256" }, { name: "selfsigned_not_after", aliases: ["selfsigned_notAfter"], type: "string", default: "+3650d" }, { name: "selfsigned_not_before", aliases: ["selfsigned_notBefore"], type: "string", default: "+0s" }, { name: "selfsigned_version", type: "integer", default: 3 }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "signature_algorithms", type: "list(raw)" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "subject", type: "dictionary" }, { name: "subject_alt_name", aliases: ["subjectAltName"], type: "list(raw)" }, { name: "subject_alt_name_strict", aliases: ["subjectAltName_strict"], type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "subject_strict", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "valid_at", type: "string" }, { name: "valid_in", type: "string" }, { name: "version", type: "integer" } ]
    return_source: [ { name: "backup_file", type: "string" }, { name: "filename", type: "string" } ]
    params_target: [ { name: "acme_accountkey_path", type: "path" }, { name: "acme_chain", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "acme_challenge_path", type: "path" }, { name: "acme_directory", type: "string", default: "https://acme-v02.api.letsencrypt.org/directory" }, { name: "attributes", aliases: ["attr"], type: "string" }, { name: "backup", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "csr_content", type: "string" }, { name: "csr_path", type: "path" }, { name: "entrust_api_client_cert_key_path", type: "path" }, { name: "entrust_api_client_cert_path", type: "path" }, { name: "entrust_api_key", type: "string" }, { name: "entrust_api_specification_path", type: "path", default: "https://cloud.entrust.net/EntrustCloud/documentation/cms-api-2.1.0.yaml" }, { name: "entrust_api_user", type: "string" }, { name: "entrust_cert_type", type: "string", default: "STANDARD_SSL", choices: ["ADVANTAGE_SSL", "CDS_ENT_LITE", "CDS_ENT_PRO", "EV_SSL", "PD_SSL", "PRIVATE_SSL", "SMIME_ENT", "STANDARD_SSL", "UC_SSL", "WILDCARD_SSL"] }, { name: "entrust_not_after", type: "string", default: "+365d" }, { name: "entrust_requester_email", type: "string" }, { name: "entrust_requester_name", type: "string" }, { name: "entrust_requester_phone", type: "string" }, { name: "force", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "group", type: "string" }, { name: "ignore_timestamps", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "mode", type: "raw" }, { name: "ownca_content", type: "string" }, { name: "ownca_create_authority_key_identifier", type: "boolean", default: "yes", choices: ["no", "yes"] }, { name: "ownca_create_subject_key_identifier", type: "string", default: "create_if_not_provided", choices: ["always_create", "create_if_not_provided", "never_create"] }, { name: "ownca_digest", type: "string", default: "sha256" }, { name: "ownca_not_after", type: "string", default: "+3650d" }, { name: "ownca_not_before", type: "string", default: "+0s" }, { name: "ownca_path", type: "path" }, { name: "ownca_privatekey_content", type: "string" }, { name: "ownca_privatekey_passphrase", type: "string" }, { name: "ownca_privatekey_path", type: "path" }, { name: "ownca_version", type: "integer", default: 3 }, { name: "owner", type: "string" }, { name: "path", required: true, type: "path" }, { name: "privatekey_content", type: "string" }, { name: "privatekey_passphrase", type: "string" }, { name: "privatekey_path", type: "path" }, { name: "provider", type: "string", choices: ["acme", "entrust", "ownca", "selfsigned"] }, { name: "return_content", type: "boolean", default: "no", choices: ["no", "yes"] }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography"] }, { name: "selevel", type: "string" }, { name: "selfsigned_create_subject_key_identifier", type: "string", default: "create_if_not_provided", choices: ["always_create", "create_if_not_provided", "never_create"] }, { name: "selfsigned_digest", type: "string", default: "sha256" }, { name: "selfsigned_not_after", aliases: ["selfsigned_notAfter"], type: "string", default: "+3650d" }, { name: "selfsigned_not_before", aliases: ["selfsigned_notBefore"], type: "string", default: "+0s" }, { name: "selfsigned_version", type: "integer", default: 3 }, { name: "serole", type: "string" }, { name: "setype", type: "string" }, { name: "seuser", type: "string" }, { name: "state", type: "string", default: "present", choices: ["absent", "present"] }, { name: "unsafe_writes", type: "boolean", default: "no", choices: ["no", "yes"] } ]
    return_target: [ { name: "backup_file", type: "string" }, { name: "certificate", type: "string" }, { name: "filename", type: "string" } ]

  - name: x509_certificate_info
    fqcn: community.crypto.x509_certificate_info
    collection: community.crypto
    breaking: true
    breaking_params: true
    params_source: [ { name: "path", required: true, type: "path" }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography", "pyopenssl"] }, { name: "valid_at", type: "dictionary" } ]
    return_source: [ { name: "authority_cert_issuer", type: "list(raw)" }, { name: "authority_cert_serial_number", type: "integer" }, { name: "authority_key_identifier", type: "string" }, { name: "basic_constraints", type: "list(raw)" }, { name: "basic_constraints_critical", type: "boolean" }, { name: "expired", type: "boolean" }, { name: "extended_key_usage", type: "list(raw)" }, { name: "extended_key_usage_critical", type: "boolean" }, { name: "extensions_by_oid", type: "dictionary", params: [ { name: "critical", type: "boolean" }, { name: "value", type: "string" } ] }, { name: "issuer", type: "dictionary" }, { name: "issuer_ordered", type: "list(raw)" }, { name: "key_usage", type: "string" }, { name: "key_usage_critical", type: "boolean" }, { name: "not_after", type: "string" }, { name: "not_before", type: "string" }, { name: "ocsp_must_staple", type: "boolean" }, { name: "ocsp_must_staple_critical", type: "boolean" }, { name: "ocsp_uri", type: "string" }, { name: "public_key", type: "string" }, { name: "public_key_fingerprints", type: "dictionary" }, { name: "serial_number", type: "integer" }, { name: "signature_algorithm", type: "string" }, { name: "subject", type: "dictionary" }, { name: "subject_alt_name", type: "list(raw)" }, { name: "subject_alt_name_critical", type: "boolean" }, { name: "subject_key_identifier", type: "string" }, { name: "subject_ordered", type: "list(raw)" }, { name: "valid_at", type: "dictionary" }, { name: "version", type: "integer" } ]
    params_target: [ { name: "content", type: "string" }, { name: "path", type: "path" }, { name: "select_crypto_backend", type: "string", default: "auto", choices: ["auto", "cryptography"] }, { name: "valid_at", type: "dictionary" } ]
    return_target: [ { name: "authority_cert_issuer", type: "list(string)" }, { name: "authority_cert_serial_number", type: "integer" }, { name: "authority_key_identifier", type: "string" }, { name: "basic_constraints", type: "list(string)" }, { name: "basic_constraints_critical", type: "boolean" }, { name: "expired", type: "boolean" }, { name: "extended_key_usage", type: "list(string)" }, { name: "extended_key_usage_critical", type: "boolean" }, { name: "extensions_by_oid", type: "dictionary", params: [ { name: "critical", type: "boolean" }, { name: "value", type: "string" } ] }, { name: "fingerprints", type: "dictionary" }, { name: "issuer", type: "dictionary" }, { name: "issuer_ordered", type: "list(list(raw))" }, { name: "key_usage", type: "string" }, { name: "key_usage_critical", type: "boolean" }, { name: "not_after", type: "string" }, { name: "not_before", type: "string" }, { name: "ocsp_must_staple", type: "boolean" }, { name: "ocsp_must_staple_critical", type: "boolean" }, { name: "ocsp_uri", type: "string" }, { name: "public_key", type: "string" }, { name: "public_key_data", type: "dictionary", params: [ { name: "curve", type: "string" }, { name: "exponent", type: "integer" }, { name: "exponent_size", type: "integer" }, { name: "g", type: "integer" }, { name: "modulus", type: "integer" }, { name: "p", type: "integer" }, { name: "q", type: "integer" }, { name: "size", type: "integer" }, { name: "x", type: "integer" }, { name: "y", type: "integer" } ] }, { name: "public_key_fingerprints", type: "dictionary" }, { name: "public_key_type", type: "string" }, { name: "serial_number", type: "integer" }, { name: "signature_algorithm", type: "string" }, { name: "subject", type: "dictionary" }, { name: "subject_alt_name", type: "list(string)" }, { name: "subject_alt_name_critical", type: "boolean" }, { name: "subject_key_identifier", type: "string" }, { name: "subject_ordered", type: "list(list(raw))" }, { name: "valid_at", type: "dictionary" }, { name: "version", type: "integer" } ]

